- name: Ensure Fluent Bit configuration directory exists
  file:
    path: "{{ data_root }}/infra/fluent-bit"
    state: directory

# docker run --rm -it fluent/fluent-bit -i forward --help
- name: Update Fluent Bit configuration
  copy:
    dest: "{{ data_root }}/infra/fluent-bit/fluent-bit.conf"
    content: |
      [SERVICE]
          Flush             5
          Daemon            Off
          Log_Level         info

      [INPUT]
          Name              forward
          Unix_path         /fluent-bit/etc/fluentd.sock
          Tag               {{ env }}

      [FILTER]
          Name              modify
          Match             {{ env }}
          Remove            container_id
          Remove            source

      [OUTPUT]
          Name              file
          Format            out_file
          Match             *
          Path              /fluent-bit/logs
          File              services.log

      {% if loki_host is defined %}
      [OUTPUT]
          name loki
          match *
          labels env={{ env }}
          host {{ loki_host }}
          port 3100
      {% endif %}
  notify: restart fluent-bit

- name: Create logrotate configuration for Fluent Bit logs
  copy:
    dest: /etc/logrotate.d/fluent-bit
    content: |
      {{ data_root }}/logs/services.log {
          hourly
          rotate 7
          missingok
          notifempty

          dateext
          dateformat -%Y%m%d

          compress
          compressext .xz
          compresscmd /usr/bin/xz
          uncompresscmd /usr/bin/unxz

          postrotate
              docker restart dds-infra-fluent-bit > /dev/null 2>&1 || true
          endscript
      }

- name: Update logs rotation cron job
  vars:
    sched: "{{ scheduled_tasks.logs_rotation.split(' ') }}"
  cron:
    name: "Logs rotation"
    minute: "{{ sched[0] }}"
    hour: "{{ sched[1] }}"
    day: "{{ sched[2] }}"
    month: "{{ sched[3] }}"
    weekday: "{{ sched[4] }}"
    user: root
    job: >
      /usr/sbin/logrotate /etc/logrotate.d/fluent-bit --state /var/lib/logrotate/status >> {{ data_root }}/logs/logrotate.log 2>&1

- name: Update logs cleanup cron job
  vars:
    sched: "{{ scheduled_tasks.logs_cleanup.split(' ') }}"
  cron:
    name: "Logs cleanup"
    minute: "{{ sched[0] }}"
    hour: "{{ sched[1] }}"
    day: "{{ sched[2] }}"
    month: "{{ sched[3] }}"
    weekday: "{{ sched[4] }}"
    user: root
    job: >
      /usr/bin/find {{ data_root }}/logs  -name "*.xz" -type f -mtime +{{ logs_retention }} -exec rm -f {} \; >> {{ data_root }}/logs/logrotate.log 2>&1
