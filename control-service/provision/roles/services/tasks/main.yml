- name: Check config for video devices
  vars:
    video_devices_config_entries: ["RADARIQ_DEVICES"]
  lineinfile:
    path: "{{ data_root }}/configs/devices.env"
    regexp: "^({{ video_devices_config_entries | join('|') }})=.*"
    state: absent
  check_mode: yes
  changed_when: false
  register: video_devices
  tags:
    - camera
    - dds-camera-api
    - dds-camera-video

- import_tasks: control-update.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-control-update'] if (rollback_info is defined and 'dds-control-update' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-control-update' in rollback_info.versions
  tags: control
- import_tasks: control-api.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-control-api'] if (rollback_info is defined and 'dds-control-api' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-control-api' in rollback_info.versions
  tags: control
- import_tasks: control-proxy.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-control-proxy'] if (rollback_info is defined and 'dds-control-proxy' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-control-proxy' in rollback_info.versions
  tags: control
- import_tasks: camera-api.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-camera-api'] if (rollback_info is defined and 'dds-camera-api' in rollback_info.versions) else image_tag }}"
    video_devices_present: "{{ video_devices.found | bool }}"
  when: rollback_info is not defined or 'dds-camera-api' in rollback_info.versions
  tags: camera
- import_tasks: camera-video.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-camera-video'] if (rollback_info is defined and 'dds-camera-video' in rollback_info.versions) else image_tag }}"
    video_devices_present: "{{ video_devices.found | bool }}"
  when: rollback_info is not defined or 'dds-camera-video' in rollback_info.versions
  tags: camera
- import_tasks: target-provider.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-target-provider'] if (rollback_info is defined and 'dds-target-provider' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-target-provider' in rollback_info.versions
  tags: target-provider
- import_tasks: archive-api.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-archive-api'] if (rollback_info is defined and 'dds-archive-api' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-archive-api' in rollback_info.versions
  tags: archive
- import_tasks: ui.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-ui'] if (rollback_info is defined and 'dds-ui' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-ui' in rollback_info.versions
  tags: ui
- import_tasks: infra-postgres.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-infra-postgres'] if (rollback_info is defined and 'dds-infra-postgres' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-infra-postgres' in rollback_info.versions
  tags: infra
- import_tasks: infra-node-exporter.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-infra-node-exporter'] if (rollback_info is defined and 'dds-infra-node-exporter' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-infra-node-exporter' in rollback_info.versions
  tags: infra
- import_tasks: infra-fluent-bit.yml
  vars:
    rollback_image_tag: "{{ rollback_info.versions['dds-infra-fluent-bit'] if (rollback_info is defined and 'dds-infra-fluent-bit' in rollback_info.versions) else image_tag }}"
  when: rollback_info is not defined or 'dds-infra-fluent-bit' in rollback_info.versions
  tags: infra

- import_tasks: backup.yml
  when: rollback_info is not defined
  tags: backup
- import_tasks: logs.yml
  when: rollback_info is not defined
  tags: logs
- import_tasks: docker.yml
  when: rollback_info is not defined
  tags: docker
