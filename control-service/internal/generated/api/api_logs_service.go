// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DDS Control HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package api

import (
	"context"
	"net/http"
	"errors"
)

// LogsAPIService is a service that implements the logic for the LogsAPIServicer
// This service should implement the business logic for every endpoint for the LogsAPI API.
// Include any external packages or services that will be required by this service.
type LogsAPIService struct {
}

// NewLogsAPIService creates a default api service
func NewLogsAPIService() *LogsAPIService {
	return &LogsAPIService{}
}

// ListLogs - Retrieve a list of log files within a date range
func (s *LogsAPIService) ListLogs(ctx context.Context, start string, end string) (ImplResponse, error) {
	// TODO - update ListLogs with the required logic for this service method.
	// Add api_logs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListLogs method not implemented")
}

// GetLogs - 
func (s *LogsAPIService) GetLogs(ctx context.Context, logsList string) (ImplResponse, error) {
	// TODO - update GetLogs with the required logic for this service method.
	// Add api_logs_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLogs method not implemented")
}
