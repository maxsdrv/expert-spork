// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DDS Control HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package api


import (
	"fmt"
)


// UpdateStatus : Update process status
type UpdateStatus string

// List of UpdateStatus
const (
	UPDATESTATUS_IDLE UpdateStatus = "idle"
	UPDATESTATUS_BACKUP UpdateStatus = "backup"
	UPDATESTATUS_PREPARING UpdateStatus = "preparing"
	UPDATESTATUS_ACTIVE UpdateStatus = "active"
	UPDATESTATUS_DONE UpdateStatus = "done"
	UPDATESTATUS_ERROR UpdateStatus = "error"
)

// AllowedUpdateStatusEnumValues is all the allowed values of UpdateStatus enum
var AllowedUpdateStatusEnumValues = []UpdateStatus{
	"idle",
	"backup",
	"preparing",
	"active",
	"done",
	"error",
}

// validUpdateStatusEnumValue provides a map of UpdateStatuss for fast verification of use input
var validUpdateStatusEnumValues = map[UpdateStatus]struct{}{
	"idle": {},
	"backup": {},
	"preparing": {},
	"active": {},
	"done": {},
	"error": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UpdateStatus) IsValid() bool {
	_, ok := validUpdateStatusEnumValues[v]
	return ok
}

// NewUpdateStatusFromValue returns a pointer to a valid UpdateStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUpdateStatusFromValue(v string) (UpdateStatus, error) {
	ev := UpdateStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for UpdateStatus: valid values are %v", v, AllowedUpdateStatusEnumValues)
}



// AssertUpdateStatusRequired checks if the required fields are not zero-ed
func AssertUpdateStatusRequired(obj UpdateStatus) error {
	return nil
}

// AssertUpdateStatusConstraints checks if the values respects the defined constraints
func AssertUpdateStatusConstraints(obj UpdateStatus) error {
	return nil
}
