// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DDS Control HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package api

import (
	"context"
	"net/http"
)



// BackupsAPIRouter defines the required methods for binding the api requests to a responses for the BackupsAPI
// The BackupsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BackupsAPIServicer to perform the required actions, then write the service results to the http response.
type BackupsAPIRouter interface { 
	ListBackups(http.ResponseWriter, *http.Request)
	GetBackupArchive(http.ResponseWriter, *http.Request)
}
// BetaAPIRouter defines the required methods for binding the api requests to a responses for the BetaAPI
// The BetaAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BetaAPIServicer to perform the required actions, then write the service results to the http response.
type BetaAPIRouter interface { 
	UploadFirmware(http.ResponseWriter, *http.Request)
	UploadBackup(http.ResponseWriter, *http.Request)
	UpdateFirmware(http.ResponseWriter, *http.Request)
	UpdateOnline(http.ResponseWriter, *http.Request)
	UpdateRollback(http.ResponseWriter, *http.Request)
	UpdateStatus(http.ResponseWriter, *http.Request)
	UpdateCancel(http.ResponseWriter, *http.Request)
	ListServices(http.ResponseWriter, *http.Request)
	SetServiceState(http.ResponseWriter, *http.Request)
	GetServicesVersions(http.ResponseWriter, *http.Request)
	ListLogs(http.ResponseWriter, *http.Request)
	GetLogs(http.ResponseWriter, *http.Request)
	GetNtpServers(http.ResponseWriter, *http.Request)
	SetNtpServers(http.ResponseWriter, *http.Request)
	GetNtpSync(http.ResponseWriter, *http.Request)
	SetNtpSync(http.ResponseWriter, *http.Request)
	SetSystemTime(http.ResponseWriter, *http.Request)
	GetSystemTime(http.ResponseWriter, *http.Request)
	GetNetworkSettings(http.ResponseWriter, *http.Request)
	SetNetworkSettings(http.ResponseWriter, *http.Request)
	GetConfig(http.ResponseWriter, *http.Request)
	SetConfig(http.ResponseWriter, *http.Request)
	Metrics(http.ResponseWriter, *http.Request)
	ListBackups(http.ResponseWriter, *http.Request)
	GetBackupArchive(http.ResponseWriter, *http.Request)
	Reboot(http.ResponseWriter, *http.Request)
	GetRebootStatus(http.ResponseWriter, *http.Request)
	ShutdownSystem(http.ResponseWriter, *http.Request)
}
// ConfigAPIRouter defines the required methods for binding the api requests to a responses for the ConfigAPI
// The ConfigAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConfigAPIServicer to perform the required actions, then write the service results to the http response.
type ConfigAPIRouter interface { 
	GetNtpServers(http.ResponseWriter, *http.Request)
	SetNtpServers(http.ResponseWriter, *http.Request)
	GetNtpSync(http.ResponseWriter, *http.Request)
	SetNtpSync(http.ResponseWriter, *http.Request)
	SetSystemTime(http.ResponseWriter, *http.Request)
	GetSystemTime(http.ResponseWriter, *http.Request)
	GetNetworkSettings(http.ResponseWriter, *http.Request)
	SetNetworkSettings(http.ResponseWriter, *http.Request)
	GetConfig(http.ResponseWriter, *http.Request)
	SetConfig(http.ResponseWriter, *http.Request)
}
// InfoAPIRouter defines the required methods for binding the api requests to a responses for the InfoAPI
// The InfoAPIRouter implementation should parse necessary information from the http request,
// pass the data to a InfoAPIServicer to perform the required actions, then write the service results to the http response.
type InfoAPIRouter interface { 
	Metrics(http.ResponseWriter, *http.Request)
}
// LogsAPIRouter defines the required methods for binding the api requests to a responses for the LogsAPI
// The LogsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LogsAPIServicer to perform the required actions, then write the service results to the http response.
type LogsAPIRouter interface { 
	ListLogs(http.ResponseWriter, *http.Request)
	GetLogs(http.ResponseWriter, *http.Request)
}
// ServicesAPIRouter defines the required methods for binding the api requests to a responses for the ServicesAPI
// The ServicesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ServicesAPIServicer to perform the required actions, then write the service results to the http response.
type ServicesAPIRouter interface { 
	ListServices(http.ResponseWriter, *http.Request)
	SetServiceState(http.ResponseWriter, *http.Request)
	GetServicesVersions(http.ResponseWriter, *http.Request)
}
// SystemAPIRouter defines the required methods for binding the api requests to a responses for the SystemAPI
// The SystemAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SystemAPIServicer to perform the required actions, then write the service results to the http response.
type SystemAPIRouter interface { 
	Reboot(http.ResponseWriter, *http.Request)
	GetRebootStatus(http.ResponseWriter, *http.Request)
	ShutdownSystem(http.ResponseWriter, *http.Request)
}
// UpdateAPIRouter defines the required methods for binding the api requests to a responses for the UpdateAPI
// The UpdateAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UpdateAPIServicer to perform the required actions, then write the service results to the http response.
type UpdateAPIRouter interface { 
	UpdateFirmware(http.ResponseWriter, *http.Request)
	UpdateOnline(http.ResponseWriter, *http.Request)
	UpdateRollback(http.ResponseWriter, *http.Request)
	UpdateStatus(http.ResponseWriter, *http.Request)
	UpdateCancel(http.ResponseWriter, *http.Request)
}
// UploadAPIRouter defines the required methods for binding the api requests to a responses for the UploadAPI
// The UploadAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UploadAPIServicer to perform the required actions, then write the service results to the http response.
type UploadAPIRouter interface { 
	UploadFirmware(http.ResponseWriter, *http.Request)
	UploadBackup(http.ResponseWriter, *http.Request)
}


// BackupsAPIServicer defines the api actions for the BackupsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BackupsAPIServicer interface { 
	ListBackups(context.Context) (ImplResponse, error)
	GetBackupArchive(context.Context, string) (ImplResponse, error)
}


// BetaAPIServicer defines the api actions for the BetaAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BetaAPIServicer interface { 
	UploadFirmware(context.Context, string, string, string) (ImplResponse, error)
	UploadBackup(context.Context, string, string, string) (ImplResponse, error)
	UpdateFirmware(context.Context) (ImplResponse, error)
	UpdateOnline(context.Context, ServiceUpdate) (ImplResponse, error)
	UpdateRollback(context.Context) (ImplResponse, error)
	UpdateStatus(context.Context) (ImplResponse, error)
	UpdateCancel(context.Context) (ImplResponse, error)
	ListServices(context.Context) (ImplResponse, error)
	SetServiceState(context.Context, SetServiceStateRequest) (ImplResponse, error)
	GetServicesVersions(context.Context) (ImplResponse, error)
	ListLogs(context.Context, string, string) (ImplResponse, error)
	GetLogs(context.Context, string) (ImplResponse, error)
	GetNtpServers(context.Context) (ImplResponse, error)
	SetNtpServers(context.Context, NtpServers) (ImplResponse, error)
	GetNtpSync(context.Context) (ImplResponse, error)
	SetNtpSync(context.Context, NtpSyncState) (ImplResponse, error)
	SetSystemTime(context.Context, SystemTime) (ImplResponse, error)
	GetSystemTime(context.Context) (ImplResponse, error)
	GetNetworkSettings(context.Context) (ImplResponse, error)
	SetNetworkSettings(context.Context, NetworkSettings) (ImplResponse, error)
	GetConfig(context.Context, ConfigType) (ImplResponse, error)
	SetConfig(context.Context, ConfigType, ConfigFileData) (ImplResponse, error)
	Metrics(context.Context) (ImplResponse, error)
	ListBackups(context.Context) (ImplResponse, error)
	GetBackupArchive(context.Context, string) (ImplResponse, error)
	Reboot(context.Context) (ImplResponse, error)
	GetRebootStatus(context.Context) (ImplResponse, error)
	ShutdownSystem(context.Context) (ImplResponse, error)
}


// ConfigAPIServicer defines the api actions for the ConfigAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConfigAPIServicer interface { 
	GetNtpServers(context.Context) (ImplResponse, error)
	SetNtpServers(context.Context, NtpServers) (ImplResponse, error)
	GetNtpSync(context.Context) (ImplResponse, error)
	SetNtpSync(context.Context, NtpSyncState) (ImplResponse, error)
	SetSystemTime(context.Context, SystemTime) (ImplResponse, error)
	GetSystemTime(context.Context) (ImplResponse, error)
	GetNetworkSettings(context.Context) (ImplResponse, error)
	SetNetworkSettings(context.Context, NetworkSettings) (ImplResponse, error)
	GetConfig(context.Context, ConfigType) (ImplResponse, error)
	SetConfig(context.Context, ConfigType, ConfigFileData) (ImplResponse, error)
}


// InfoAPIServicer defines the api actions for the InfoAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type InfoAPIServicer interface { 
	Metrics(context.Context) (ImplResponse, error)
}


// LogsAPIServicer defines the api actions for the LogsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LogsAPIServicer interface { 
	ListLogs(context.Context, string, string) (ImplResponse, error)
	GetLogs(context.Context, string) (ImplResponse, error)
}


// ServicesAPIServicer defines the api actions for the ServicesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServicesAPIServicer interface { 
	ListServices(context.Context) (ImplResponse, error)
	SetServiceState(context.Context, SetServiceStateRequest) (ImplResponse, error)
	GetServicesVersions(context.Context) (ImplResponse, error)
}


// SystemAPIServicer defines the api actions for the SystemAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SystemAPIServicer interface { 
	Reboot(context.Context) (ImplResponse, error)
	GetRebootStatus(context.Context) (ImplResponse, error)
	ShutdownSystem(context.Context) (ImplResponse, error)
}


// UpdateAPIServicer defines the api actions for the UpdateAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UpdateAPIServicer interface { 
	UpdateFirmware(context.Context) (ImplResponse, error)
	UpdateOnline(context.Context, ServiceUpdate) (ImplResponse, error)
	UpdateRollback(context.Context) (ImplResponse, error)
	UpdateStatus(context.Context) (ImplResponse, error)
	UpdateCancel(context.Context) (ImplResponse, error)
}


// UploadAPIServicer defines the api actions for the UploadAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UploadAPIServicer interface { 
	UploadFirmware(context.Context, string, string, string) (ImplResponse, error)
	UploadBackup(context.Context, string, string, string) (ImplResponse, error)
}
