// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DDS Control HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package api

import (
	"net/http"
	"strings"
)

// InfoAPIController binds http requests to an api service and writes the service results to the http response
type InfoAPIController struct {
	service InfoAPIServicer
	errorHandler ErrorHandler
}

// InfoAPIOption for how the controller is set up.
type InfoAPIOption func(*InfoAPIController)

// WithInfoAPIErrorHandler inject ErrorHandler into controller
func WithInfoAPIErrorHandler(h ErrorHandler) InfoAPIOption {
	return func(c *InfoAPIController) {
		c.errorHandler = h
	}
}

// NewInfoAPIController creates a default api controller
func NewInfoAPIController(s InfoAPIServicer, opts ...InfoAPIOption) *InfoAPIController {
	controller := &InfoAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the InfoAPIController
func (c *InfoAPIController) Routes() Routes {
	return Routes{
		"Metrics": Route{
			strings.ToUpper("Get"),
			"/api/v1/info/metrics",
			c.Metrics,
		},
	}
}

// Metrics - Get system metrics
func (c *InfoAPIController) Metrics(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.Metrics(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, result.Headers, w)
}
