// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * DDS Control HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

package api


import (
	"fmt"
)



type ConfigType string

// List of ConfigType
const (
	CONFIGTYPE_DEVICES ConfigType = "DEVICES"
	CONFIGTYPE_SYSTEM ConfigType = "SYSTEM"
)

// AllowedConfigTypeEnumValues is all the allowed values of ConfigType enum
var AllowedConfigTypeEnumValues = []ConfigType{
	"DEVICES",
	"SYSTEM",
}

// validConfigTypeEnumValue provides a map of ConfigTypes for fast verification of use input
var validConfigTypeEnumValues = map[ConfigType]struct{}{
	"DEVICES": {},
	"SYSTEM": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConfigType) IsValid() bool {
	_, ok := validConfigTypeEnumValues[v]
	return ok
}

// NewConfigTypeFromValue returns a pointer to a valid ConfigType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConfigTypeFromValue(v string) (ConfigType, error) {
	ev := ConfigType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ConfigType: valid values are %v", v, AllowedConfigTypeEnumValues)
}



// AssertConfigTypeRequired checks if the required fields are not zero-ed
func AssertConfigTypeRequired(obj ConfigType) error {
	return nil
}

// AssertConfigTypeConstraints checks if the values respects the defined constraints
func AssertConfigTypeConstraints(obj ConfigType) error {
	return nil
}
