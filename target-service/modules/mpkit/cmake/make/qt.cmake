if (_useQt)
    return()
endif()
set(_useQt true)

if(NOT QT_VERSION)
    message(STATUS "Using Qt autoselect")
    execute_process(COMMAND ${QT_QMAKE_EXECUTABLE} -query QT_VERSION OUTPUT_VARIABLE QT_VERSION)
endif()

message(STATUS "Using Qt version: ${QT_VERSION}")
if (QT_VERSION GREATER_EQUAL 6.0.0)
    set(QT_MAJOR 6)
else()
    set(QT_MAJOR 5)
endif()

set(QT_NAME Qt${QT_MAJOR})
if(COMMAND add_compile_definitions)
    add_compile_definitions(QT_MAJOR=${QT_MAJOR})
else()
    add_definitions(-DQT_MAJOR=${QT_MAJOR})
endif()

# The darkest and the blackest magic
# If someone mixes together the following headers in the following order:
# boost/foreach_fwd->qtglobal->boost/foreach he will fall to the deep hole of undefined symbols.
# We can't control this order so we use this little workaround to fix it.
# Now boost has Q_FOREACH inside and everybody happy.
add_definitions(-Dforeach=Q_FOREACH)

if (NOT DEFINED QT_QMAKE_EXECUTABLE)
    set(QT_QMAKE_EXECUTABLE qmake)
endif()

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)

#For autogenerated files (moc, ui)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
find_package(${QT_NAME} COMPONENTS Core REQUIRED)

include (${CMAKE_SCRIPTS_PATH}/make/qt_utils.cmake)
message(STATUS "====================Qt begin====================")
execute_process(COMMAND ${QT_QMAKE_EXECUTABLE} -query QT_VERSION OUTPUT_VARIABLE QT_VERSION)
message(STATUS "Installed Qt version: ${QT_VERSION}")

execute_process(COMMAND ${QT_QMAKE_EXECUTABLE} -query QT_INSTALL_BINS OUTPUT_VARIABLE QT_BINARIES_PATH)
setQtBinaryVar(MOC_EXECUTABLE "moc" "${QT_BINARIES_PATH}" "Meta Object compiler")
setQtBinaryVar(UIC_EXECUTABLE "uic" "${QT_BINARIES_PATH}" "UI compiler")
setQtBinaryVar(RCC_EXECUTABLE "rcc" "${QT_BINARIES_PATH}" "Resource compiler")
setQtBinaryVar(DBUSCPP2XML_EXECUTABLE "qdbuscpp2xml" "${QT_BINARIES_PATH}" "DBUS cpp to xml converter")
setQtBinaryVar(DBUSXML2CPP_EXECUTABLE "qdbusxml2cpp" "${QT_BINARIES_PATH}" "DBUS xml to cpp converter")
setQtBinaryVar(QCOLLECTIONGENERATOR_EXECUTABLE "qcollectiongenerator" "${QT_BINARIES_PATH}" "Help collection generator")
setQtBinaryVar(QHELPGENERATOR_EXECUTABLE "qhelpgenerator" "${QT_BINARIES_PATH}" "Help generator")
setQtBinaryVar(LUPDATE_EXECUTABLE "lupdate" "${QT_BINARIES_PATH}" "lupdate")
setQtBinaryVar(LRELEASE_EXECUTABLE "lrelease" "${QT_BINARIES_PATH}" "lrelease")
setQtBinaryVar(DESIGNER_EXECUTABLE "designer" "${QT_BINARIES_PATH}" "UI designer")
setQtBinaryVar(LINGUIST_EXECUTABLE "linguist" "${QT_BINARIES_PATH}" "Linguist")
message(STATUS "====================Qt end======================")
