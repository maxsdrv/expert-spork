/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OARadarIqTrack.h
 *
 * 
 */

#ifndef OARadarIqTrack_H
#define OARadarIqTrack_H

#include <QJsonObject>

#include "OARadarIqAlarm_event.h"
#include "OARadarIqAlarm_level.h"
#include "OARadarIqClass_event.h"
#include "OARadarIqConfirm_mark.h"
#include "OARadarIqObject_class.h"
#include "OARadarIqTrack_id.h"
#include "OARadarIqTrack_point.h"
#include <QList>

#include "OARadarIqEnum.h"
#include "OARadarIqObject.h"

namespace OARadarIq {
class OARadarIqTrack_id;
class OARadarIqClass_event;
class OARadarIqTrack_point;
class OARadarIqAlarm_event;

class OARadarIqTrack : public OARadarIqObject {
public:
    OARadarIqTrack();
    OARadarIqTrack(QString json);
    ~OARadarIqTrack() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OARadarIqTrack_id getId() const;
    void setId(const OARadarIqTrack_id &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OARadarIqAlarm_level getAlarmLevel() const;
    void setAlarmLevel(const OARadarIqAlarm_level &alarm_level);
    bool is_alarm_level_Set() const;
    bool is_alarm_level_Valid() const;

    OARadarIqObject_class getObjectClass() const;
    void setObjectClass(const OARadarIqObject_class &object_class);
    bool is_object_class_Set() const;
    bool is_object_class_Valid() const;

    QList<OARadarIqClass_event> getClassEvents() const;
    void setClassEvents(const QList<OARadarIqClass_event> &class_events);
    bool is_class_events_Set() const;
    bool is_class_events_Valid() const;

    OARadarIqConfirm_mark getConfirmMark() const;
    void setConfirmMark(const OARadarIqConfirm_mark &confirm_mark);
    bool is_confirm_mark_Set() const;
    bool is_confirm_mark_Valid() const;

    QList<OARadarIqTrack_point> getPoints() const;
    void setPoints(const QList<OARadarIqTrack_point> &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    double getPriorityScore() const;
    void setPriorityScore(const double &priority_score);
    bool is_priority_score_Set() const;
    bool is_priority_score_Valid() const;

    QList<OARadarIqAlarm_event> getAlarmEvents() const;
    void setAlarmEvents(const QList<OARadarIqAlarm_event> &alarm_events);
    bool is_alarm_events_Set() const;
    bool is_alarm_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OARadarIqTrack_id m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OARadarIqAlarm_level m_alarm_level;
    bool m_alarm_level_isSet;
    bool m_alarm_level_isValid;

    OARadarIqObject_class m_object_class;
    bool m_object_class_isSet;
    bool m_object_class_isValid;

    QList<OARadarIqClass_event> m_class_events;
    bool m_class_events_isSet;
    bool m_class_events_isValid;

    OARadarIqConfirm_mark m_confirm_mark;
    bool m_confirm_mark_isSet;
    bool m_confirm_mark_isValid;

    QList<OARadarIqTrack_point> m_points;
    bool m_points_isSet;
    bool m_points_isValid;

    double m_priority_score;
    bool m_priority_score_isSet;
    bool m_priority_score_isValid;

    QList<OARadarIqAlarm_event> m_alarm_events;
    bool m_alarm_events_isSet;
    bool m_alarm_events_isValid;
};

} // namespace OARadarIq

Q_DECLARE_METATYPE(OARadarIq::OARadarIqTrack)

#endif // OARadarIqTrack_H
