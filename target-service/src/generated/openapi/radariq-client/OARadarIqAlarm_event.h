/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OARadarIqAlarm_event.h
 *
 * 
 */

#ifndef OARadarIqAlarm_event_H
#define OARadarIqAlarm_event_H

#include <QJsonObject>

#include "OARadarIqAlarm_level.h"
#include <QString>

#include "OARadarIqEnum.h"
#include "OARadarIqObject.h"

namespace OARadarIq {

class OARadarIqAlarm_event : public OARadarIqObject {
public:
    OARadarIqAlarm_event();
    OARadarIqAlarm_event(QString json);
    ~OARadarIqAlarm_event() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OARadarIqAlarm_level getCurrentLevel() const;
    void setCurrentLevel(const OARadarIqAlarm_level &current_level);
    bool is_current_level_Set() const;
    bool is_current_level_Valid() const;

    OARadarIqAlarm_level getPreviousLevel() const;
    void setPreviousLevel(const OARadarIqAlarm_level &previous_level);
    bool is_previous_level_Set() const;
    bool is_previous_level_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    double getPriorityScore() const;
    void setPriorityScore(const double &priority_score);
    bool is_priority_score_Set() const;
    bool is_priority_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OARadarIqAlarm_level m_current_level;
    bool m_current_level_isSet;
    bool m_current_level_isValid;

    OARadarIqAlarm_level m_previous_level;
    bool m_previous_level_isSet;
    bool m_previous_level_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    double m_priority_score;
    bool m_priority_score_isSet;
    bool m_priority_score_isValid;
};

} // namespace OARadarIq

Q_DECLARE_METATYPE(OARadarIq::OARadarIqAlarm_event)

#endif // OARadarIqAlarm_event_H
