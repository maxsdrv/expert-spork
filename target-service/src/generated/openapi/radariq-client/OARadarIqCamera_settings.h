/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OARadarIqCamera_settings.h
 *
 * 
 */

#ifndef OARadarIqCamera_settings_H
#define OARadarIqCamera_settings_H

#include <QJsonObject>

#include "OARadarIqGeo_position.h"
#include "OARadarIqNetwork_address.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OARadarIqEnum.h"
#include "OARadarIqObject.h"

namespace OARadarIq {
class OARadarIqNetwork_address;
class OARadarIqGeo_position;

class OARadarIqCamera_settings : public OARadarIqObject {
public:
    OARadarIqCamera_settings();
    OARadarIqCamera_settings(QString json);
    ~OARadarIqCamera_settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OARadarIqNetwork_address getAddress() const;
    void setAddress(const OARadarIqNetwork_address &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    bool isConnectionOn() const;
    void setConnectionOn(const bool &connection_on);
    bool is_connection_on_Set() const;
    bool is_connection_on_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    OARadarIqGeo_position getPosition() const;
    void setPosition(const OARadarIqGeo_position &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QList<QJsonValue> getStreams() const;
    void setStreams(const QList<QJsonValue> &streams);
    bool is_streams_Set() const;
    bool is_streams_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OARadarIqNetwork_address m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    bool m_connection_on;
    bool m_connection_on_isSet;
    bool m_connection_on_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    OARadarIqGeo_position m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QList<QJsonValue> m_streams;
    bool m_streams_isSet;
    bool m_streams_isValid;
};

} // namespace OARadarIq

Q_DECLARE_METATYPE(OARadarIq::OARadarIqCamera_settings)

#endif // OARadarIqCamera_settings_H
