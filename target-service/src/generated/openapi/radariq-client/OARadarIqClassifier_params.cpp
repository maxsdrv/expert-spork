/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqClassifier_params.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqClassifier_params::OARadarIqClassifier_params(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqClassifier_params::OARadarIqClassifier_params() {
    this->initializeModel();
}

OARadarIqClassifier_params::~OARadarIqClassifier_params() {}

void OARadarIqClassifier_params::initializeModel() {

    m_classifier_isSet = false;
    m_classifier_isValid = false;
}

void OARadarIqClassifier_params::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OARadarIqClassifier_params::fromJsonObject(QJsonObject json) {

    m_classifier_isValid = ::OARadarIq::fromJsonValue(m_classifier, json[QString("classifier")]);
    m_classifier_isSet = !json[QString("classifier")].isNull() && m_classifier_isValid;
}

QString OARadarIqClassifier_params::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OARadarIqClassifier_params::asJsonObject() const {
    QJsonObject obj;
    if (m_classifier_isSet) {
        obj.insert(QString("classifier"), ::OARadarIq::toJsonValue(m_classifier));
    }
    return obj;
}

OARadarIqObject OARadarIqClassifier_params::getClassifier() const {
    return m_classifier;
}
void OARadarIqClassifier_params::setClassifier(const OARadarIqObject &classifier) {
    m_classifier = classifier;
    m_classifier_isSet = true;
}

bool OARadarIqClassifier_params::is_classifier_Set() const{
    return m_classifier_isSet;
}

bool OARadarIqClassifier_params::is_classifier_Valid() const{
    return m_classifier_isValid;
}

bool OARadarIqClassifier_params::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_classifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OARadarIqClassifier_params::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_classifier_isValid && true;
}

} // namespace OARadarIq
