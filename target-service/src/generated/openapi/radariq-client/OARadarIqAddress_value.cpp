/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqAddress_value.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqAddress_value::OARadarIqAddress_value(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqAddress_value::OARadarIqAddress_value() {
    this->initializeModel();
}

OARadarIqAddress_value::~OARadarIqAddress_value() {}

void OARadarIqAddress_value::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;
}

void OARadarIqAddress_value::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OARadarIqAddress_value::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OARadarIq::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;
}

QString OARadarIqAddress_value::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OARadarIqAddress_value::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OARadarIq::toJsonValue(m_address));
    }
    return obj;
}

OARadarIqNetwork_address OARadarIqAddress_value::getAddress() const {
    return m_address;
}
void OARadarIqAddress_value::setAddress(const OARadarIqNetwork_address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OARadarIqAddress_value::is_address_Set() const{
    return m_address_isSet;
}

bool OARadarIqAddress_value::is_address_Valid() const{
    return m_address_isValid;
}

bool OARadarIqAddress_value::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OARadarIqAddress_value::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && true;
}

} // namespace OARadarIq
