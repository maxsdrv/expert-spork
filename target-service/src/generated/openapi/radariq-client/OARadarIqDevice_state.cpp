/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqDevice_state.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqDevice_state::OARadarIqDevice_state(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqDevice_state::OARadarIqDevice_state() {
    this->initializeModel();
}

OARadarIqDevice_state::~OARadarIqDevice_state() {}

void OARadarIqDevice_state::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOARadarIqDevice_state::INVALID_VALUE_OPENAPI_GENERATED;
}

void OARadarIqDevice_state::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ON", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqDevice_state::ON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OFF", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqDevice_state::OFF;
        m_value_isSet = m_value_isValid = true;
    }
}

void OARadarIqDevice_state::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OARadarIqDevice_state::asJson() const {
    
    QString val;
    switch (m_value){
        case eOARadarIqDevice_state::ON:
            val = "ON";
            break;
        case eOARadarIqDevice_state::OFF:
            val = "OFF";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OARadarIqDevice_state::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OARadarIqDevice_state::eOARadarIqDevice_state OARadarIqDevice_state::getValue() const {
    return m_value;
}

void OARadarIqDevice_state::setValue(const OARadarIqDevice_state::eOARadarIqDevice_state& value){
    m_value = value;
    m_value_isSet = true;
}
bool OARadarIqDevice_state::isSet() const {
    
    return m_value_isSet;
}

bool OARadarIqDevice_state::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OARadarIq
