/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OASkycopeDroneWifiDevice.h
 *
 * 
 */

#ifndef OASkycopeDroneWifiDevice_H
#define OASkycopeDroneWifiDevice_H

#include <QJsonObject>

#include "OASkycopeActions.h"
#include "OASkycopeDroneSensorLdResult.h"
#include "OASkycopeFcKhzAndCount.h"
#include "OASkycopeGps.h"
#include "OASkycopeObject.h"
#include "OASkycopeSharedNames.h"
#include "OASkycopeSpoofStatus.h"
#include "OASkycopeThreat.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OASkycopeEnum.h"
#include "OASkycopeObject.h"

namespace OASkycope {
class OASkycopeActions;
class OASkycopeGps;
class OASkycopeFcKhzAndCount;
class OASkycopeDroneSensorLdResult;
class OASkycopeSharedNames;
class OASkycopeSpoofStatus;
class OASkycopeThreat;

class OASkycopeDroneWifiDevice : public OASkycopeObject {
public:
    OASkycopeDroneWifiDevice();
    OASkycopeDroneWifiDevice(QString json);
    ~OASkycopeDroneWifiDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OASkycopeActions getActions() const;
    void setActions(const OASkycopeActions &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    qint32 getBwKhz() const;
    void setBwKhz(const qint32 &bw_khz);
    bool is_bw_khz_Set() const;
    bool is_bw_khz_Valid() const;

    QString getColorTrajectory() const;
    void setColorTrajectory(const QString &color_trajectory);
    bool is_color_trajectory_Set() const;
    bool is_color_trajectory_Valid() const;

    qint32 getDetectCounter() const;
    void setDetectCounter(const qint32 &detect_counter);
    bool is_detect_counter_Set() const;
    bool is_detect_counter_Valid() const;

    QString getDetectionEngine() const;
    void setDetectionEngine(const QString &detection_engine);
    bool is_detection_engine_Set() const;
    bool is_detection_engine_Valid() const;

    QList<OASkycopeGps> getDfMarkerGps() const;
    void setDfMarkerGps(const QList<OASkycopeGps> &df_marker_gps);
    bool is_df_marker_gps_Set() const;
    bool is_df_marker_gps_Valid() const;

    qint32 getDroneHeight() const;
    void setDroneHeight(const qint32 &drone_height);
    bool is_drone_height_Set() const;
    bool is_drone_height_Valid() const;

    OASkycopeFcKhzAndCount getFcKhzAndCount() const;
    void setFcKhzAndCount(const OASkycopeFcKhzAndCount &fc_khz_and_count);
    bool is_fc_khz_and_count_Set() const;
    bool is_fc_khz_and_count_Valid() const;

    QList<QList<qint32>> getFcKhzAndCountRecent() const;
    void setFcKhzAndCountRecent(const QList<QList<qint32>> &fc_khz_and_count_recent);
    bool is_fc_khz_and_count_recent_Set() const;
    bool is_fc_khz_and_count_recent_Valid() const;

    QString getFinder() const;
    void setFinder(const QString &finder);
    bool is_finder_Set() const;
    bool is_finder_Valid() const;

    QString getFrequency() const;
    void setFrequency(const QString &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    bool isFrequencyHop() const;
    void setFrequencyHop(const bool &frequency_hop);
    bool is_frequency_hop_Set() const;
    bool is_frequency_hop_Valid() const;

    OASkycopeGps getGps() const;
    void setGps(const OASkycopeGps &gps);
    bool is_gps_Set() const;
    bool is_gps_Valid() const;

    OASkycopeObject getGpsSector() const;
    void setGpsSector(const OASkycopeObject &gps_sector);
    bool is_gps_sector_Set() const;
    bool is_gps_sector_Valid() const;

    QList<QJsonValue> getGpsTrajectory() const;
    void setGpsTrajectory(const QList<QJsonValue> &gps_trajectory);
    bool is_gps_trajectory_Set() const;
    bool is_gps_trajectory_Valid() const;

    QString getGuiFirstDetectedAt() const;
    void setGuiFirstDetectedAt(const QString &gui_first_detected_at);
    bool is_gui_first_detected_at_Set() const;
    bool is_gui_first_detected_at_Valid() const;

    QString getGuiId() const;
    void setGuiId(const QString &gui_id);
    bool is_gui_id_Set() const;
    bool is_gui_id_Valid() const;

    QString getHomeGps() const;
    void setHomeGps(const QString &home_gps);
    bool is_home_gps_Set() const;
    bool is_home_gps_Valid() const;

    QString getIcon() const;
    void setIcon(const QString &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInDefendingQueue() const;
    void setInDefendingQueue(const bool &in_defending_queue);
    bool is_in_defending_queue_Set() const;
    bool is_in_defending_queue_Valid() const;

    bool isIsDualWbj() const;
    void setIsDualWbj(const bool &is_dual_wbj);
    bool is_is_dual_wbj_Set() const;
    bool is_is_dual_wbj_Valid() const;

    bool isIsLdvalTesting() const;
    void setIsLdvalTesting(const bool &is_ldval_testing);
    bool is_is_ldval_testing_Set() const;
    bool is_is_ldval_testing_Valid() const;

    bool isIsRemoteId() const;
    void setIsRemoteId(const bool &is_remote_id);
    bool is_is_remote_id_Set() const;
    bool is_is_remote_id_Valid() const;

    bool isIsTripleWbj() const;
    void setIsTripleWbj(const bool &is_triple_wbj);
    bool is_is_triple_wbj_Set() const;
    bool is_is_triple_wbj_Valid() const;

    bool isIsWifiTab() const;
    void setIsWifiTab(const bool &is_wifi_tab);
    bool is_is_wifi_tab_Set() const;
    bool is_is_wifi_tab_Valid() const;

    QMap<QString, OASkycopeDroneSensorLdResult> getLdResult() const;
    void setLdResult(const QMap<QString, OASkycopeDroneSensorLdResult> &ld_result);
    bool is_ld_result_Set() const;
    bool is_ld_result_Valid() const;

    QString getLfErrorRadius() const;
    void setLfErrorRadius(const QString &lf_error_radius);
    bool is_lf_error_radius_Set() const;
    bool is_lf_error_radius_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getModulation() const;
    void setModulation(const QString &modulation);
    bool is_modulation_Set() const;
    bool is_modulation_Valid() const;

    QString getPairedRc() const;
    void setPairedRc(const QString &paired_rc);
    bool is_paired_rc_Set() const;
    bool is_paired_rc_Valid() const;

    QString getPrevId() const;
    void setPrevId(const QString &prev_id);
    bool is_prev_id_Set() const;
    bool is_prev_id_Valid() const;

    QString getRemoteIdModelName() const;
    void setRemoteIdModelName(const QString &remote_id_model_name);
    bool is_remote_id_model_name_Set() const;
    bool is_remote_id_model_name_Valid() const;

    qint32 getSeenTimes() const;
    void setSeenTimes(const qint32 &seen_times);
    bool is_seen_times_Set() const;
    bool is_seen_times_Valid() const;

    QList<QString> getSensorIds() const;
    void setSensorIds(const QList<QString> &sensor_ids);
    bool is_sensor_ids_Set() const;
    bool is_sensor_ids_Valid() const;

    QList<QString> getSensors() const;
    void setSensors(const QList<QString> &sensors);
    bool is_sensors_Set() const;
    bool is_sensors_Valid() const;

    OASkycopeSharedNames getSharedNames() const;
    void setSharedNames(const OASkycopeSharedNames &shared_names);
    bool is_shared_names_Set() const;
    bool is_shared_names_Valid() const;

    QList<qint32> getRSignals() const;
    void setRSignals(const QList<qint32> &r_signals);
    bool is_r_signals_Set() const;
    bool is_r_signals_Valid() const;

    OASkycopeSpoofStatus getSpoofStatus() const;
    void setSpoofStatus(const OASkycopeSpoofStatus &spoof_status);
    bool is_spoof_status_Set() const;
    bool is_spoof_status_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    bool isSwitchForWhitelist() const;
    void setSwitchForWhitelist(const bool &switch_for_whitelist);
    bool is_switch_for_whitelist_Set() const;
    bool is_switch_for_whitelist_Valid() const;

    OASkycopeThreat getThreat() const;
    void setThreat(const OASkycopeThreat &threat);
    bool is_threat_Set() const;
    bool is_threat_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getWifiMacId() const;
    void setWifiMacId(const QString &wifi_mac_id);
    bool is_wifi_mac_id_Set() const;
    bool is_wifi_mac_id_Valid() const;

    QString getWifiSsid() const;
    void setWifiSsid(const QString &wifi_ssid);
    bool is_wifi_ssid_Set() const;
    bool is_wifi_ssid_Valid() const;

    QString getWlName() const;
    void setWlName(const QString &wl_name);
    bool is_wl_name_Set() const;
    bool is_wl_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OASkycopeActions m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    qint32 m_bw_khz;
    bool m_bw_khz_isSet;
    bool m_bw_khz_isValid;

    QString m_color_trajectory;
    bool m_color_trajectory_isSet;
    bool m_color_trajectory_isValid;

    qint32 m_detect_counter;
    bool m_detect_counter_isSet;
    bool m_detect_counter_isValid;

    QString m_detection_engine;
    bool m_detection_engine_isSet;
    bool m_detection_engine_isValid;

    QList<OASkycopeGps> m_df_marker_gps;
    bool m_df_marker_gps_isSet;
    bool m_df_marker_gps_isValid;

    qint32 m_drone_height;
    bool m_drone_height_isSet;
    bool m_drone_height_isValid;

    OASkycopeFcKhzAndCount m_fc_khz_and_count;
    bool m_fc_khz_and_count_isSet;
    bool m_fc_khz_and_count_isValid;

    QList<QList<qint32>> m_fc_khz_and_count_recent;
    bool m_fc_khz_and_count_recent_isSet;
    bool m_fc_khz_and_count_recent_isValid;

    QString m_finder;
    bool m_finder_isSet;
    bool m_finder_isValid;

    QString m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    bool m_frequency_hop;
    bool m_frequency_hop_isSet;
    bool m_frequency_hop_isValid;

    OASkycopeGps m_gps;
    bool m_gps_isSet;
    bool m_gps_isValid;

    OASkycopeObject m_gps_sector;
    bool m_gps_sector_isSet;
    bool m_gps_sector_isValid;

    QList<QJsonValue> m_gps_trajectory;
    bool m_gps_trajectory_isSet;
    bool m_gps_trajectory_isValid;

    QString m_gui_first_detected_at;
    bool m_gui_first_detected_at_isSet;
    bool m_gui_first_detected_at_isValid;

    QString m_gui_id;
    bool m_gui_id_isSet;
    bool m_gui_id_isValid;

    QString m_home_gps;
    bool m_home_gps_isSet;
    bool m_home_gps_isValid;

    QString m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_in_defending_queue;
    bool m_in_defending_queue_isSet;
    bool m_in_defending_queue_isValid;

    bool m_is_dual_wbj;
    bool m_is_dual_wbj_isSet;
    bool m_is_dual_wbj_isValid;

    bool m_is_ldval_testing;
    bool m_is_ldval_testing_isSet;
    bool m_is_ldval_testing_isValid;

    bool m_is_remote_id;
    bool m_is_remote_id_isSet;
    bool m_is_remote_id_isValid;

    bool m_is_triple_wbj;
    bool m_is_triple_wbj_isSet;
    bool m_is_triple_wbj_isValid;

    bool m_is_wifi_tab;
    bool m_is_wifi_tab_isSet;
    bool m_is_wifi_tab_isValid;

    QMap<QString, OASkycopeDroneSensorLdResult> m_ld_result;
    bool m_ld_result_isSet;
    bool m_ld_result_isValid;

    QString m_lf_error_radius;
    bool m_lf_error_radius_isSet;
    bool m_lf_error_radius_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_modulation;
    bool m_modulation_isSet;
    bool m_modulation_isValid;

    QString m_paired_rc;
    bool m_paired_rc_isSet;
    bool m_paired_rc_isValid;

    QString m_prev_id;
    bool m_prev_id_isSet;
    bool m_prev_id_isValid;

    QString m_remote_id_model_name;
    bool m_remote_id_model_name_isSet;
    bool m_remote_id_model_name_isValid;

    qint32 m_seen_times;
    bool m_seen_times_isSet;
    bool m_seen_times_isValid;

    QList<QString> m_sensor_ids;
    bool m_sensor_ids_isSet;
    bool m_sensor_ids_isValid;

    QList<QString> m_sensors;
    bool m_sensors_isSet;
    bool m_sensors_isValid;

    OASkycopeSharedNames m_shared_names;
    bool m_shared_names_isSet;
    bool m_shared_names_isValid;

    QList<qint32> m_r_signals;
    bool m_r_signals_isSet;
    bool m_r_signals_isValid;

    OASkycopeSpoofStatus m_spoof_status;
    bool m_spoof_status_isSet;
    bool m_spoof_status_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    bool m_switch_for_whitelist;
    bool m_switch_for_whitelist_isSet;
    bool m_switch_for_whitelist_isValid;

    OASkycopeThreat m_threat;
    bool m_threat_isSet;
    bool m_threat_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_wifi_mac_id;
    bool m_wifi_mac_id_isSet;
    bool m_wifi_mac_id_isValid;

    QString m_wifi_ssid;
    bool m_wifi_ssid_isSet;
    bool m_wifi_ssid_isValid;

    QString m_wl_name;
    bool m_wl_name_isSet;
    bool m_wl_name_isValid;
};

} // namespace OASkycope

Q_DECLARE_METATYPE(OASkycope::OASkycopeDroneWifiDevice)

#endif // OASkycopeDroneWifiDevice_H
