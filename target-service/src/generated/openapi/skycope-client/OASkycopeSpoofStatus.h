/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OASkycopeSpoofStatus.h
 *
 * 
 */

#ifndef OASkycopeSpoofStatus_H
#define OASkycopeSpoofStatus_H

#include <QJsonObject>


#include "OASkycopeEnum.h"
#include "OASkycopeObject.h"

namespace OASkycope {

class OASkycopeSpoofStatus : public OASkycopeObject {
public:
    OASkycopeSpoofStatus();
    OASkycopeSpoofStatus(QString json);
    ~OASkycopeSpoofStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanCancelSpoof() const;
    void setCanCancelSpoof(const bool &can_cancel_spoof);
    bool is_can_cancel_spoof_Set() const;
    bool is_can_cancel_spoof_Valid() const;

    qint32 getDetectionDirection() const;
    void setDetectionDirection(const qint32 &detection_direction);
    bool is_detection_direction_Set() const;
    bool is_detection_direction_Valid() const;

    qint32 getSpoofDirection() const;
    void setSpoofDirection(const qint32 &spoof_direction);
    bool is_spoof_direction_Set() const;
    bool is_spoof_direction_Valid() const;

    qint32 getSpoofRange() const;
    void setSpoofRange(const qint32 &spoof_range);
    bool is_spoof_range_Set() const;
    bool is_spoof_range_Valid() const;

    bool isSpoofing() const;
    void setSpoofing(const bool &spoofing);
    bool is_spoofing_Set() const;
    bool is_spoofing_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_cancel_spoof;
    bool m_can_cancel_spoof_isSet;
    bool m_can_cancel_spoof_isValid;

    qint32 m_detection_direction;
    bool m_detection_direction_isSet;
    bool m_detection_direction_isValid;

    qint32 m_spoof_direction;
    bool m_spoof_direction_isSet;
    bool m_spoof_direction_isValid;

    qint32 m_spoof_range;
    bool m_spoof_range_isSet;
    bool m_spoof_range_isValid;

    bool m_spoofing;
    bool m_spoofing_isSet;
    bool m_spoofing_isValid;
};

} // namespace OASkycope

Q_DECLARE_METATYPE(OASkycope::OASkycopeSpoofStatus)

#endif // OASkycopeSpoofStatus_H
