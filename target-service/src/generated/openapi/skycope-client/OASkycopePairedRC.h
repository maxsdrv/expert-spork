/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OASkycopePairedRC.h
 *
 * 
 */

#ifndef OASkycopePairedRC_H
#define OASkycopePairedRC_H

#include <QJsonObject>

#include "OASkycopeDroneSensorLdResult.h"
#include "OASkycopeGps.h"
#include <QMap>
#include <QString>

#include "OASkycopeEnum.h"
#include "OASkycopeObject.h"

namespace OASkycope {
class OASkycopeGps;
class OASkycopeDroneSensorLdResult;

class OASkycopePairedRC : public OASkycopeObject {
public:
    OASkycopePairedRC();
    OASkycopePairedRC(QString json);
    ~OASkycopePairedRC() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OASkycopeGps getGps() const;
    void setGps(const OASkycopeGps &gps);
    bool is_gps_Set() const;
    bool is_gps_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QMap<QString, OASkycopeDroneSensorLdResult> getLdResult() const;
    void setLdResult(const QMap<QString, OASkycopeDroneSensorLdResult> &ld_result);
    bool is_ld_result_Set() const;
    bool is_ld_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OASkycopeGps m_gps;
    bool m_gps_isSet;
    bool m_gps_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QMap<QString, OASkycopeDroneSensorLdResult> m_ld_result;
    bool m_ld_result_isSet;
    bool m_ld_result_isValid;
};

} // namespace OASkycope

Q_DECLARE_METATYPE(OASkycope::OASkycopePairedRC)

#endif // OASkycopePairedRC_H
