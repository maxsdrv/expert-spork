/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OASkycopeNfzSpoofStatus.h
 *
 * 
 */

#ifndef OASkycopeNfzSpoofStatus_H
#define OASkycopeNfzSpoofStatus_H

#include <QJsonObject>


#include "OASkycopeEnum.h"
#include "OASkycopeObject.h"

namespace OASkycope {

class OASkycopeNfzSpoofStatus : public OASkycopeObject {
public:
    OASkycopeNfzSpoofStatus();
    OASkycopeNfzSpoofStatus(QString json);
    ~OASkycopeNfzSpoofStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDirectionSpoofInprogress() const;
    void setDirectionSpoofInprogress(const bool &direction_spoof_inprogress);
    bool is_direction_spoof_inprogress_Set() const;
    bool is_direction_spoof_inprogress_Valid() const;

    qint32 getNfzHeight() const;
    void setNfzHeight(const qint32 &nfz_height);
    bool is_nfz_height_Set() const;
    bool is_nfz_height_Valid() const;

    bool isNfzInprogress() const;
    void setNfzInprogress(const bool &nfz_inprogress);
    bool is_nfz_inprogress_Set() const;
    bool is_nfz_inprogress_Valid() const;

    qint32 getNfzLatitude() const;
    void setNfzLatitude(const qint32 &nfz_latitude);
    bool is_nfz_latitude_Set() const;
    bool is_nfz_latitude_Valid() const;

    qint32 getNfzLongitude() const;
    void setNfzLongitude(const qint32 &nfz_longitude);
    bool is_nfz_longitude_Set() const;
    bool is_nfz_longitude_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_direction_spoof_inprogress;
    bool m_direction_spoof_inprogress_isSet;
    bool m_direction_spoof_inprogress_isValid;

    qint32 m_nfz_height;
    bool m_nfz_height_isSet;
    bool m_nfz_height_isValid;

    bool m_nfz_inprogress;
    bool m_nfz_inprogress_isSet;
    bool m_nfz_inprogress_isValid;

    qint32 m_nfz_latitude;
    bool m_nfz_latitude_isSet;
    bool m_nfz_latitude_isValid;

    qint32 m_nfz_longitude;
    bool m_nfz_longitude_isSet;
    bool m_nfz_longitude_isValid;
};

} // namespace OASkycope

Q_DECLARE_METATYPE(OASkycope::OASkycopeNfzSpoofStatus)

#endif // OASkycopeNfzSpoofStatus_H
