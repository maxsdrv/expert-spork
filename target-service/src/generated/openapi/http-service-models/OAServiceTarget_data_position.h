/**
 * DDS Provider REST API
 * REST API of `dds-target-provider`.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAServiceTarget_data_position.h
 *
 * 
 */

#ifndef OAServiceTarget_data_position_H
#define OAServiceTarget_data_position_H

#include <QJsonObject>

#include "OAServiceGeo_coordinate.h"
#include "OAServiceTarget_data_position_direction.h"
#include <QString>

#include "OAServiceEnum.h"
#include "OAServiceObject.h"

namespace OAService {
class OAServiceGeo_coordinate;
class OAServiceTarget_data_position_direction;

class OAServiceTarget_data_position : public OAServiceObject {
public:
    OAServiceTarget_data_position();
    OAServiceTarget_data_position(QString json);
    ~OAServiceTarget_data_position() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAServiceGeo_coordinate getCoordinate() const;
    void setCoordinate(const OAServiceGeo_coordinate &coordinate);
    bool is_coordinate_Set() const;
    bool is_coordinate_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    OAServiceTarget_data_position_direction getDirection() const;
    void setDirection(const OAServiceTarget_data_position_direction &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAServiceGeo_coordinate m_coordinate;
    bool m_coordinate_isSet;
    bool m_coordinate_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    OAServiceTarget_data_position_direction m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;
};

} // namespace OAService

Q_DECLARE_METATYPE(OAService::OAServiceTarget_data_position)

#endif // OAServiceTarget_data_position_H
