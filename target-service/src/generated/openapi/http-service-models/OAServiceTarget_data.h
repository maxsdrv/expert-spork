/**
 * DDS Provider REST API
 * REST API of `dds-target-provider`.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAServiceTarget_data.h
 *
 * 
 */

#ifndef OAServiceTarget_data_H
#define OAServiceTarget_data_H

#include <QJsonObject>

#include "OAServiceAlarm_status.h"
#include "OAServiceCamera_track.h"
#include "OAServiceClass_name.h"
#include "OAServiceTarget_data_attributes.h"
#include "OAServiceTarget_data_position.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAServiceEnum.h"
#include "OAServiceObject.h"

namespace OAService {
class OAServiceCamera_track;
class OAServiceTarget_data_attributes;
class OAServiceAlarm_status;
class OAServiceTarget_data_position;

class OAServiceTarget_data : public OAServiceObject {
public:
    OAServiceTarget_data();
    OAServiceTarget_data(QString json);
    ~OAServiceTarget_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTargetId() const;
    void setTargetId(const QString &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getSensorId() const;
    void setSensorId(const QString &sensor_id);
    bool is_sensor_id_Set() const;
    bool is_sensor_id_Valid() const;

    QString getTrackId() const;
    void setTrackId(const QString &track_id);
    bool is_track_id_Set() const;
    bool is_track_id_Valid() const;

    OAServiceCamera_track getCameraTrack() const;
    void setCameraTrack(const OAServiceCamera_track &camera_track);
    bool is_camera_track_Set() const;
    bool is_camera_track_Valid() const;

    QList<QString> getAlarmIds() const;
    void setAlarmIds(const QList<QString> &alarm_ids);
    bool is_alarm_ids_Set() const;
    bool is_alarm_ids_Valid() const;

    QList<QString> getClsIds() const;
    void setClsIds(const QList<QString> &cls_ids);
    bool is_cls_ids_Set() const;
    bool is_cls_ids_Valid() const;

    OAServiceClass_name getClassName() const;
    void setClassName(const OAServiceClass_name &class_name);
    bool is_class_name_Set() const;
    bool is_class_name_Valid() const;

    OAServiceTarget_data_attributes getAttributes() const;
    void setAttributes(const OAServiceTarget_data_attributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAServiceAlarm_status getAlarmStatus() const;
    void setAlarmStatus(const OAServiceAlarm_status &alarm_status);
    bool is_alarm_status_Set() const;
    bool is_alarm_status_Valid() const;

    OAServiceTarget_data_position getPosition() const;
    void setPosition(const OAServiceTarget_data_position &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_sensor_id;
    bool m_sensor_id_isSet;
    bool m_sensor_id_isValid;

    QString m_track_id;
    bool m_track_id_isSet;
    bool m_track_id_isValid;

    OAServiceCamera_track m_camera_track;
    bool m_camera_track_isSet;
    bool m_camera_track_isValid;

    QList<QString> m_alarm_ids;
    bool m_alarm_ids_isSet;
    bool m_alarm_ids_isValid;

    QList<QString> m_cls_ids;
    bool m_cls_ids_isSet;
    bool m_cls_ids_isValid;

    OAServiceClass_name m_class_name;
    bool m_class_name_isSet;
    bool m_class_name_isValid;

    OAServiceTarget_data_attributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAServiceAlarm_status m_alarm_status;
    bool m_alarm_status_isSet;
    bool m_alarm_status_isValid;

    OAServiceTarget_data_position m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;
};

} // namespace OAService

Q_DECLARE_METATYPE(OAService::OAServiceTarget_data)

#endif // OAServiceTarget_data_H
