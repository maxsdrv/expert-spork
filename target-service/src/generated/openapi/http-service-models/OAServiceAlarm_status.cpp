/**
 * DDS Provider REST API
 * REST API of `dds-target-provider`.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAServiceAlarm_status.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAServiceHelpers.h"

namespace OAService {

OAServiceAlarm_status::OAServiceAlarm_status(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAServiceAlarm_status::OAServiceAlarm_status() {
    this->initializeModel();
}

OAServiceAlarm_status::~OAServiceAlarm_status() {}

void OAServiceAlarm_status::initializeModel() {

    m_level_isSet = false;
    m_level_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAServiceAlarm_status::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAServiceAlarm_status::fromJsonObject(QJsonObject json) {

    m_level_isValid = ::OAService::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_score_isValid = ::OAService::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAServiceAlarm_status::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAServiceAlarm_status::asJsonObject() const {
    QJsonObject obj;
    if (m_level_isSet) {
        obj.insert(QString("level"), ::OAService::toJsonValue(m_level));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OAService::toJsonValue(m_score));
    }
    return obj;
}

QString OAServiceAlarm_status::getLevel() const {
    return m_level;
}
void OAServiceAlarm_status::setLevel(const QString &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAServiceAlarm_status::is_level_Set() const{
    return m_level_isSet;
}

bool OAServiceAlarm_status::is_level_Valid() const{
    return m_level_isValid;
}

double OAServiceAlarm_status::getScore() const {
    return m_score;
}
void OAServiceAlarm_status::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAServiceAlarm_status::is_score_Set() const{
    return m_score_isSet;
}

bool OAServiceAlarm_status::is_score_Valid() const{
    return m_score_isValid;
}

bool OAServiceAlarm_status::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAServiceAlarm_status::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_level_isValid && true;
}

} // namespace OAService
