/**
 * DDS Provider REST API
 * REST API of `dds-target-provider`.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAServiceTrack_data.h
 *
 * 
 */

#ifndef OAServiceTrack_data_H
#define OAServiceTrack_data_H

#include <QJsonObject>

#include "OAServiceTrack_point.h"
#include <QList>
#include <QString>

#include "OAServiceEnum.h"
#include "OAServiceObject.h"

namespace OAService {
class OAServiceTrack_point;

class OAServiceTrack_data : public OAServiceObject {
public:
    OAServiceTrack_data();
    OAServiceTrack_data(QString json);
    ~OAServiceTrack_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTrackId() const;
    void setTrackId(const QString &track_id);
    bool is_track_id_Set() const;
    bool is_track_id_Valid() const;

    QString getTargetId() const;
    void setTargetId(const QString &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QList<OAServiceTrack_point> getPoints() const;
    void setPoints(const QList<OAServiceTrack_point> &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_track_id;
    bool m_track_id_isSet;
    bool m_track_id_isValid;

    QString m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QList<OAServiceTrack_point> m_points;
    bool m_points_isSet;
    bool m_points_isValid;
};

} // namespace OAService

Q_DECLARE_METATYPE(OAService::OAServiceTrack_data)

#endif // OAServiceTrack_data_H
