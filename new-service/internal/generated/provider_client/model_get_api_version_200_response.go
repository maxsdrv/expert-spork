/*
DDS Provider REST API

REST API of `dds-target-provider`.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package provider_client

import (
	"encoding/json"
	"fmt"
)

// checks if the GetApiVersion200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiVersion200Response{}

// GetApiVersion200Response struct for GetApiVersion200Response
type GetApiVersion200Response struct {
	// Version string
	ApiVersion string `json:"api_version"`
	AdditionalProperties map[string]interface{}
}

type _GetApiVersion200Response GetApiVersion200Response

// NewGetApiVersion200Response instantiates a new GetApiVersion200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiVersion200Response(apiVersion string) *GetApiVersion200Response {
	this := GetApiVersion200Response{}
	this.ApiVersion = apiVersion
	return &this
}

// NewGetApiVersion200ResponseWithDefaults instantiates a new GetApiVersion200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiVersion200ResponseWithDefaults() *GetApiVersion200Response {
	this := GetApiVersion200Response{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *GetApiVersion200Response) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *GetApiVersion200Response) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *GetApiVersion200Response) SetApiVersion(v string) {
	o.ApiVersion = v
}

func (o GetApiVersion200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiVersion200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_version"] = o.ApiVersion

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetApiVersion200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApiVersion200Response := _GetApiVersion200Response{}

	err = json.Unmarshal(data, &varGetApiVersion200Response)

	if err != nil {
		return err
	}

	*o = GetApiVersion200Response(varGetApiVersion200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "api_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetApiVersion200Response struct {
	value *GetApiVersion200Response
	isSet bool
}

func (v NullableGetApiVersion200Response) Get() *GetApiVersion200Response {
	return v.value
}

func (v *NullableGetApiVersion200Response) Set(val *GetApiVersion200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiVersion200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiVersion200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiVersion200Response(val *GetApiVersion200Response) *NullableGetApiVersion200Response {
	return &NullableGetApiVersion200Response{value: val, isSet: true}
}

func (v NullableGetApiVersion200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiVersion200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


