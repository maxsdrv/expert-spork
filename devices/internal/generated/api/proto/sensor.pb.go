// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: sensor.proto

package apiv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorType int32

const (
	SensorType_SENSOR_TYPE_RFD    SensorType = 0
	SensorType_SENSOR_TYPE_RADAR  SensorType = 1
	SensorType_SENSOR_TYPE_CAMERA SensorType = 2
)

// Enum value maps for SensorType.
var (
	SensorType_name = map[int32]string{
		0: "SENSOR_TYPE_RFD",
		1: "SENSOR_TYPE_RADAR",
		2: "SENSOR_TYPE_CAMERA",
	}
	SensorType_value = map[string]int32{
		"SENSOR_TYPE_RFD":    0,
		"SENSOR_TYPE_RADAR":  1,
		"SENSOR_TYPE_CAMERA": 2,
	}
)

func (x SensorType) Enum() *SensorType {
	p := new(SensorType)
	*p = x
	return p
}

func (x SensorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensorType) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_proto_enumTypes[0].Descriptor()
}

func (SensorType) Type() protoreflect.EnumType {
	return &file_sensor_proto_enumTypes[0]
}

func (x SensorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SensorType.Descriptor instead.
func (SensorType) EnumDescriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{0}
}

type JammerMode int32

const (
	JammerMode_JAMMER_MODE_AUTO   JammerMode = 0
	JammerMode_JAMMER_MODE_MANUAL JammerMode = 1
)

// Enum value maps for JammerMode.
var (
	JammerMode_name = map[int32]string{
		0: "JAMMER_MODE_AUTO",
		1: "JAMMER_MODE_MANUAL",
	}
	JammerMode_value = map[string]int32{
		"JAMMER_MODE_AUTO":   0,
		"JAMMER_MODE_MANUAL": 1,
	}
)

func (x JammerMode) Enum() *JammerMode {
	p := new(JammerMode)
	*p = x
	return p
}

func (x JammerMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JammerMode) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_proto_enumTypes[1].Descriptor()
}

func (JammerMode) Type() protoreflect.EnumType {
	return &file_sensor_proto_enumTypes[1]
}

func (x JammerMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JammerMode.Descriptor instead.
func (JammerMode) EnumDescriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{1}
}

type SensorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorIdList  []string               `protobuf:"bytes,1,rep,name=sensor_id_list,json=sensorIdList,proto3" json:"sensor_id_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorsResponse) Reset() {
	*x = SensorsResponse{}
	mi := &file_sensor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorsResponse) ProtoMessage() {}

func (x *SensorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorsResponse.ProtoReflect.Descriptor instead.
func (*SensorsResponse) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SensorsResponse) GetSensorIdList() []string {
	if x != nil {
		return x.SensorIdList
	}
	return nil
}

type SensorInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      *string                `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3,oneof" json:"sensor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorInfoRequest) Reset() {
	*x = SensorInfoRequest{}
	mi := &file_sensor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorInfoRequest) ProtoMessage() {}

func (x *SensorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorInfoRequest.ProtoReflect.Descriptor instead.
func (*SensorInfoRequest) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *SensorInfoRequest) GetSensorId() string {
	if x != nil && x.SensorId != nil {
		return *x.SensorId
	}
	return ""
}

type SensorInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of connected jammer IDs
	JammerIds     []string    `protobuf:"bytes,11,rep,name=jammer_ids,json=jammerIds,proto3" json:"jammer_ids,omitempty"`
	Type          *SensorType `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.SensorType,oneof" json:"type,omitempty"`
	Model         *string     `protobuf:"bytes,3,opt,name=model,proto3,oneof" json:"model,omitempty"`
	Serial        *string     `protobuf:"bytes,4,opt,name=serial,proto3,oneof" json:"serial,omitempty"`
	SwVersion     *string     `protobuf:"bytes,5,opt,name=sw_version,json=swVersion,proto3,oneof" json:"sw_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorInfoResponse) Reset() {
	*x = SensorInfoResponse{}
	mi := &file_sensor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorInfoResponse) ProtoMessage() {}

func (x *SensorInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorInfoResponse.ProtoReflect.Descriptor instead.
func (*SensorInfoResponse) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{2}
}

func (x *SensorInfoResponse) GetJammerIds() []string {
	if x != nil {
		return x.JammerIds
	}
	return nil
}

func (x *SensorInfoResponse) GetType() SensorType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return SensorType_SENSOR_TYPE_RFD
}

func (x *SensorInfoResponse) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *SensorInfoResponse) GetSerial() string {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return ""
}

func (x *SensorInfoResponse) GetSwVersion() string {
	if x != nil && x.SwVersion != nil {
		return *x.SwVersion
	}
	return ""
}

type SensorInfoDynamicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      *string                `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3,oneof" json:"sensor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorInfoDynamicRequest) Reset() {
	*x = SensorInfoDynamicRequest{}
	mi := &file_sensor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorInfoDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorInfoDynamicRequest) ProtoMessage() {}

func (x *SensorInfoDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorInfoDynamicRequest.ProtoReflect.Descriptor instead.
func (*SensorInfoDynamicRequest) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{3}
}

func (x *SensorInfoDynamicRequest) GetSensorId() string {
	if x != nil && x.SensorId != nil {
		return *x.SensorId
	}
	return ""
}

type SensorInfoDynamicResponse struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Disabled     *bool                  `protobuf:"varint,6,opt,name=disabled,proto3,oneof" json:"disabled,omitempty"`
	State        *string                `protobuf:"bytes,7,opt,name=state,proto3,oneof" json:"state,omitempty"`
	Position     *GeoPosition           `protobuf:"bytes,8,opt,name=position,proto3,oneof" json:"position,omitempty"`
	PositionMode *GeoPositionMode       `protobuf:"varint,9,opt,name=position_mode,json=positionMode,proto3,enum=api.v1.GeoPositionMode,oneof" json:"position_mode,omitempty"`
	Workzone     []*WorkzoneSector      `protobuf:"bytes,10,rep,name=workzone,proto3" json:"workzone,omitempty"`
	JammerMode   *JammerMode            `protobuf:"varint,12,opt,name=jammer_mode,json=jammerMode,proto3,enum=api.v1.JammerMode,oneof" json:"jammer_mode,omitempty"`
	// Jammer timeout in AUTO mode in seconds
	JammerAutoTimeout *int32  `protobuf:"varint,13,opt,name=jammer_auto_timeout,json=jammerAutoTimeout,proto3,oneof" json:"jammer_auto_timeout,omitempty"`
	HwInfo            *HwInfo `protobuf:"bytes,14,opt,name=hw_info,json=hwInfo,proto3,oneof" json:"hw_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SensorInfoDynamicResponse) Reset() {
	*x = SensorInfoDynamicResponse{}
	mi := &file_sensor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorInfoDynamicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorInfoDynamicResponse) ProtoMessage() {}

func (x *SensorInfoDynamicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorInfoDynamicResponse.ProtoReflect.Descriptor instead.
func (*SensorInfoDynamicResponse) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{4}
}

func (x *SensorInfoDynamicResponse) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *SensorInfoDynamicResponse) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *SensorInfoDynamicResponse) GetPosition() *GeoPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SensorInfoDynamicResponse) GetPositionMode() GeoPositionMode {
	if x != nil && x.PositionMode != nil {
		return *x.PositionMode
	}
	return GeoPositionMode_GEO_POSITION_MODE_AUTO
}

func (x *SensorInfoDynamicResponse) GetWorkzone() []*WorkzoneSector {
	if x != nil {
		return x.Workzone
	}
	return nil
}

func (x *SensorInfoDynamicResponse) GetJammerMode() JammerMode {
	if x != nil && x.JammerMode != nil {
		return *x.JammerMode
	}
	return JammerMode_JAMMER_MODE_AUTO
}

func (x *SensorInfoDynamicResponse) GetJammerAutoTimeout() int32 {
	if x != nil && x.JammerAutoTimeout != nil {
		return *x.JammerAutoTimeout
	}
	return 0
}

func (x *SensorInfoDynamicResponse) GetHwInfo() *HwInfo {
	if x != nil {
		return x.HwInfo
	}
	return nil
}

type SetJammerModeRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	SensorId   *string                `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3,oneof" json:"sensor_id,omitempty"`
	JammerMode *JammerMode            `protobuf:"varint,2,opt,name=jammer_mode,json=jammerMode,proto3,enum=api.v1.JammerMode,oneof" json:"jammer_mode,omitempty"`
	// Timeout for AUTO mode in seconds, ignored for MANUAL
	Timeout       *int32 `protobuf:"varint,3,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetJammerModeRequest) Reset() {
	*x = SetJammerModeRequest{}
	mi := &file_sensor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetJammerModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJammerModeRequest) ProtoMessage() {}

func (x *SetJammerModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJammerModeRequest.ProtoReflect.Descriptor instead.
func (*SetJammerModeRequest) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{5}
}

func (x *SetJammerModeRequest) GetSensorId() string {
	if x != nil && x.SensorId != nil {
		return *x.SensorId
	}
	return ""
}

func (x *SetJammerModeRequest) GetJammerMode() JammerMode {
	if x != nil && x.JammerMode != nil {
		return *x.JammerMode
	}
	return JammerMode_JAMMER_MODE_AUTO
}

func (x *SetJammerModeRequest) GetTimeout() int32 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

var File_sensor_proto protoreflect.FileDescriptor

const file_sensor_proto_rawDesc = "" +
	"\n" +
	"\fsensor.proto\x12\x06api.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x10components.proto\"I\n" +
	"\x0fSensorsResponse\x126\n" +
	"\x0esensor_id_list\x18\x01 \x03(\tB\x10\xbaH\r\xc8\x01\x01\x92\x01\a\"\x05r\x03\xb0\x01\x01R\fsensorIdList\"P\n" +
	"\x11SensorInfoRequest\x12-\n" +
	"\tsensor_id\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01H\x00R\bsensorId\x88\x01\x01B\f\n" +
	"\n" +
	"_sensor_id\"\x88\x02\n" +
	"\x12SensorInfoResponse\x12,\n" +
	"\n" +
	"jammer_ids\x18\v \x03(\tB\r\xbaH\n" +
	"\x92\x01\a\"\x05r\x03\xb0\x01\x01R\tjammerIds\x123\n" +
	"\x04type\x18\x02 \x01(\x0e2\x12.api.v1.SensorTypeB\x06\xbaH\x03\xc8\x01\x01H\x00R\x04type\x88\x01\x01\x12!\n" +
	"\x05model\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01H\x01R\x05model\x88\x01\x01\x12\x1b\n" +
	"\x06serial\x18\x04 \x01(\tH\x02R\x06serial\x88\x01\x01\x12\"\n" +
	"\n" +
	"sw_version\x18\x05 \x01(\tH\x03R\tswVersion\x88\x01\x01B\a\n" +
	"\x05_typeB\b\n" +
	"\x06_modelB\t\n" +
	"\a_serialB\r\n" +
	"\v_sw_version\"W\n" +
	"\x18SensorInfoDynamicRequest\x12-\n" +
	"\tsensor_id\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01H\x00R\bsensorId\x88\x01\x01B\f\n" +
	"\n" +
	"_sensor_id\"\xb3\x04\n" +
	"\x19SensorInfoDynamicResponse\x12'\n" +
	"\bdisabled\x18\x06 \x01(\bB\x06\xbaH\x03\xc8\x01\x01H\x00R\bdisabled\x88\x01\x01\x12!\n" +
	"\x05state\x18\a \x01(\tB\x06\xbaH\x03\xc8\x01\x01H\x01R\x05state\x88\x01\x01\x12<\n" +
	"\bposition\x18\b \x01(\v2\x13.api.v1.GeoPositionB\x06\xbaH\x03\xc8\x01\x01H\x02R\bposition\x88\x01\x01\x12I\n" +
	"\rposition_mode\x18\t \x01(\x0e2\x17.api.v1.GeoPositionModeB\x06\xbaH\x03\xc8\x01\x01H\x03R\fpositionMode\x88\x01\x01\x12:\n" +
	"\bworkzone\x18\n" +
	" \x03(\v2\x16.api.v1.WorkzoneSectorB\x06\xbaH\x03\xc8\x01\x01R\bworkzone\x128\n" +
	"\vjammer_mode\x18\f \x01(\x0e2\x12.api.v1.JammerModeH\x04R\n" +
	"jammerMode\x88\x01\x01\x123\n" +
	"\x13jammer_auto_timeout\x18\r \x01(\x05H\x05R\x11jammerAutoTimeout\x88\x01\x01\x12,\n" +
	"\ahw_info\x18\x0e \x01(\v2\x0e.api.v1.HwInfoH\x06R\x06hwInfo\x88\x01\x01B\v\n" +
	"\t_disabledB\b\n" +
	"\x06_stateB\v\n" +
	"\t_positionB\x10\n" +
	"\x0e_position_modeB\x0e\n" +
	"\f_jammer_modeB\x16\n" +
	"\x14_jammer_auto_timeoutB\n" +
	"\n" +
	"\b_hw_info\"\xd8\x01\n" +
	"\x14SetJammerModeRequest\x12-\n" +
	"\tsensor_id\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01H\x00R\bsensorId\x88\x01\x01\x12@\n" +
	"\vjammer_mode\x18\x02 \x01(\x0e2\x12.api.v1.JammerModeB\x06\xbaH\x03\xc8\x01\x01H\x01R\n" +
	"jammerMode\x88\x01\x01\x12%\n" +
	"\atimeout\x18\x03 \x01(\x05B\x06\xbaH\x03\xc8\x01\x01H\x02R\atimeout\x88\x01\x01B\f\n" +
	"\n" +
	"_sensor_idB\x0e\n" +
	"\f_jammer_modeB\n" +
	"\n" +
	"\b_timeout*P\n" +
	"\n" +
	"SensorType\x12\x13\n" +
	"\x0fSENSOR_TYPE_RFD\x10\x00\x12\x15\n" +
	"\x11SENSOR_TYPE_RADAR\x10\x01\x12\x16\n" +
	"\x12SENSOR_TYPE_CAMERA\x10\x02*:\n" +
	"\n" +
	"JammerMode\x12\x14\n" +
	"\x10JAMMER_MODE_AUTO\x10\x00\x12\x16\n" +
	"\x12JAMMER_MODE_MANUAL\x10\x012\xbb\x02\n" +
	"\rSensorService\x12<\n" +
	"\aSensors\x12\x16.google.protobuf.Empty\x1a\x17.api.v1.SensorsResponse\"\x00\x12E\n" +
	"\n" +
	"SensorInfo\x12\x19.api.v1.SensorInfoRequest\x1a\x1a.api.v1.SensorInfoResponse\"\x00\x12\\\n" +
	"\x11SensorInfoDynamic\x12 .api.v1.SensorInfoDynamicRequest\x1a!.api.v1.SensorInfoDynamicResponse\"\x000\x01\x12G\n" +
	"\rSetJammerMode\x12\x1c.api.v1.SetJammerModeRequest\x1a\x16.google.protobuf.Empty\"\x00B\x83\x01\n" +
	"\n" +
	"com.api.v1B\vSensorProtoP\x01Z/dds-provider/internal/generated/api/proto;apiv1\xa2\x02\x03AXX\xaa\x02\x06Api.V1\xca\x02\x06Api\\V1\xe2\x02\x12Api\\V1\\GPBMetadata\xea\x02\aApi::V1b\x06proto3"

var (
	file_sensor_proto_rawDescOnce sync.Once
	file_sensor_proto_rawDescData []byte
)

func file_sensor_proto_rawDescGZIP() []byte {
	file_sensor_proto_rawDescOnce.Do(func() {
		file_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sensor_proto_rawDesc), len(file_sensor_proto_rawDesc)))
	})
	return file_sensor_proto_rawDescData
}

var file_sensor_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sensor_proto_goTypes = []any{
	(SensorType)(0),                   // 0: api.v1.SensorType
	(JammerMode)(0),                   // 1: api.v1.JammerMode
	(*SensorsResponse)(nil),           // 2: api.v1.SensorsResponse
	(*SensorInfoRequest)(nil),         // 3: api.v1.SensorInfoRequest
	(*SensorInfoResponse)(nil),        // 4: api.v1.SensorInfoResponse
	(*SensorInfoDynamicRequest)(nil),  // 5: api.v1.SensorInfoDynamicRequest
	(*SensorInfoDynamicResponse)(nil), // 6: api.v1.SensorInfoDynamicResponse
	(*SetJammerModeRequest)(nil),      // 7: api.v1.SetJammerModeRequest
	(*GeoPosition)(nil),               // 8: api.v1.GeoPosition
	(GeoPositionMode)(0),              // 9: api.v1.GeoPositionMode
	(*WorkzoneSector)(nil),            // 10: api.v1.WorkzoneSector
	(*HwInfo)(nil),                    // 11: api.v1.HwInfo
	(*emptypb.Empty)(nil),             // 12: google.protobuf.Empty
}
var file_sensor_proto_depIdxs = []int32{
	0,  // 0: api.v1.SensorInfoResponse.type:type_name -> api.v1.SensorType
	8,  // 1: api.v1.SensorInfoDynamicResponse.position:type_name -> api.v1.GeoPosition
	9,  // 2: api.v1.SensorInfoDynamicResponse.position_mode:type_name -> api.v1.GeoPositionMode
	10, // 3: api.v1.SensorInfoDynamicResponse.workzone:type_name -> api.v1.WorkzoneSector
	1,  // 4: api.v1.SensorInfoDynamicResponse.jammer_mode:type_name -> api.v1.JammerMode
	11, // 5: api.v1.SensorInfoDynamicResponse.hw_info:type_name -> api.v1.HwInfo
	1,  // 6: api.v1.SetJammerModeRequest.jammer_mode:type_name -> api.v1.JammerMode
	12, // 7: api.v1.SensorService.Sensors:input_type -> google.protobuf.Empty
	3,  // 8: api.v1.SensorService.SensorInfo:input_type -> api.v1.SensorInfoRequest
	5,  // 9: api.v1.SensorService.SensorInfoDynamic:input_type -> api.v1.SensorInfoDynamicRequest
	7,  // 10: api.v1.SensorService.SetJammerMode:input_type -> api.v1.SetJammerModeRequest
	2,  // 11: api.v1.SensorService.Sensors:output_type -> api.v1.SensorsResponse
	4,  // 12: api.v1.SensorService.SensorInfo:output_type -> api.v1.SensorInfoResponse
	6,  // 13: api.v1.SensorService.SensorInfoDynamic:output_type -> api.v1.SensorInfoDynamicResponse
	12, // 14: api.v1.SensorService.SetJammerMode:output_type -> google.protobuf.Empty
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_sensor_proto_init() }
func file_sensor_proto_init() {
	if File_sensor_proto != nil {
		return
	}
	file_components_proto_init()
	file_sensor_proto_msgTypes[1].OneofWrappers = []any{}
	file_sensor_proto_msgTypes[2].OneofWrappers = []any{}
	file_sensor_proto_msgTypes[3].OneofWrappers = []any{}
	file_sensor_proto_msgTypes[4].OneofWrappers = []any{}
	file_sensor_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sensor_proto_rawDesc), len(file_sensor_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sensor_proto_goTypes,
		DependencyIndexes: file_sensor_proto_depIdxs,
		EnumInfos:         file_sensor_proto_enumTypes,
		MessageInfos:      file_sensor_proto_msgTypes,
	}.Build()
	File_sensor_proto = out.File
	file_sensor_proto_goTypes = nil
	file_sensor_proto_depIdxs = nil
}
