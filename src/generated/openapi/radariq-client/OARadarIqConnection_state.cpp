/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqConnection_state.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqConnection_state::OARadarIqConnection_state(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqConnection_state::OARadarIqConnection_state() {
    this->initializeModel();
}

OARadarIqConnection_state::~OARadarIqConnection_state() {}

void OARadarIqConnection_state::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOARadarIqConnection_state::INVALID_VALUE_OPENAPI_GENERATED;
}

void OARadarIqConnection_state::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DISCONNECTED", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqConnection_state::DISCONNECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CONNECTING", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqConnection_state::CONNECTING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CONNECTED", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqConnection_state::CONNECTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OARadarIqConnection_state::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OARadarIqConnection_state::asJson() const {
    
    QString val;
    switch (m_value){
        case eOARadarIqConnection_state::DISCONNECTED:
            val = "DISCONNECTED";
            break;
        case eOARadarIqConnection_state::CONNECTING:
            val = "CONNECTING";
            break;
        case eOARadarIqConnection_state::CONNECTED:
            val = "CONNECTED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OARadarIqConnection_state::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OARadarIqConnection_state::eOARadarIqConnection_state OARadarIqConnection_state::getValue() const {
    return m_value;
}

void OARadarIqConnection_state::setValue(const OARadarIqConnection_state::eOARadarIqConnection_state& value){
    m_value = value;
    m_value_isSet = true;
}
bool OARadarIqConnection_state::isSet() const {
    
    return m_value_isSet;
}

bool OARadarIqConnection_state::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OARadarIq
