/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqTrack_object_id.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqTrack_object_id::OARadarIqTrack_object_id(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqTrack_object_id::OARadarIqTrack_object_id() {
    this->initializeModel();
}

OARadarIqTrack_object_id::~OARadarIqTrack_object_id() {}

void OARadarIqTrack_object_id::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;
}

void OARadarIqTrack_object_id::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OARadarIqTrack_object_id::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OARadarIq::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OARadarIqTrack_object_id::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OARadarIqTrack_object_id::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OARadarIq::toJsonValue(m_id));
    }
    return obj;
}

qint32 OARadarIqTrack_object_id::getId() const {
    return m_id;
}
void OARadarIqTrack_object_id::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OARadarIqTrack_object_id::is_id_Set() const{
    return m_id_isSet;
}

bool OARadarIqTrack_object_id::is_id_Valid() const{
    return m_id_isValid;
}

bool OARadarIqTrack_object_id::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OARadarIqTrack_object_id::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && true;
}

} // namespace OARadarIq
