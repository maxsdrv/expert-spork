/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OARadarIqTrack_point_geometry.h
 *
 * 
 */

#ifndef OARadarIqTrack_point_geometry_H
#define OARadarIqTrack_point_geometry_H

#include <QJsonObject>


#include "OARadarIqEnum.h"
#include "OARadarIqObject.h"

namespace OARadarIq {

class OARadarIqTrack_point_geometry : public OARadarIqObject {
public:
    OARadarIqTrack_point_geometry();
    OARadarIqTrack_point_geometry(QString json);
    ~OARadarIqTrack_point_geometry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getX() const;
    void setX(const double &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    double getY() const;
    void setY(const double &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    double getZ() const;
    void setZ(const double &z);
    bool is_z_Set() const;
    bool is_z_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    double getRange() const;
    void setRange(const double &range);
    bool is_range_Set() const;
    bool is_range_Valid() const;

    double getAzimuth() const;
    void setAzimuth(const double &azimuth);
    bool is_azimuth_Set() const;
    bool is_azimuth_Valid() const;

    double getElevation() const;
    void setElevation(const double &elevation);
    bool is_elevation_Set() const;
    bool is_elevation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    double m_y;
    bool m_y_isSet;
    bool m_y_isValid;

    double m_z;
    bool m_z_isSet;
    bool m_z_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    double m_range;
    bool m_range_isSet;
    bool m_range_isValid;

    double m_azimuth;
    bool m_azimuth_isSet;
    bool m_azimuth_isValid;

    double m_elevation;
    bool m_elevation_isSet;
    bool m_elevation_isValid;
};

} // namespace OARadarIq

Q_DECLARE_METATYPE(OARadarIq::OARadarIqTrack_point_geometry)

#endif // OARadarIqTrack_point_geometry_H
