/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqRadar_threshold_control.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqRadar_threshold_control::OARadarIqRadar_threshold_control(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqRadar_threshold_control::OARadarIqRadar_threshold_control() {
    this->initializeModel();
}

OARadarIqRadar_threshold_control::~OARadarIqRadar_threshold_control() {}

void OARadarIqRadar_threshold_control::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOARadarIqRadar_threshold_control::INVALID_VALUE_OPENAPI_GENERATED;
}

void OARadarIqRadar_threshold_control::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AUTO", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_threshold_control::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MANUAL", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_threshold_control::MANUAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OARadarIqRadar_threshold_control::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OARadarIqRadar_threshold_control::asJson() const {
    
    QString val;
    switch (m_value){
        case eOARadarIqRadar_threshold_control::AUTO:
            val = "AUTO";
            break;
        case eOARadarIqRadar_threshold_control::MANUAL:
            val = "MANUAL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OARadarIqRadar_threshold_control::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OARadarIqRadar_threshold_control::eOARadarIqRadar_threshold_control OARadarIqRadar_threshold_control::getValue() const {
    return m_value;
}

void OARadarIqRadar_threshold_control::setValue(const OARadarIqRadar_threshold_control::eOARadarIqRadar_threshold_control& value){
    m_value = value;
    m_value_isSet = true;
}
bool OARadarIqRadar_threshold_control::isSet() const {
    
    return m_value_isSet;
}

bool OARadarIqRadar_threshold_control::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OARadarIq
