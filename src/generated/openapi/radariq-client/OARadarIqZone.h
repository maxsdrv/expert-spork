/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OARadarIqZone.h
 *
 * 
 */

#ifndef OARadarIqZone_H
#define OARadarIqZone_H

#include <QJsonObject>


#include "OARadarIqEnum.h"
#include "OARadarIqObject.h"

namespace OARadarIq {

class OARadarIqZone : public OARadarIqObject {
public:
    OARadarIqZone();
    OARadarIqZone(QString json);
    ~OARadarIqZone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAltitudeBlank() const;
    void setAltitudeBlank(const double &altitude_blank);
    bool is_altitude_blank_Set() const;
    bool is_altitude_blank_Valid() const;

    double getAltitudeThreshold() const;
    void setAltitudeThreshold(const double &altitude_threshold);
    bool is_altitude_threshold_Set() const;
    bool is_altitude_threshold_Valid() const;

    double getAzimuthMax() const;
    void setAzimuthMax(const double &azimuth_max);
    bool is_azimuth_max_Set() const;
    bool is_azimuth_max_Valid() const;

    double getAzimuthMin() const;
    void setAzimuthMin(const double &azimuth_min);
    bool is_azimuth_min_Set() const;
    bool is_azimuth_min_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    double getRadiusMax() const;
    void setRadiusMax(const double &radius_max);
    bool is_radius_max_Set() const;
    bool is_radius_max_Valid() const;

    double getRadiusMin() const;
    void setRadiusMin(const double &radius_min);
    bool is_radius_min_Set() const;
    bool is_radius_min_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_altitude_blank;
    bool m_altitude_blank_isSet;
    bool m_altitude_blank_isValid;

    double m_altitude_threshold;
    bool m_altitude_threshold_isSet;
    bool m_altitude_threshold_isValid;

    double m_azimuth_max;
    bool m_azimuth_max_isSet;
    bool m_azimuth_max_isValid;

    double m_azimuth_min;
    bool m_azimuth_min_isSet;
    bool m_azimuth_min_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    double m_radius_max;
    bool m_radius_max_isSet;
    bool m_radius_max_isValid;

    double m_radius_min;
    bool m_radius_min_isSet;
    bool m_radius_min_isValid;
};

} // namespace OARadarIq

Q_DECLARE_METATYPE(OARadarIq::OARadarIqZone)

#endif // OARadarIqZone_H
