/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqRadar_frequency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqRadar_frequency::OARadarIqRadar_frequency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqRadar_frequency::OARadarIqRadar_frequency() {
    this->initializeModel();
}

OARadarIqRadar_frequency::~OARadarIqRadar_frequency() {}

void OARadarIqRadar_frequency::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOARadarIqRadar_frequency::INVALID_VALUE_OPENAPI_GENERATED;
}

void OARadarIqRadar_frequency::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FREQ_5640", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5640;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5658", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5658;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5676", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5676;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5694", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5694;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5712", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5712;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5730", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5730;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5748", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5748;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5766", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5766;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5784", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5784;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5802", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5802;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5820", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5820;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5838", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5838;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5856", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5856;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5874", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5874;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5892", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5892;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREQ_5910", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::FREQ_5910;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOARadarIqRadar_frequency::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OARadarIqRadar_frequency::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OARadarIqRadar_frequency::asJson() const {
    
    QString val;
    switch (m_value){
        case eOARadarIqRadar_frequency::FREQ_5640:
            val = "FREQ_5640";
            break;
        case eOARadarIqRadar_frequency::FREQ_5658:
            val = "FREQ_5658";
            break;
        case eOARadarIqRadar_frequency::FREQ_5676:
            val = "FREQ_5676";
            break;
        case eOARadarIqRadar_frequency::FREQ_5694:
            val = "FREQ_5694";
            break;
        case eOARadarIqRadar_frequency::FREQ_5712:
            val = "FREQ_5712";
            break;
        case eOARadarIqRadar_frequency::FREQ_5730:
            val = "FREQ_5730";
            break;
        case eOARadarIqRadar_frequency::FREQ_5748:
            val = "FREQ_5748";
            break;
        case eOARadarIqRadar_frequency::FREQ_5766:
            val = "FREQ_5766";
            break;
        case eOARadarIqRadar_frequency::FREQ_5784:
            val = "FREQ_5784";
            break;
        case eOARadarIqRadar_frequency::FREQ_5802:
            val = "FREQ_5802";
            break;
        case eOARadarIqRadar_frequency::FREQ_5820:
            val = "FREQ_5820";
            break;
        case eOARadarIqRadar_frequency::FREQ_5838:
            val = "FREQ_5838";
            break;
        case eOARadarIqRadar_frequency::FREQ_5856:
            val = "FREQ_5856";
            break;
        case eOARadarIqRadar_frequency::FREQ_5874:
            val = "FREQ_5874";
            break;
        case eOARadarIqRadar_frequency::FREQ_5892:
            val = "FREQ_5892";
            break;
        case eOARadarIqRadar_frequency::FREQ_5910:
            val = "FREQ_5910";
            break;
        case eOARadarIqRadar_frequency::UNKNOWN:
            val = "UNKNOWN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OARadarIqRadar_frequency::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OARadarIqRadar_frequency::eOARadarIqRadar_frequency OARadarIqRadar_frequency::getValue() const {
    return m_value;
}

void OARadarIqRadar_frequency::setValue(const OARadarIqRadar_frequency::eOARadarIqRadar_frequency& value){
    m_value = value;
    m_value_isSet = true;
}
bool OARadarIqRadar_frequency::isSet() const {
    
    return m_value_isSet;
}

bool OARadarIqRadar_frequency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OARadarIq
