/**
 * RCT Service REST API
 * REST API of `rct-service`.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OARadarIqBool_connected.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OARadarIqHelpers.h"

namespace OARadarIq {

OARadarIqBool_connected::OARadarIqBool_connected(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OARadarIqBool_connected::OARadarIqBool_connected() {
    this->initializeModel();
}

OARadarIqBool_connected::~OARadarIqBool_connected() {}

void OARadarIqBool_connected::initializeModel() {

    m_connected_isSet = false;
    m_connected_isValid = false;
}

void OARadarIqBool_connected::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OARadarIqBool_connected::fromJsonObject(QJsonObject json) {

    m_connected_isValid = ::OARadarIq::fromJsonValue(m_connected, json[QString("connected")]);
    m_connected_isSet = !json[QString("connected")].isNull() && m_connected_isValid;
}

QString OARadarIqBool_connected::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OARadarIqBool_connected::asJsonObject() const {
    QJsonObject obj;
    if (m_connected_isSet) {
        obj.insert(QString("connected"), ::OARadarIq::toJsonValue(m_connected));
    }
    return obj;
}

bool OARadarIqBool_connected::isConnected() const {
    return m_connected;
}
void OARadarIqBool_connected::setConnected(const bool &connected) {
    m_connected = connected;
    m_connected_isSet = true;
}

bool OARadarIqBool_connected::is_connected_Set() const{
    return m_connected_isSet;
}

bool OARadarIqBool_connected::is_connected_Valid() const{
    return m_connected_isValid;
}

bool OARadarIqBool_connected::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connected_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OARadarIqBool_connected::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_connected_isValid && true;
}

} // namespace OARadarIq
