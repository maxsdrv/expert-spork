/**
 * DDS Provider REST API
 * REST API of `dds-target-provider`.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAServiceTarget_data_attributes.h
 *
 * 
 */

#ifndef OAServiceTarget_data_attributes_H
#define OAServiceTarget_data_attributes_H

#include <QJsonObject>

#include "OAServiceTarget_attributes_RFD.h"
#include <QList>
#include <QString>

#include "OAServiceEnum.h"
#include "OAServiceObject.h"

namespace OAService {

class OAServiceTarget_data_attributes : public OAServiceObject {
public:
    OAServiceTarget_data_attributes();
    OAServiceTarget_data_attributes(QString json);
    ~OAServiceTarget_data_attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDigital() const;
    void setDigital(const bool &digital);
    bool is_digital_Set() const;
    bool is_digital_Valid() const;

    QList<qint32> getFrequencies() const;
    void setFrequencies(const QList<qint32> &frequencies);
    bool is_frequencies_Set() const;
    bool is_frequencies_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isGeolocation() const;
    void setGeolocation(const bool &geolocation);
    bool is_geolocation_Set() const;
    bool is_geolocation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_digital;
    bool m_digital_isSet;
    bool m_digital_isValid;

    QList<qint32> m_frequencies;
    bool m_frequencies_isSet;
    bool m_frequencies_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_geolocation;
    bool m_geolocation_isSet;
    bool m_geolocation_isValid;
};

} // namespace OAService

Q_DECLARE_METATYPE(OAService::OAServiceTarget_data_attributes)

#endif // OAServiceTarget_data_attributes_H
