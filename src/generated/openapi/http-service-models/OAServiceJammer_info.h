/**
 * DDS Provider REST API
 * REST API of `dds-target-provider`.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAServiceJammer_info.h
 *
 * 
 */

#ifndef OAServiceJammer_info_H
#define OAServiceJammer_info_H

#include <QJsonObject>

#include "OAServiceBand.h"
#include "OAServiceGeo_position.h"
#include "OAServiceGeo_position_mode.h"
#include "OAServiceHw_info.h"
#include "OAServiceJammer_timeout_status.h"
#include "OAServiceState.h"
#include "OAServiceWorkzone_sector.h"
#include <QList>
#include <QString>

#include "OAServiceEnum.h"
#include "OAServiceObject.h"

namespace OAService {
class OAServiceGeo_position;
class OAServiceWorkzone_sector;
class OAServiceBand;
class OAServiceHw_info;
class OAServiceJammer_timeout_status;

class OAServiceJammer_info : public OAServiceObject {
public:
    OAServiceJammer_info();
    OAServiceJammer_info(QString json);
    ~OAServiceJammer_info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    QString getSwVersion() const;
    void setSwVersion(const QString &sw_version);
    bool is_sw_version_Set() const;
    bool is_sw_version_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    OAServiceState getState() const;
    void setState(const OAServiceState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAServiceGeo_position getPosition() const;
    void setPosition(const OAServiceGeo_position &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    OAServiceGeo_position_mode getPositionMode() const;
    void setPositionMode(const OAServiceGeo_position_mode &position_mode);
    bool is_position_mode_Set() const;
    bool is_position_mode_Valid() const;

    QList<OAServiceWorkzone_sector> getWorkzone() const;
    void setWorkzone(const QList<OAServiceWorkzone_sector> &workzone);
    bool is_workzone_Set() const;
    bool is_workzone_Valid() const;

    QString getSensorId() const;
    void setSensorId(const QString &sensor_id);
    bool is_sensor_id_Set() const;
    bool is_sensor_id_Valid() const;

    QList<OAServiceBand> getBands() const;
    void setBands(const QList<OAServiceBand> &bands);
    bool is_bands_Set() const;
    bool is_bands_Valid() const;

    QList<QList<QString>> getBandOptions() const;
    void setBandOptions(const QList<QList<QString>> &band_options);
    bool is_band_options_Set() const;
    bool is_band_options_Valid() const;

    OAServiceHw_info getHwInfo() const;
    void setHwInfo(const OAServiceHw_info &hw_info);
    bool is_hw_info_Set() const;
    bool is_hw_info_Valid() const;

    OAServiceJammer_timeout_status getTimeoutStatus() const;
    void setTimeoutStatus(const OAServiceJammer_timeout_status &timeout_status);
    bool is_timeout_status_Set() const;
    bool is_timeout_status_Valid() const;

    QString getGroupId() const;
    void setGroupId(const QString &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    QString m_sw_version;
    bool m_sw_version_isSet;
    bool m_sw_version_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    OAServiceState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAServiceGeo_position m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    OAServiceGeo_position_mode m_position_mode;
    bool m_position_mode_isSet;
    bool m_position_mode_isValid;

    QList<OAServiceWorkzone_sector> m_workzone;
    bool m_workzone_isSet;
    bool m_workzone_isValid;

    QString m_sensor_id;
    bool m_sensor_id_isSet;
    bool m_sensor_id_isValid;

    QList<OAServiceBand> m_bands;
    bool m_bands_isSet;
    bool m_bands_isValid;

    QList<QList<QString>> m_band_options;
    bool m_band_options_isSet;
    bool m_band_options_isValid;

    OAServiceHw_info m_hw_info;
    bool m_hw_info_isSet;
    bool m_hw_info_isValid;

    OAServiceJammer_timeout_status m_timeout_status;
    bool m_timeout_status_isSet;
    bool m_timeout_status_isValid;

    QString m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;
};

} // namespace OAService

Q_DECLARE_METATYPE(OAService::OAServiceJammer_info)

#endif // OAServiceJammer_info_H
