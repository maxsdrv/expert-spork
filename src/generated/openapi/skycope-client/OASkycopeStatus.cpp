/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OASkycopeStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OASkycopeHelpers.h"

namespace OASkycope {

OASkycopeStatus::OASkycopeStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OASkycopeStatus::OASkycopeStatus() {
    this->initializeModel();
}

OASkycopeStatus::~OASkycopeStatus() {}

void OASkycopeStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOASkycopeStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OASkycopeStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DETECTING", Qt::CaseInsensitive) == 0) {
        m_value = eOASkycopeStatus::DETECTING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEFENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOASkycopeStatus::DEFENDING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OASkycopeStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OASkycopeStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOASkycopeStatus::DETECTING:
            val = "DETECTING";
            break;
        case eOASkycopeStatus::DEFENDING:
            val = "DEFENDING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OASkycopeStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OASkycopeStatus::eOASkycopeStatus OASkycopeStatus::getValue() const {
    return m_value;
}

void OASkycopeStatus::setValue(const OASkycopeStatus::eOASkycopeStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OASkycopeStatus::isSet() const {
    
    return m_value_isSet;
}

bool OASkycopeStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OASkycope
