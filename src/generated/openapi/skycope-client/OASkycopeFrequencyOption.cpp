/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OASkycopeFrequencyOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OASkycopeHelpers.h"

namespace OASkycope {

OASkycopeFrequencyOption::OASkycopeFrequencyOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OASkycopeFrequencyOption::OASkycopeFrequencyOption() {
    this->initializeModel();
}

OASkycopeFrequencyOption::~OASkycopeFrequencyOption() {}

void OASkycopeFrequencyOption::initializeModel() {

    m_freq_isSet = false;
    m_freq_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OASkycopeFrequencyOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OASkycopeFrequencyOption::fromJsonObject(QJsonObject json) {

    m_freq_isValid = ::OASkycope::fromJsonValue(m_freq, json[QString("freq")]);
    m_freq_isSet = !json[QString("freq")].isNull() && m_freq_isValid;

    m_name_isValid = ::OASkycope::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OASkycopeFrequencyOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OASkycopeFrequencyOption::asJsonObject() const {
    QJsonObject obj;
    if (m_freq.size() > 0) {
        obj.insert(QString("freq"), ::OASkycope::toJsonValue(m_freq));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OASkycope::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OASkycopeFrequencyOption::getFreq() const {
    return m_freq;
}
void OASkycopeFrequencyOption::setFreq(const QList<QString> &freq) {
    m_freq = freq;
    m_freq_isSet = true;
}

bool OASkycopeFrequencyOption::is_freq_Set() const{
    return m_freq_isSet;
}

bool OASkycopeFrequencyOption::is_freq_Valid() const{
    return m_freq_isValid;
}

QString OASkycopeFrequencyOption::getName() const {
    return m_name;
}
void OASkycopeFrequencyOption::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OASkycopeFrequencyOption::is_name_Set() const{
    return m_name_isSet;
}

bool OASkycopeFrequencyOption::is_name_Valid() const{
    return m_name_isValid;
}

bool OASkycopeFrequencyOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_freq.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OASkycopeFrequencyOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OASkycope
