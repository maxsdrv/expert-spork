/**
 * 
 * Description text
 *
 * The version of the OpenAPI document: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OASkycopeLAN2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OASkycopeHelpers.h"

namespace OASkycope {

OASkycopeLAN2::OASkycopeLAN2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OASkycopeLAN2::OASkycopeLAN2() {
    this->initializeModel();
}

OASkycopeLAN2::~OASkycopeLAN2() {}

void OASkycopeLAN2::initializeModel() {

    m_rx_isSet = false;
    m_rx_isValid = false;

    m_tx_isSet = false;
    m_tx_isValid = false;
}

void OASkycopeLAN2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OASkycopeLAN2::fromJsonObject(QJsonObject json) {

    m_rx_isValid = ::OASkycope::fromJsonValue(m_rx, json[QString("rx")]);
    m_rx_isSet = !json[QString("rx")].isNull() && m_rx_isValid;

    m_tx_isValid = ::OASkycope::fromJsonValue(m_tx, json[QString("tx")]);
    m_tx_isSet = !json[QString("tx")].isNull() && m_tx_isValid;
}

QString OASkycopeLAN2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OASkycopeLAN2::asJsonObject() const {
    QJsonObject obj;
    if (m_rx_isSet) {
        obj.insert(QString("rx"), ::OASkycope::toJsonValue(m_rx));
    }
    if (m_tx_isSet) {
        obj.insert(QString("tx"), ::OASkycope::toJsonValue(m_tx));
    }
    return obj;
}

double OASkycopeLAN2::getRx() const {
    return m_rx;
}
void OASkycopeLAN2::setRx(const double &rx) {
    m_rx = rx;
    m_rx_isSet = true;
}

bool OASkycopeLAN2::is_rx_Set() const{
    return m_rx_isSet;
}

bool OASkycopeLAN2::is_rx_Valid() const{
    return m_rx_isValid;
}

double OASkycopeLAN2::getTx() const {
    return m_tx;
}
void OASkycopeLAN2::setTx(const double &tx) {
    m_tx = tx;
    m_tx_isSet = true;
}

bool OASkycopeLAN2::is_tx_Set() const{
    return m_tx_isSet;
}

bool OASkycopeLAN2::is_tx_Valid() const{
    return m_tx_isValid;
}

bool OASkycopeLAN2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tx_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OASkycopeLAN2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OASkycope
