openapi: 3.1.0
info:
  title: Bulat API
  version: 0.1.0
  description: |
    API specification for the Bulat system.
    
    **IMPORTANT**: This API always returns HTTP 200 status code, even for errors.
    Error responses are indicated by the response content, not HTTP status codes.
    
    Error codes:
    - noacc/noaccess: No access to the requested resource
    - dberror: Error while executing database queries  
    - noname/noid/no_acc_c: Incorrect data in the request
servers:
  - url: https://online.3mx.ru
    description: Bulat API server

paths:
  /newloginfunc.php:
    post:
      summary: Login with token
      operationId: loginWithToken
      description: Authenticate user using API token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                req_json:
                  type: string
                  description: JSON-encoded request parameters
              required:
                - req_json
      responses:
        '200':
          description: Login response (always 200, check response content for success/error)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LoginResponse'
                  - $ref: '#/components/schemas/ErrorResponse'

  /pegass_monitor.php:
    post:
      summary: Detector Monitor Actions
      operationId: detectorMonitorActions
      description: |
        Main endpoint for detector operations
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                req_json:
                  type: string
              required:
                - req_json
      responses:
        '200':
          description: Detector Monitor Response (always 200, check response content for success/error)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/EventResponse'
                  - $ref: '#/components/schemas/ObjectsResponse'
                  - $ref: '#/components/schemas/EditObjectResponse'
                  - $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorCode:
      type: string
      enum: ["noacc", "noaccess", "dberror", "noname", "noid", "no_acc_c"]
      description: |
        Error codes returned by the Bulat system:
        - noacc: No access to the requested resource
        - noaccess: No access to the requested resource  
        - dberror: Error while executing database queries
        - noname: Invalid or missing name in the request
        - noid: Invalid or missing ID in the request
        - no_acc_c: Incorrect data in the query

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code from the system
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
          description: Human-readable error message
      required:
        - error
        - message
    
    LoginResponse:
      type: array
      items:
        oneOf:
          - type: string
            enum: ["good", "error"]
          - type: integer
            enum: [0, 1, 2]
          - type: string
          - type: object
            additionalProperties:
              type: string
      minItems: 4
      maxItems: 4

    ObjectsRequest:
      type: object
      properties:
        action:
          type: string
          enum: ["get_list_car", "p_edit_ts"]
        lc_id:
          type: integer
        lc_title:
          type: string
        lc_stationary:
          type: integer
        lc_stationary_lat:
          type: string
        lc_stationary_lon:
          type: string
      required:
        - action

    ObjectsResponse:
      type: object
      properties:
        status:
          type: integer
          description: Request status (1 = success, 0 = error)
        error:
          type: string
          description: Error code if status is 0
          $ref: '#/components/schemas/ErrorResponse'
        message:
          type: string
          description: Error message if status is 0
        car:
          type: array
          items:
            $ref: '#/components/schemas/ListObject'
          description: List of objects (only present on success)
      required:
        - status

    GroupObject:
      type: array
      items:
        oneOf:
          - type: string
          - type: integer
      minItems: 2
      maxItems: 2

    CountObject:
      type: object
      properties:
        car:
          type: integer
        on:
          type: integer
        off:
          type: integer
        park:
          type: integer
        run:
          type: integer
        g:
          type: integer
        o:
          type: integer
        r:
          type: integer
        b:
          type: integer

    ListObject:
      type: object
      properties:
        lc_id:
          type: integer
        lc_title:
          type: string
        lc_active:
          type: integer
        loc_course:
          type: integer
        loc_ctrl:
          type: integer
        loc_lat:
          type: number
          format: double
        loc_lon:
          type: number
          format: double
        loc_online_flag:
          type: integer
        loc_dt_sec_delta:
          type: integer
        loc_dt:
          type: integer
          format: int64
        loc_sdt:
          type: integer
          format: int64
        loc_address:
          type: string
        group:
          type: integer
        title:
          type: string
        devices_data:
          type: array
          items:
            $ref: '#/components/schemas/DeviceDataObject'
      required:
        - lc_id
        - lc_title
        - lc_active
        - loc_online_flag

    DriversObject:
      type: object
      properties:
        count:
          type: integer
        ld_id:
          type: integer
        ld_name:
          type: string
        ld_phone:
          type: string
        ld_tachograph_key:
          type: string
        ld_ava_dt:
          type: integer
        ld_hasava:
          type: integer

    DeviceDataObject:
      type: object
      properties:
        id:
          type: integer
        imei:
          type: string

    DevicesObject:
      type: string

    EditObjectResponse:
      type: integer

    EventResponse:
      type: object
      properties:
        status:
          type: integer
          enum: [0, 1]
          description: Request status (1 = success, 0 = error)
        error:
          type: string
          description: Error code if status is 0
          $ref: '#/components/schemas/ErrorResponse'
        message:
          type: string
          description: Error message if status is 0
        uid:
          type: integer
        oid:
          type: integer
        now:
          type: integer
          format: int64
        sys_msg:
          type: string
        event:
          $ref: '#/components/schemas/EventObject'
      required:
        - status
        - uid
        - oid
        - now
        - sys_msg
        - event

    EventObject:
      type: object
      properties:
        de_id:
          type: integer
          minimum: 0
        list:
          type: array
          items:
            $ref: '#/components/schemas/EventListItem'
      required:
        - de_id
        - list

    EventListItem:
      type: object
      properties:
        car_name:
          type: string
        car_id:
          type: integer
        devices:
          type: array
          items:
            type: string
        dt:
          type: integer
          format: int64
        lbl:
          type: integer
        lbl_ru:
          type: string
        id:
          type: integer
        type:
          type: integer
          enum: [0, 1]
        lat:
          type: number
          format: double
        lon:
          type: number
          format: double
        radius:
          type: integer
        icon:
          type: string
        title:
          type: string
        absent:
          oneOf:
            - type: string
            - type: integer
        val:
          type: string
      required:
        - id
        - type
