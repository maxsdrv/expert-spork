/*


Description text

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skycope

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DroneWifiDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DroneWifiDevice{}

// DroneWifiDevice struct for DroneWifiDevice
type DroneWifiDevice struct {
	Actions *Actions `json:"actions,omitempty"`
	BwKhz *int32 `json:"bw_khz,omitempty"`
	ColorTrajectory *string `json:"color_trajectory,omitempty"`
	DetectCounter *int32 `json:"detect_counter,omitempty"`
	DetectionEngine *string `json:"detection_engine,omitempty"`
	DfMarkerGps []Gps `json:"df_marker_gps,omitempty"`
	DroneHeight *int32 `json:"drone_height,omitempty"`
	FcKhzAndCount *FcKhzAndCount `json:"fc_khz_and_count,omitempty"`
	FcKhzAndCountRecent [][]int32 `json:"fc_khz_and_count_recent"`
	Finder *string `json:"finder,omitempty"`
	Frequency *string `json:"frequency,omitempty"`
	FrequencyHop *bool `json:"frequency_hop,omitempty"`
	Gps *Gps `json:"gps,omitempty"`
	GpsSector map[string]interface{} `json:"gps_sector,omitempty"`
	GpsTrajectory []interface{} `json:"gps_trajectory,omitempty"`
	GuiFirstDetectedAt *string `json:"gui_first_detected_at,omitempty"`
	GuiId *string `json:"gui_id,omitempty"`
	HomeGps *string `json:"home_gps,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Id *string `json:"id,omitempty"`
	InDefendingQueue *bool `json:"in_defending_queue,omitempty"`
	IsDualWbj *bool `json:"is_dual_wbj,omitempty"`
	IsLdvalTesting *bool `json:"is_ldval_testing,omitempty"`
	IsRemoteId *bool `json:"is_remote_id,omitempty"`
	IsTripleWbj *bool `json:"is_triple_wbj,omitempty"`
	IsWifiTab *bool `json:"is_wifi_tab,omitempty"`
	LdResult map[string]DroneSensorLdResult `json:"ld_result,omitempty"`
	LfErrorRadius *string `json:"lf_error_radius,omitempty"`
	Model string `json:"model"`
	Modulation string `json:"modulation"`
	PairedRc *string `json:"paired_rc,omitempty"`
	PrevId *string `json:"prev_id,omitempty"`
	RemoteIdModelName *string `json:"remote_id_model_name,omitempty"`
	SeenTimes *int32 `json:"seen_times,omitempty"`
	SensorIds []string `json:"sensor_ids,omitempty"`
	Sensors []string `json:"sensors,omitempty"`
	SharedNames *SharedNames `json:"shared_names,omitempty"`
	Signals []int32 `json:"signals,omitempty"`
	SpoofStatus *SpoofStatus `json:"spoof_status,omitempty"`
	Status *string `json:"status,omitempty"`
	SwitchForWhitelist *bool `json:"switch_for_whitelist,omitempty"`
	Threat *Threat `json:"threat,omitempty"`
	Type *string `json:"type,omitempty"`
	WifiMacId *string `json:"wifi_mac_id,omitempty"`
	WifiSsid *string `json:"wifi_ssid,omitempty"`
	WlName *string `json:"wl_name,omitempty"`
}

type _DroneWifiDevice DroneWifiDevice

// NewDroneWifiDevice instantiates a new DroneWifiDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDroneWifiDevice(fcKhzAndCountRecent [][]int32, model string, modulation string) *DroneWifiDevice {
	this := DroneWifiDevice{}
	this.FcKhzAndCountRecent = fcKhzAndCountRecent
	this.Model = model
	this.Modulation = modulation
	return &this
}

// NewDroneWifiDeviceWithDefaults instantiates a new DroneWifiDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDroneWifiDeviceWithDefaults() *DroneWifiDevice {
	this := DroneWifiDevice{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetActions() Actions {
	if o == nil || IsNil(o.Actions) {
		var ret Actions
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetActionsOk() (*Actions, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given Actions and assigns it to the Actions field.
func (o *DroneWifiDevice) SetActions(v Actions) {
	o.Actions = &v
}

// GetBwKhz returns the BwKhz field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetBwKhz() int32 {
	if o == nil || IsNil(o.BwKhz) {
		var ret int32
		return ret
	}
	return *o.BwKhz
}

// GetBwKhzOk returns a tuple with the BwKhz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetBwKhzOk() (*int32, bool) {
	if o == nil || IsNil(o.BwKhz) {
		return nil, false
	}
	return o.BwKhz, true
}

// HasBwKhz returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasBwKhz() bool {
	if o != nil && !IsNil(o.BwKhz) {
		return true
	}

	return false
}

// SetBwKhz gets a reference to the given int32 and assigns it to the BwKhz field.
func (o *DroneWifiDevice) SetBwKhz(v int32) {
	o.BwKhz = &v
}

// GetColorTrajectory returns the ColorTrajectory field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetColorTrajectory() string {
	if o == nil || IsNil(o.ColorTrajectory) {
		var ret string
		return ret
	}
	return *o.ColorTrajectory
}

// GetColorTrajectoryOk returns a tuple with the ColorTrajectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetColorTrajectoryOk() (*string, bool) {
	if o == nil || IsNil(o.ColorTrajectory) {
		return nil, false
	}
	return o.ColorTrajectory, true
}

// HasColorTrajectory returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasColorTrajectory() bool {
	if o != nil && !IsNil(o.ColorTrajectory) {
		return true
	}

	return false
}

// SetColorTrajectory gets a reference to the given string and assigns it to the ColorTrajectory field.
func (o *DroneWifiDevice) SetColorTrajectory(v string) {
	o.ColorTrajectory = &v
}

// GetDetectCounter returns the DetectCounter field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetDetectCounter() int32 {
	if o == nil || IsNil(o.DetectCounter) {
		var ret int32
		return ret
	}
	return *o.DetectCounter
}

// GetDetectCounterOk returns a tuple with the DetectCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetDetectCounterOk() (*int32, bool) {
	if o == nil || IsNil(o.DetectCounter) {
		return nil, false
	}
	return o.DetectCounter, true
}

// HasDetectCounter returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasDetectCounter() bool {
	if o != nil && !IsNil(o.DetectCounter) {
		return true
	}

	return false
}

// SetDetectCounter gets a reference to the given int32 and assigns it to the DetectCounter field.
func (o *DroneWifiDevice) SetDetectCounter(v int32) {
	o.DetectCounter = &v
}

// GetDetectionEngine returns the DetectionEngine field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetDetectionEngine() string {
	if o == nil || IsNil(o.DetectionEngine) {
		var ret string
		return ret
	}
	return *o.DetectionEngine
}

// GetDetectionEngineOk returns a tuple with the DetectionEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetDetectionEngineOk() (*string, bool) {
	if o == nil || IsNil(o.DetectionEngine) {
		return nil, false
	}
	return o.DetectionEngine, true
}

// HasDetectionEngine returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasDetectionEngine() bool {
	if o != nil && !IsNil(o.DetectionEngine) {
		return true
	}

	return false
}

// SetDetectionEngine gets a reference to the given string and assigns it to the DetectionEngine field.
func (o *DroneWifiDevice) SetDetectionEngine(v string) {
	o.DetectionEngine = &v
}

// GetDfMarkerGps returns the DfMarkerGps field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetDfMarkerGps() []Gps {
	if o == nil || IsNil(o.DfMarkerGps) {
		var ret []Gps
		return ret
	}
	return o.DfMarkerGps
}

// GetDfMarkerGpsOk returns a tuple with the DfMarkerGps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetDfMarkerGpsOk() ([]Gps, bool) {
	if o == nil || IsNil(o.DfMarkerGps) {
		return nil, false
	}
	return o.DfMarkerGps, true
}

// HasDfMarkerGps returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasDfMarkerGps() bool {
	if o != nil && !IsNil(o.DfMarkerGps) {
		return true
	}

	return false
}

// SetDfMarkerGps gets a reference to the given []Gps and assigns it to the DfMarkerGps field.
func (o *DroneWifiDevice) SetDfMarkerGps(v []Gps) {
	o.DfMarkerGps = v
}

// GetDroneHeight returns the DroneHeight field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetDroneHeight() int32 {
	if o == nil || IsNil(o.DroneHeight) {
		var ret int32
		return ret
	}
	return *o.DroneHeight
}

// GetDroneHeightOk returns a tuple with the DroneHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetDroneHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.DroneHeight) {
		return nil, false
	}
	return o.DroneHeight, true
}

// HasDroneHeight returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasDroneHeight() bool {
	if o != nil && !IsNil(o.DroneHeight) {
		return true
	}

	return false
}

// SetDroneHeight gets a reference to the given int32 and assigns it to the DroneHeight field.
func (o *DroneWifiDevice) SetDroneHeight(v int32) {
	o.DroneHeight = &v
}

// GetFcKhzAndCount returns the FcKhzAndCount field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetFcKhzAndCount() FcKhzAndCount {
	if o == nil || IsNil(o.FcKhzAndCount) {
		var ret FcKhzAndCount
		return ret
	}
	return *o.FcKhzAndCount
}

// GetFcKhzAndCountOk returns a tuple with the FcKhzAndCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetFcKhzAndCountOk() (*FcKhzAndCount, bool) {
	if o == nil || IsNil(o.FcKhzAndCount) {
		return nil, false
	}
	return o.FcKhzAndCount, true
}

// HasFcKhzAndCount returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasFcKhzAndCount() bool {
	if o != nil && !IsNil(o.FcKhzAndCount) {
		return true
	}

	return false
}

// SetFcKhzAndCount gets a reference to the given FcKhzAndCount and assigns it to the FcKhzAndCount field.
func (o *DroneWifiDevice) SetFcKhzAndCount(v FcKhzAndCount) {
	o.FcKhzAndCount = &v
}

// GetFcKhzAndCountRecent returns the FcKhzAndCountRecent field value
func (o *DroneWifiDevice) GetFcKhzAndCountRecent() [][]int32 {
	if o == nil {
		var ret [][]int32
		return ret
	}

	return o.FcKhzAndCountRecent
}

// GetFcKhzAndCountRecentOk returns a tuple with the FcKhzAndCountRecent field value
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetFcKhzAndCountRecentOk() ([][]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FcKhzAndCountRecent, true
}

// SetFcKhzAndCountRecent sets field value
func (o *DroneWifiDevice) SetFcKhzAndCountRecent(v [][]int32) {
	o.FcKhzAndCountRecent = v
}

// GetFinder returns the Finder field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetFinder() string {
	if o == nil || IsNil(o.Finder) {
		var ret string
		return ret
	}
	return *o.Finder
}

// GetFinderOk returns a tuple with the Finder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetFinderOk() (*string, bool) {
	if o == nil || IsNil(o.Finder) {
		return nil, false
	}
	return o.Finder, true
}

// HasFinder returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasFinder() bool {
	if o != nil && !IsNil(o.Finder) {
		return true
	}

	return false
}

// SetFinder gets a reference to the given string and assigns it to the Finder field.
func (o *DroneWifiDevice) SetFinder(v string) {
	o.Finder = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetFrequency() string {
	if o == nil || IsNil(o.Frequency) {
		var ret string
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given string and assigns it to the Frequency field.
func (o *DroneWifiDevice) SetFrequency(v string) {
	o.Frequency = &v
}

// GetFrequencyHop returns the FrequencyHop field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetFrequencyHop() bool {
	if o == nil || IsNil(o.FrequencyHop) {
		var ret bool
		return ret
	}
	return *o.FrequencyHop
}

// GetFrequencyHopOk returns a tuple with the FrequencyHop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetFrequencyHopOk() (*bool, bool) {
	if o == nil || IsNil(o.FrequencyHop) {
		return nil, false
	}
	return o.FrequencyHop, true
}

// HasFrequencyHop returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasFrequencyHop() bool {
	if o != nil && !IsNil(o.FrequencyHop) {
		return true
	}

	return false
}

// SetFrequencyHop gets a reference to the given bool and assigns it to the FrequencyHop field.
func (o *DroneWifiDevice) SetFrequencyHop(v bool) {
	o.FrequencyHop = &v
}

// GetGps returns the Gps field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetGps() Gps {
	if o == nil || IsNil(o.Gps) {
		var ret Gps
		return ret
	}
	return *o.Gps
}

// GetGpsOk returns a tuple with the Gps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetGpsOk() (*Gps, bool) {
	if o == nil || IsNil(o.Gps) {
		return nil, false
	}
	return o.Gps, true
}

// HasGps returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasGps() bool {
	if o != nil && !IsNil(o.Gps) {
		return true
	}

	return false
}

// SetGps gets a reference to the given Gps and assigns it to the Gps field.
func (o *DroneWifiDevice) SetGps(v Gps) {
	o.Gps = &v
}

// GetGpsSector returns the GpsSector field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetGpsSector() map[string]interface{} {
	if o == nil || IsNil(o.GpsSector) {
		var ret map[string]interface{}
		return ret
	}
	return o.GpsSector
}

// GetGpsSectorOk returns a tuple with the GpsSector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetGpsSectorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GpsSector) {
		return map[string]interface{}{}, false
	}
	return o.GpsSector, true
}

// HasGpsSector returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasGpsSector() bool {
	if o != nil && !IsNil(o.GpsSector) {
		return true
	}

	return false
}

// SetGpsSector gets a reference to the given map[string]interface{} and assigns it to the GpsSector field.
func (o *DroneWifiDevice) SetGpsSector(v map[string]interface{}) {
	o.GpsSector = v
}

// GetGpsTrajectory returns the GpsTrajectory field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetGpsTrajectory() []interface{} {
	if o == nil || IsNil(o.GpsTrajectory) {
		var ret []interface{}
		return ret
	}
	return o.GpsTrajectory
}

// GetGpsTrajectoryOk returns a tuple with the GpsTrajectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetGpsTrajectoryOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.GpsTrajectory) {
		return nil, false
	}
	return o.GpsTrajectory, true
}

// HasGpsTrajectory returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasGpsTrajectory() bool {
	if o != nil && !IsNil(o.GpsTrajectory) {
		return true
	}

	return false
}

// SetGpsTrajectory gets a reference to the given []interface{} and assigns it to the GpsTrajectory field.
func (o *DroneWifiDevice) SetGpsTrajectory(v []interface{}) {
	o.GpsTrajectory = v
}

// GetGuiFirstDetectedAt returns the GuiFirstDetectedAt field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetGuiFirstDetectedAt() string {
	if o == nil || IsNil(o.GuiFirstDetectedAt) {
		var ret string
		return ret
	}
	return *o.GuiFirstDetectedAt
}

// GetGuiFirstDetectedAtOk returns a tuple with the GuiFirstDetectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetGuiFirstDetectedAtOk() (*string, bool) {
	if o == nil || IsNil(o.GuiFirstDetectedAt) {
		return nil, false
	}
	return o.GuiFirstDetectedAt, true
}

// HasGuiFirstDetectedAt returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasGuiFirstDetectedAt() bool {
	if o != nil && !IsNil(o.GuiFirstDetectedAt) {
		return true
	}

	return false
}

// SetGuiFirstDetectedAt gets a reference to the given string and assigns it to the GuiFirstDetectedAt field.
func (o *DroneWifiDevice) SetGuiFirstDetectedAt(v string) {
	o.GuiFirstDetectedAt = &v
}

// GetGuiId returns the GuiId field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetGuiId() string {
	if o == nil || IsNil(o.GuiId) {
		var ret string
		return ret
	}
	return *o.GuiId
}

// GetGuiIdOk returns a tuple with the GuiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetGuiIdOk() (*string, bool) {
	if o == nil || IsNil(o.GuiId) {
		return nil, false
	}
	return o.GuiId, true
}

// HasGuiId returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasGuiId() bool {
	if o != nil && !IsNil(o.GuiId) {
		return true
	}

	return false
}

// SetGuiId gets a reference to the given string and assigns it to the GuiId field.
func (o *DroneWifiDevice) SetGuiId(v string) {
	o.GuiId = &v
}

// GetHomeGps returns the HomeGps field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetHomeGps() string {
	if o == nil || IsNil(o.HomeGps) {
		var ret string
		return ret
	}
	return *o.HomeGps
}

// GetHomeGpsOk returns a tuple with the HomeGps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetHomeGpsOk() (*string, bool) {
	if o == nil || IsNil(o.HomeGps) {
		return nil, false
	}
	return o.HomeGps, true
}

// HasHomeGps returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasHomeGps() bool {
	if o != nil && !IsNil(o.HomeGps) {
		return true
	}

	return false
}

// SetHomeGps gets a reference to the given string and assigns it to the HomeGps field.
func (o *DroneWifiDevice) SetHomeGps(v string) {
	o.HomeGps = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *DroneWifiDevice) SetIcon(v string) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DroneWifiDevice) SetId(v string) {
	o.Id = &v
}

// GetInDefendingQueue returns the InDefendingQueue field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetInDefendingQueue() bool {
	if o == nil || IsNil(o.InDefendingQueue) {
		var ret bool
		return ret
	}
	return *o.InDefendingQueue
}

// GetInDefendingQueueOk returns a tuple with the InDefendingQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetInDefendingQueueOk() (*bool, bool) {
	if o == nil || IsNil(o.InDefendingQueue) {
		return nil, false
	}
	return o.InDefendingQueue, true
}

// HasInDefendingQueue returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasInDefendingQueue() bool {
	if o != nil && !IsNil(o.InDefendingQueue) {
		return true
	}

	return false
}

// SetInDefendingQueue gets a reference to the given bool and assigns it to the InDefendingQueue field.
func (o *DroneWifiDevice) SetInDefendingQueue(v bool) {
	o.InDefendingQueue = &v
}

// GetIsDualWbj returns the IsDualWbj field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetIsDualWbj() bool {
	if o == nil || IsNil(o.IsDualWbj) {
		var ret bool
		return ret
	}
	return *o.IsDualWbj
}

// GetIsDualWbjOk returns a tuple with the IsDualWbj field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIsDualWbjOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDualWbj) {
		return nil, false
	}
	return o.IsDualWbj, true
}

// HasIsDualWbj returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasIsDualWbj() bool {
	if o != nil && !IsNil(o.IsDualWbj) {
		return true
	}

	return false
}

// SetIsDualWbj gets a reference to the given bool and assigns it to the IsDualWbj field.
func (o *DroneWifiDevice) SetIsDualWbj(v bool) {
	o.IsDualWbj = &v
}

// GetIsLdvalTesting returns the IsLdvalTesting field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetIsLdvalTesting() bool {
	if o == nil || IsNil(o.IsLdvalTesting) {
		var ret bool
		return ret
	}
	return *o.IsLdvalTesting
}

// GetIsLdvalTestingOk returns a tuple with the IsLdvalTesting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIsLdvalTestingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLdvalTesting) {
		return nil, false
	}
	return o.IsLdvalTesting, true
}

// HasIsLdvalTesting returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasIsLdvalTesting() bool {
	if o != nil && !IsNil(o.IsLdvalTesting) {
		return true
	}

	return false
}

// SetIsLdvalTesting gets a reference to the given bool and assigns it to the IsLdvalTesting field.
func (o *DroneWifiDevice) SetIsLdvalTesting(v bool) {
	o.IsLdvalTesting = &v
}

// GetIsRemoteId returns the IsRemoteId field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetIsRemoteId() bool {
	if o == nil || IsNil(o.IsRemoteId) {
		var ret bool
		return ret
	}
	return *o.IsRemoteId
}

// GetIsRemoteIdOk returns a tuple with the IsRemoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIsRemoteIdOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemoteId) {
		return nil, false
	}
	return o.IsRemoteId, true
}

// HasIsRemoteId returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasIsRemoteId() bool {
	if o != nil && !IsNil(o.IsRemoteId) {
		return true
	}

	return false
}

// SetIsRemoteId gets a reference to the given bool and assigns it to the IsRemoteId field.
func (o *DroneWifiDevice) SetIsRemoteId(v bool) {
	o.IsRemoteId = &v
}

// GetIsTripleWbj returns the IsTripleWbj field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetIsTripleWbj() bool {
	if o == nil || IsNil(o.IsTripleWbj) {
		var ret bool
		return ret
	}
	return *o.IsTripleWbj
}

// GetIsTripleWbjOk returns a tuple with the IsTripleWbj field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIsTripleWbjOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTripleWbj) {
		return nil, false
	}
	return o.IsTripleWbj, true
}

// HasIsTripleWbj returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasIsTripleWbj() bool {
	if o != nil && !IsNil(o.IsTripleWbj) {
		return true
	}

	return false
}

// SetIsTripleWbj gets a reference to the given bool and assigns it to the IsTripleWbj field.
func (o *DroneWifiDevice) SetIsTripleWbj(v bool) {
	o.IsTripleWbj = &v
}

// GetIsWifiTab returns the IsWifiTab field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetIsWifiTab() bool {
	if o == nil || IsNil(o.IsWifiTab) {
		var ret bool
		return ret
	}
	return *o.IsWifiTab
}

// GetIsWifiTabOk returns a tuple with the IsWifiTab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetIsWifiTabOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWifiTab) {
		return nil, false
	}
	return o.IsWifiTab, true
}

// HasIsWifiTab returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasIsWifiTab() bool {
	if o != nil && !IsNil(o.IsWifiTab) {
		return true
	}

	return false
}

// SetIsWifiTab gets a reference to the given bool and assigns it to the IsWifiTab field.
func (o *DroneWifiDevice) SetIsWifiTab(v bool) {
	o.IsWifiTab = &v
}

// GetLdResult returns the LdResult field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetLdResult() map[string]DroneSensorLdResult {
	if o == nil || IsNil(o.LdResult) {
		var ret map[string]DroneSensorLdResult
		return ret
	}
	return o.LdResult
}

// GetLdResultOk returns a tuple with the LdResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetLdResultOk() (map[string]DroneSensorLdResult, bool) {
	if o == nil || IsNil(o.LdResult) {
		return map[string]DroneSensorLdResult{}, false
	}
	return o.LdResult, true
}

// HasLdResult returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasLdResult() bool {
	if o != nil && !IsNil(o.LdResult) {
		return true
	}

	return false
}

// SetLdResult gets a reference to the given map[string]DroneSensorLdResult and assigns it to the LdResult field.
func (o *DroneWifiDevice) SetLdResult(v map[string]DroneSensorLdResult) {
	o.LdResult = v
}

// GetLfErrorRadius returns the LfErrorRadius field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetLfErrorRadius() string {
	if o == nil || IsNil(o.LfErrorRadius) {
		var ret string
		return ret
	}
	return *o.LfErrorRadius
}

// GetLfErrorRadiusOk returns a tuple with the LfErrorRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetLfErrorRadiusOk() (*string, bool) {
	if o == nil || IsNil(o.LfErrorRadius) {
		return nil, false
	}
	return o.LfErrorRadius, true
}

// HasLfErrorRadius returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasLfErrorRadius() bool {
	if o != nil && !IsNil(o.LfErrorRadius) {
		return true
	}

	return false
}

// SetLfErrorRadius gets a reference to the given string and assigns it to the LfErrorRadius field.
func (o *DroneWifiDevice) SetLfErrorRadius(v string) {
	o.LfErrorRadius = &v
}

// GetModel returns the Model field value
func (o *DroneWifiDevice) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *DroneWifiDevice) SetModel(v string) {
	o.Model = v
}

// GetModulation returns the Modulation field value
func (o *DroneWifiDevice) GetModulation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modulation
}

// GetModulationOk returns a tuple with the Modulation field value
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetModulationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modulation, true
}

// SetModulation sets field value
func (o *DroneWifiDevice) SetModulation(v string) {
	o.Modulation = v
}

// GetPairedRc returns the PairedRc field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetPairedRc() string {
	if o == nil || IsNil(o.PairedRc) {
		var ret string
		return ret
	}
	return *o.PairedRc
}

// GetPairedRcOk returns a tuple with the PairedRc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetPairedRcOk() (*string, bool) {
	if o == nil || IsNil(o.PairedRc) {
		return nil, false
	}
	return o.PairedRc, true
}

// HasPairedRc returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasPairedRc() bool {
	if o != nil && !IsNil(o.PairedRc) {
		return true
	}

	return false
}

// SetPairedRc gets a reference to the given string and assigns it to the PairedRc field.
func (o *DroneWifiDevice) SetPairedRc(v string) {
	o.PairedRc = &v
}

// GetPrevId returns the PrevId field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetPrevId() string {
	if o == nil || IsNil(o.PrevId) {
		var ret string
		return ret
	}
	return *o.PrevId
}

// GetPrevIdOk returns a tuple with the PrevId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetPrevIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrevId) {
		return nil, false
	}
	return o.PrevId, true
}

// HasPrevId returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasPrevId() bool {
	if o != nil && !IsNil(o.PrevId) {
		return true
	}

	return false
}

// SetPrevId gets a reference to the given string and assigns it to the PrevId field.
func (o *DroneWifiDevice) SetPrevId(v string) {
	o.PrevId = &v
}

// GetRemoteIdModelName returns the RemoteIdModelName field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetRemoteIdModelName() string {
	if o == nil || IsNil(o.RemoteIdModelName) {
		var ret string
		return ret
	}
	return *o.RemoteIdModelName
}

// GetRemoteIdModelNameOk returns a tuple with the RemoteIdModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetRemoteIdModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIdModelName) {
		return nil, false
	}
	return o.RemoteIdModelName, true
}

// HasRemoteIdModelName returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasRemoteIdModelName() bool {
	if o != nil && !IsNil(o.RemoteIdModelName) {
		return true
	}

	return false
}

// SetRemoteIdModelName gets a reference to the given string and assigns it to the RemoteIdModelName field.
func (o *DroneWifiDevice) SetRemoteIdModelName(v string) {
	o.RemoteIdModelName = &v
}

// GetSeenTimes returns the SeenTimes field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSeenTimes() int32 {
	if o == nil || IsNil(o.SeenTimes) {
		var ret int32
		return ret
	}
	return *o.SeenTimes
}

// GetSeenTimesOk returns a tuple with the SeenTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSeenTimesOk() (*int32, bool) {
	if o == nil || IsNil(o.SeenTimes) {
		return nil, false
	}
	return o.SeenTimes, true
}

// HasSeenTimes returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSeenTimes() bool {
	if o != nil && !IsNil(o.SeenTimes) {
		return true
	}

	return false
}

// SetSeenTimes gets a reference to the given int32 and assigns it to the SeenTimes field.
func (o *DroneWifiDevice) SetSeenTimes(v int32) {
	o.SeenTimes = &v
}

// GetSensorIds returns the SensorIds field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSensorIds() []string {
	if o == nil || IsNil(o.SensorIds) {
		var ret []string
		return ret
	}
	return o.SensorIds
}

// GetSensorIdsOk returns a tuple with the SensorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSensorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SensorIds) {
		return nil, false
	}
	return o.SensorIds, true
}

// HasSensorIds returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSensorIds() bool {
	if o != nil && !IsNil(o.SensorIds) {
		return true
	}

	return false
}

// SetSensorIds gets a reference to the given []string and assigns it to the SensorIds field.
func (o *DroneWifiDevice) SetSensorIds(v []string) {
	o.SensorIds = v
}

// GetSensors returns the Sensors field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSensors() []string {
	if o == nil || IsNil(o.Sensors) {
		var ret []string
		return ret
	}
	return o.Sensors
}

// GetSensorsOk returns a tuple with the Sensors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSensorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Sensors) {
		return nil, false
	}
	return o.Sensors, true
}

// HasSensors returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSensors() bool {
	if o != nil && !IsNil(o.Sensors) {
		return true
	}

	return false
}

// SetSensors gets a reference to the given []string and assigns it to the Sensors field.
func (o *DroneWifiDevice) SetSensors(v []string) {
	o.Sensors = v
}

// GetSharedNames returns the SharedNames field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSharedNames() SharedNames {
	if o == nil || IsNil(o.SharedNames) {
		var ret SharedNames
		return ret
	}
	return *o.SharedNames
}

// GetSharedNamesOk returns a tuple with the SharedNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSharedNamesOk() (*SharedNames, bool) {
	if o == nil || IsNil(o.SharedNames) {
		return nil, false
	}
	return o.SharedNames, true
}

// HasSharedNames returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSharedNames() bool {
	if o != nil && !IsNil(o.SharedNames) {
		return true
	}

	return false
}

// SetSharedNames gets a reference to the given SharedNames and assigns it to the SharedNames field.
func (o *DroneWifiDevice) SetSharedNames(v SharedNames) {
	o.SharedNames = &v
}

// GetSignals returns the Signals field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSignals() []int32 {
	if o == nil || IsNil(o.Signals) {
		var ret []int32
		return ret
	}
	return o.Signals
}

// GetSignalsOk returns a tuple with the Signals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSignalsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Signals) {
		return nil, false
	}
	return o.Signals, true
}

// HasSignals returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSignals() bool {
	if o != nil && !IsNil(o.Signals) {
		return true
	}

	return false
}

// SetSignals gets a reference to the given []int32 and assigns it to the Signals field.
func (o *DroneWifiDevice) SetSignals(v []int32) {
	o.Signals = v
}

// GetSpoofStatus returns the SpoofStatus field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSpoofStatus() SpoofStatus {
	if o == nil || IsNil(o.SpoofStatus) {
		var ret SpoofStatus
		return ret
	}
	return *o.SpoofStatus
}

// GetSpoofStatusOk returns a tuple with the SpoofStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSpoofStatusOk() (*SpoofStatus, bool) {
	if o == nil || IsNil(o.SpoofStatus) {
		return nil, false
	}
	return o.SpoofStatus, true
}

// HasSpoofStatus returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSpoofStatus() bool {
	if o != nil && !IsNil(o.SpoofStatus) {
		return true
	}

	return false
}

// SetSpoofStatus gets a reference to the given SpoofStatus and assigns it to the SpoofStatus field.
func (o *DroneWifiDevice) SetSpoofStatus(v SpoofStatus) {
	o.SpoofStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DroneWifiDevice) SetStatus(v string) {
	o.Status = &v
}

// GetSwitchForWhitelist returns the SwitchForWhitelist field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetSwitchForWhitelist() bool {
	if o == nil || IsNil(o.SwitchForWhitelist) {
		var ret bool
		return ret
	}
	return *o.SwitchForWhitelist
}

// GetSwitchForWhitelistOk returns a tuple with the SwitchForWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetSwitchForWhitelistOk() (*bool, bool) {
	if o == nil || IsNil(o.SwitchForWhitelist) {
		return nil, false
	}
	return o.SwitchForWhitelist, true
}

// HasSwitchForWhitelist returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasSwitchForWhitelist() bool {
	if o != nil && !IsNil(o.SwitchForWhitelist) {
		return true
	}

	return false
}

// SetSwitchForWhitelist gets a reference to the given bool and assigns it to the SwitchForWhitelist field.
func (o *DroneWifiDevice) SetSwitchForWhitelist(v bool) {
	o.SwitchForWhitelist = &v
}

// GetThreat returns the Threat field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetThreat() Threat {
	if o == nil || IsNil(o.Threat) {
		var ret Threat
		return ret
	}
	return *o.Threat
}

// GetThreatOk returns a tuple with the Threat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetThreatOk() (*Threat, bool) {
	if o == nil || IsNil(o.Threat) {
		return nil, false
	}
	return o.Threat, true
}

// HasThreat returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasThreat() bool {
	if o != nil && !IsNil(o.Threat) {
		return true
	}

	return false
}

// SetThreat gets a reference to the given Threat and assigns it to the Threat field.
func (o *DroneWifiDevice) SetThreat(v Threat) {
	o.Threat = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DroneWifiDevice) SetType(v string) {
	o.Type = &v
}

// GetWifiMacId returns the WifiMacId field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetWifiMacId() string {
	if o == nil || IsNil(o.WifiMacId) {
		var ret string
		return ret
	}
	return *o.WifiMacId
}

// GetWifiMacIdOk returns a tuple with the WifiMacId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetWifiMacIdOk() (*string, bool) {
	if o == nil || IsNil(o.WifiMacId) {
		return nil, false
	}
	return o.WifiMacId, true
}

// HasWifiMacId returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasWifiMacId() bool {
	if o != nil && !IsNil(o.WifiMacId) {
		return true
	}

	return false
}

// SetWifiMacId gets a reference to the given string and assigns it to the WifiMacId field.
func (o *DroneWifiDevice) SetWifiMacId(v string) {
	o.WifiMacId = &v
}

// GetWifiSsid returns the WifiSsid field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetWifiSsid() string {
	if o == nil || IsNil(o.WifiSsid) {
		var ret string
		return ret
	}
	return *o.WifiSsid
}

// GetWifiSsidOk returns a tuple with the WifiSsid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetWifiSsidOk() (*string, bool) {
	if o == nil || IsNil(o.WifiSsid) {
		return nil, false
	}
	return o.WifiSsid, true
}

// HasWifiSsid returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasWifiSsid() bool {
	if o != nil && !IsNil(o.WifiSsid) {
		return true
	}

	return false
}

// SetWifiSsid gets a reference to the given string and assigns it to the WifiSsid field.
func (o *DroneWifiDevice) SetWifiSsid(v string) {
	o.WifiSsid = &v
}

// GetWlName returns the WlName field value if set, zero value otherwise.
func (o *DroneWifiDevice) GetWlName() string {
	if o == nil || IsNil(o.WlName) {
		var ret string
		return ret
	}
	return *o.WlName
}

// GetWlNameOk returns a tuple with the WlName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DroneWifiDevice) GetWlNameOk() (*string, bool) {
	if o == nil || IsNil(o.WlName) {
		return nil, false
	}
	return o.WlName, true
}

// HasWlName returns a boolean if a field has been set.
func (o *DroneWifiDevice) HasWlName() bool {
	if o != nil && !IsNil(o.WlName) {
		return true
	}

	return false
}

// SetWlName gets a reference to the given string and assigns it to the WlName field.
func (o *DroneWifiDevice) SetWlName(v string) {
	o.WlName = &v
}

func (o DroneWifiDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DroneWifiDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.BwKhz) {
		toSerialize["bw_khz"] = o.BwKhz
	}
	if !IsNil(o.ColorTrajectory) {
		toSerialize["color_trajectory"] = o.ColorTrajectory
	}
	if !IsNil(o.DetectCounter) {
		toSerialize["detect_counter"] = o.DetectCounter
	}
	if !IsNil(o.DetectionEngine) {
		toSerialize["detection_engine"] = o.DetectionEngine
	}
	if !IsNil(o.DfMarkerGps) {
		toSerialize["df_marker_gps"] = o.DfMarkerGps
	}
	if !IsNil(o.DroneHeight) {
		toSerialize["drone_height"] = o.DroneHeight
	}
	if !IsNil(o.FcKhzAndCount) {
		toSerialize["fc_khz_and_count"] = o.FcKhzAndCount
	}
	toSerialize["fc_khz_and_count_recent"] = o.FcKhzAndCountRecent
	if !IsNil(o.Finder) {
		toSerialize["finder"] = o.Finder
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.FrequencyHop) {
		toSerialize["frequency_hop"] = o.FrequencyHop
	}
	if !IsNil(o.Gps) {
		toSerialize["gps"] = o.Gps
	}
	if !IsNil(o.GpsSector) {
		toSerialize["gps_sector"] = o.GpsSector
	}
	if !IsNil(o.GpsTrajectory) {
		toSerialize["gps_trajectory"] = o.GpsTrajectory
	}
	if !IsNil(o.GuiFirstDetectedAt) {
		toSerialize["gui_first_detected_at"] = o.GuiFirstDetectedAt
	}
	if !IsNil(o.GuiId) {
		toSerialize["gui_id"] = o.GuiId
	}
	if !IsNil(o.HomeGps) {
		toSerialize["home_gps"] = o.HomeGps
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InDefendingQueue) {
		toSerialize["in_defending_queue"] = o.InDefendingQueue
	}
	if !IsNil(o.IsDualWbj) {
		toSerialize["is_dual_wbj"] = o.IsDualWbj
	}
	if !IsNil(o.IsLdvalTesting) {
		toSerialize["is_ldval_testing"] = o.IsLdvalTesting
	}
	if !IsNil(o.IsRemoteId) {
		toSerialize["is_remote_id"] = o.IsRemoteId
	}
	if !IsNil(o.IsTripleWbj) {
		toSerialize["is_triple_wbj"] = o.IsTripleWbj
	}
	if !IsNil(o.IsWifiTab) {
		toSerialize["is_wifi_tab"] = o.IsWifiTab
	}
	if !IsNil(o.LdResult) {
		toSerialize["ld_result"] = o.LdResult
	}
	if !IsNil(o.LfErrorRadius) {
		toSerialize["lf_error_radius"] = o.LfErrorRadius
	}
	toSerialize["model"] = o.Model
	toSerialize["modulation"] = o.Modulation
	if !IsNil(o.PairedRc) {
		toSerialize["paired_rc"] = o.PairedRc
	}
	if !IsNil(o.PrevId) {
		toSerialize["prev_id"] = o.PrevId
	}
	if !IsNil(o.RemoteIdModelName) {
		toSerialize["remote_id_model_name"] = o.RemoteIdModelName
	}
	if !IsNil(o.SeenTimes) {
		toSerialize["seen_times"] = o.SeenTimes
	}
	if !IsNil(o.SensorIds) {
		toSerialize["sensor_ids"] = o.SensorIds
	}
	if !IsNil(o.Sensors) {
		toSerialize["sensors"] = o.Sensors
	}
	if !IsNil(o.SharedNames) {
		toSerialize["shared_names"] = o.SharedNames
	}
	if !IsNil(o.Signals) {
		toSerialize["signals"] = o.Signals
	}
	if !IsNil(o.SpoofStatus) {
		toSerialize["spoof_status"] = o.SpoofStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SwitchForWhitelist) {
		toSerialize["switch_for_whitelist"] = o.SwitchForWhitelist
	}
	if !IsNil(o.Threat) {
		toSerialize["threat"] = o.Threat
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.WifiMacId) {
		toSerialize["wifi_mac_id"] = o.WifiMacId
	}
	if !IsNil(o.WifiSsid) {
		toSerialize["wifi_ssid"] = o.WifiSsid
	}
	if !IsNil(o.WlName) {
		toSerialize["wl_name"] = o.WlName
	}
	return toSerialize, nil
}

func (o *DroneWifiDevice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fc_khz_and_count_recent",
		"model",
		"modulation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDroneWifiDevice := _DroneWifiDevice{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDroneWifiDevice)

	if err != nil {
		return err
	}

	*o = DroneWifiDevice(varDroneWifiDevice)

	return err
}

type NullableDroneWifiDevice struct {
	value *DroneWifiDevice
	isSet bool
}

func (v NullableDroneWifiDevice) Get() *DroneWifiDevice {
	return v.value
}

func (v *NullableDroneWifiDevice) Set(val *DroneWifiDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableDroneWifiDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableDroneWifiDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDroneWifiDevice(val *DroneWifiDevice) *NullableDroneWifiDevice {
	return &NullableDroneWifiDevice{value: val, isSet: true}
}

func (v NullableDroneWifiDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDroneWifiDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


