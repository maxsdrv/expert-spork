/*


Description text

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skycope

import (
	"encoding/json"
)

// checks if the SpoofStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpoofStatus{}

// SpoofStatus struct for SpoofStatus
type SpoofStatus struct {
	CanCancelSpoof *bool `json:"can_cancel_spoof,omitempty"`
	DetectionDirection *int32 `json:"detection_direction,omitempty"`
	SpoofDirection *int32 `json:"spoof_direction,omitempty"`
	SpoofRange *int32 `json:"spoof_range,omitempty"`
	Spoofing *bool `json:"spoofing,omitempty"`
}

// NewSpoofStatus instantiates a new SpoofStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpoofStatus() *SpoofStatus {
	this := SpoofStatus{}
	return &this
}

// NewSpoofStatusWithDefaults instantiates a new SpoofStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpoofStatusWithDefaults() *SpoofStatus {
	this := SpoofStatus{}
	return &this
}

// GetCanCancelSpoof returns the CanCancelSpoof field value if set, zero value otherwise.
func (o *SpoofStatus) GetCanCancelSpoof() bool {
	if o == nil || IsNil(o.CanCancelSpoof) {
		var ret bool
		return ret
	}
	return *o.CanCancelSpoof
}

// GetCanCancelSpoofOk returns a tuple with the CanCancelSpoof field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpoofStatus) GetCanCancelSpoofOk() (*bool, bool) {
	if o == nil || IsNil(o.CanCancelSpoof) {
		return nil, false
	}
	return o.CanCancelSpoof, true
}

// HasCanCancelSpoof returns a boolean if a field has been set.
func (o *SpoofStatus) HasCanCancelSpoof() bool {
	if o != nil && !IsNil(o.CanCancelSpoof) {
		return true
	}

	return false
}

// SetCanCancelSpoof gets a reference to the given bool and assigns it to the CanCancelSpoof field.
func (o *SpoofStatus) SetCanCancelSpoof(v bool) {
	o.CanCancelSpoof = &v
}

// GetDetectionDirection returns the DetectionDirection field value if set, zero value otherwise.
func (o *SpoofStatus) GetDetectionDirection() int32 {
	if o == nil || IsNil(o.DetectionDirection) {
		var ret int32
		return ret
	}
	return *o.DetectionDirection
}

// GetDetectionDirectionOk returns a tuple with the DetectionDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpoofStatus) GetDetectionDirectionOk() (*int32, bool) {
	if o == nil || IsNil(o.DetectionDirection) {
		return nil, false
	}
	return o.DetectionDirection, true
}

// HasDetectionDirection returns a boolean if a field has been set.
func (o *SpoofStatus) HasDetectionDirection() bool {
	if o != nil && !IsNil(o.DetectionDirection) {
		return true
	}

	return false
}

// SetDetectionDirection gets a reference to the given int32 and assigns it to the DetectionDirection field.
func (o *SpoofStatus) SetDetectionDirection(v int32) {
	o.DetectionDirection = &v
}

// GetSpoofDirection returns the SpoofDirection field value if set, zero value otherwise.
func (o *SpoofStatus) GetSpoofDirection() int32 {
	if o == nil || IsNil(o.SpoofDirection) {
		var ret int32
		return ret
	}
	return *o.SpoofDirection
}

// GetSpoofDirectionOk returns a tuple with the SpoofDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpoofStatus) GetSpoofDirectionOk() (*int32, bool) {
	if o == nil || IsNil(o.SpoofDirection) {
		return nil, false
	}
	return o.SpoofDirection, true
}

// HasSpoofDirection returns a boolean if a field has been set.
func (o *SpoofStatus) HasSpoofDirection() bool {
	if o != nil && !IsNil(o.SpoofDirection) {
		return true
	}

	return false
}

// SetSpoofDirection gets a reference to the given int32 and assigns it to the SpoofDirection field.
func (o *SpoofStatus) SetSpoofDirection(v int32) {
	o.SpoofDirection = &v
}

// GetSpoofRange returns the SpoofRange field value if set, zero value otherwise.
func (o *SpoofStatus) GetSpoofRange() int32 {
	if o == nil || IsNil(o.SpoofRange) {
		var ret int32
		return ret
	}
	return *o.SpoofRange
}

// GetSpoofRangeOk returns a tuple with the SpoofRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpoofStatus) GetSpoofRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.SpoofRange) {
		return nil, false
	}
	return o.SpoofRange, true
}

// HasSpoofRange returns a boolean if a field has been set.
func (o *SpoofStatus) HasSpoofRange() bool {
	if o != nil && !IsNil(o.SpoofRange) {
		return true
	}

	return false
}

// SetSpoofRange gets a reference to the given int32 and assigns it to the SpoofRange field.
func (o *SpoofStatus) SetSpoofRange(v int32) {
	o.SpoofRange = &v
}

// GetSpoofing returns the Spoofing field value if set, zero value otherwise.
func (o *SpoofStatus) GetSpoofing() bool {
	if o == nil || IsNil(o.Spoofing) {
		var ret bool
		return ret
	}
	return *o.Spoofing
}

// GetSpoofingOk returns a tuple with the Spoofing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpoofStatus) GetSpoofingOk() (*bool, bool) {
	if o == nil || IsNil(o.Spoofing) {
		return nil, false
	}
	return o.Spoofing, true
}

// HasSpoofing returns a boolean if a field has been set.
func (o *SpoofStatus) HasSpoofing() bool {
	if o != nil && !IsNil(o.Spoofing) {
		return true
	}

	return false
}

// SetSpoofing gets a reference to the given bool and assigns it to the Spoofing field.
func (o *SpoofStatus) SetSpoofing(v bool) {
	o.Spoofing = &v
}

func (o SpoofStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpoofStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanCancelSpoof) {
		toSerialize["can_cancel_spoof"] = o.CanCancelSpoof
	}
	if !IsNil(o.DetectionDirection) {
		toSerialize["detection_direction"] = o.DetectionDirection
	}
	if !IsNil(o.SpoofDirection) {
		toSerialize["spoof_direction"] = o.SpoofDirection
	}
	if !IsNil(o.SpoofRange) {
		toSerialize["spoof_range"] = o.SpoofRange
	}
	if !IsNil(o.Spoofing) {
		toSerialize["spoofing"] = o.Spoofing
	}
	return toSerialize, nil
}

type NullableSpoofStatus struct {
	value *SpoofStatus
	isSet bool
}

func (v NullableSpoofStatus) Get() *SpoofStatus {
	return v.value
}

func (v *NullableSpoofStatus) Set(val *SpoofStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSpoofStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSpoofStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpoofStatus(val *SpoofStatus) *NullableSpoofStatus {
	return &NullableSpoofStatus{value: val, isSet: true}
}

func (v NullableSpoofStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpoofStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


