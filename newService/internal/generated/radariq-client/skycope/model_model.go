/*


Description text

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skycope

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Model type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Model{}

// Model struct for Model
type Model struct {
	CenterLocation *string `json:"center_location,omitempty"`
	DbMigrationError *bool `json:"db_migration_error,omitempty"`
	DefenseStatus *DefenseStatus `json:"defense_status,omitempty"`
	DevicesInfo map[string]Drone `json:"devices_info"`
	DroneListEnabled *bool `json:"drone_list_enabled,omitempty"`
	GpsLimit *int32 `json:"gps_limit,omitempty"`
	HasDanger *bool `json:"has_danger,omitempty"`
	HideDefenseFeatures *bool `json:"hide_defense_features,omitempty"`
	HideDetectionPage *bool `json:"hide_detection_page,omitempty"`
	HideSpectrumPage *bool `json:"hide_spectrum_page,omitempty"`
	IsAllExpired *bool `json:"is_all_expired,omitempty"`
	IsAnchorServer *bool `json:"is_anchor_server,omitempty"`
	IsLocalMode *bool `json:"is_local_mode,omitempty"`
	IsRemoteIdEnabled *bool `json:"is_remote_id_enabled,omitempty"`
	IsUnknownWifiEnabled *bool `json:"is_unknown_wifi_enabled,omitempty"`
	LfRadius *int32 `json:"lf_radius,omitempty"`
	NonAiIgnorable *bool `json:"non_ai_ignorable,omitempty"`
	NondfResult map[string]interface{} `json:"nondf_result,omitempty"`
	OfflineMapLoaded *bool `json:"offline_map_loaded,omitempty"`
	OnlineMapEnabled *bool `json:"online_map_enabled,omitempty"`
	SensorsInfo map[string]Sensor `json:"sensors_info"`
	SettingMode *bool `json:"setting_mode,omitempty"`
	ShowEnhancedFeatures *bool `json:"show_enhanced_features,omitempty"`
	TotalDevices *int32 `json:"total_devices,omitempty"`
	TotalRemoteIds *int32 `json:"total_remote_ids,omitempty"`
	TotalWifiDevices *int32 `json:"total_wifi_devices,omitempty"`
	UnknownWifiDevicesInfo map[string]DroneWifiDevice `json:"unknown_wifi_devices_info"`
	UpgradeStatus map[string]interface{} `json:"upgrade_status,omitempty"`
	UserLocations map[string]interface{} `json:"user_locations,omitempty"`
	Version *string `json:"version,omitempty"`
}

type _Model Model

// NewModel instantiates a new Model object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel(devicesInfo map[string]Drone, sensorsInfo map[string]Sensor, unknownWifiDevicesInfo map[string]DroneWifiDevice) *Model {
	this := Model{}
	this.DevicesInfo = devicesInfo
	this.SensorsInfo = sensorsInfo
	this.UnknownWifiDevicesInfo = unknownWifiDevicesInfo
	return &this
}

// NewModelWithDefaults instantiates a new Model object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelWithDefaults() *Model {
	this := Model{}
	return &this
}

// GetCenterLocation returns the CenterLocation field value if set, zero value otherwise.
func (o *Model) GetCenterLocation() string {
	if o == nil || IsNil(o.CenterLocation) {
		var ret string
		return ret
	}
	return *o.CenterLocation
}

// GetCenterLocationOk returns a tuple with the CenterLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetCenterLocationOk() (*string, bool) {
	if o == nil || IsNil(o.CenterLocation) {
		return nil, false
	}
	return o.CenterLocation, true
}

// HasCenterLocation returns a boolean if a field has been set.
func (o *Model) HasCenterLocation() bool {
	if o != nil && !IsNil(o.CenterLocation) {
		return true
	}

	return false
}

// SetCenterLocation gets a reference to the given string and assigns it to the CenterLocation field.
func (o *Model) SetCenterLocation(v string) {
	o.CenterLocation = &v
}

// GetDbMigrationError returns the DbMigrationError field value if set, zero value otherwise.
func (o *Model) GetDbMigrationError() bool {
	if o == nil || IsNil(o.DbMigrationError) {
		var ret bool
		return ret
	}
	return *o.DbMigrationError
}

// GetDbMigrationErrorOk returns a tuple with the DbMigrationError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetDbMigrationErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.DbMigrationError) {
		return nil, false
	}
	return o.DbMigrationError, true
}

// HasDbMigrationError returns a boolean if a field has been set.
func (o *Model) HasDbMigrationError() bool {
	if o != nil && !IsNil(o.DbMigrationError) {
		return true
	}

	return false
}

// SetDbMigrationError gets a reference to the given bool and assigns it to the DbMigrationError field.
func (o *Model) SetDbMigrationError(v bool) {
	o.DbMigrationError = &v
}

// GetDefenseStatus returns the DefenseStatus field value if set, zero value otherwise.
func (o *Model) GetDefenseStatus() DefenseStatus {
	if o == nil || IsNil(o.DefenseStatus) {
		var ret DefenseStatus
		return ret
	}
	return *o.DefenseStatus
}

// GetDefenseStatusOk returns a tuple with the DefenseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetDefenseStatusOk() (*DefenseStatus, bool) {
	if o == nil || IsNil(o.DefenseStatus) {
		return nil, false
	}
	return o.DefenseStatus, true
}

// HasDefenseStatus returns a boolean if a field has been set.
func (o *Model) HasDefenseStatus() bool {
	if o != nil && !IsNil(o.DefenseStatus) {
		return true
	}

	return false
}

// SetDefenseStatus gets a reference to the given DefenseStatus and assigns it to the DefenseStatus field.
func (o *Model) SetDefenseStatus(v DefenseStatus) {
	o.DefenseStatus = &v
}

// GetDevicesInfo returns the DevicesInfo field value
func (o *Model) GetDevicesInfo() map[string]Drone {
	if o == nil {
		var ret map[string]Drone
		return ret
	}

	return o.DevicesInfo
}

// GetDevicesInfoOk returns a tuple with the DevicesInfo field value
// and a boolean to check if the value has been set.
func (o *Model) GetDevicesInfoOk() (map[string]Drone, bool) {
	if o == nil {
		return map[string]Drone{}, false
	}
	return o.DevicesInfo, true
}

// SetDevicesInfo sets field value
func (o *Model) SetDevicesInfo(v map[string]Drone) {
	o.DevicesInfo = v
}

// GetDroneListEnabled returns the DroneListEnabled field value if set, zero value otherwise.
func (o *Model) GetDroneListEnabled() bool {
	if o == nil || IsNil(o.DroneListEnabled) {
		var ret bool
		return ret
	}
	return *o.DroneListEnabled
}

// GetDroneListEnabledOk returns a tuple with the DroneListEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetDroneListEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DroneListEnabled) {
		return nil, false
	}
	return o.DroneListEnabled, true
}

// HasDroneListEnabled returns a boolean if a field has been set.
func (o *Model) HasDroneListEnabled() bool {
	if o != nil && !IsNil(o.DroneListEnabled) {
		return true
	}

	return false
}

// SetDroneListEnabled gets a reference to the given bool and assigns it to the DroneListEnabled field.
func (o *Model) SetDroneListEnabled(v bool) {
	o.DroneListEnabled = &v
}

// GetGpsLimit returns the GpsLimit field value if set, zero value otherwise.
func (o *Model) GetGpsLimit() int32 {
	if o == nil || IsNil(o.GpsLimit) {
		var ret int32
		return ret
	}
	return *o.GpsLimit
}

// GetGpsLimitOk returns a tuple with the GpsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetGpsLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.GpsLimit) {
		return nil, false
	}
	return o.GpsLimit, true
}

// HasGpsLimit returns a boolean if a field has been set.
func (o *Model) HasGpsLimit() bool {
	if o != nil && !IsNil(o.GpsLimit) {
		return true
	}

	return false
}

// SetGpsLimit gets a reference to the given int32 and assigns it to the GpsLimit field.
func (o *Model) SetGpsLimit(v int32) {
	o.GpsLimit = &v
}

// GetHasDanger returns the HasDanger field value if set, zero value otherwise.
func (o *Model) GetHasDanger() bool {
	if o == nil || IsNil(o.HasDanger) {
		var ret bool
		return ret
	}
	return *o.HasDanger
}

// GetHasDangerOk returns a tuple with the HasDanger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetHasDangerOk() (*bool, bool) {
	if o == nil || IsNil(o.HasDanger) {
		return nil, false
	}
	return o.HasDanger, true
}

// HasHasDanger returns a boolean if a field has been set.
func (o *Model) HasHasDanger() bool {
	if o != nil && !IsNil(o.HasDanger) {
		return true
	}

	return false
}

// SetHasDanger gets a reference to the given bool and assigns it to the HasDanger field.
func (o *Model) SetHasDanger(v bool) {
	o.HasDanger = &v
}

// GetHideDefenseFeatures returns the HideDefenseFeatures field value if set, zero value otherwise.
func (o *Model) GetHideDefenseFeatures() bool {
	if o == nil || IsNil(o.HideDefenseFeatures) {
		var ret bool
		return ret
	}
	return *o.HideDefenseFeatures
}

// GetHideDefenseFeaturesOk returns a tuple with the HideDefenseFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetHideDefenseFeaturesOk() (*bool, bool) {
	if o == nil || IsNil(o.HideDefenseFeatures) {
		return nil, false
	}
	return o.HideDefenseFeatures, true
}

// HasHideDefenseFeatures returns a boolean if a field has been set.
func (o *Model) HasHideDefenseFeatures() bool {
	if o != nil && !IsNil(o.HideDefenseFeatures) {
		return true
	}

	return false
}

// SetHideDefenseFeatures gets a reference to the given bool and assigns it to the HideDefenseFeatures field.
func (o *Model) SetHideDefenseFeatures(v bool) {
	o.HideDefenseFeatures = &v
}

// GetHideDetectionPage returns the HideDetectionPage field value if set, zero value otherwise.
func (o *Model) GetHideDetectionPage() bool {
	if o == nil || IsNil(o.HideDetectionPage) {
		var ret bool
		return ret
	}
	return *o.HideDetectionPage
}

// GetHideDetectionPageOk returns a tuple with the HideDetectionPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetHideDetectionPageOk() (*bool, bool) {
	if o == nil || IsNil(o.HideDetectionPage) {
		return nil, false
	}
	return o.HideDetectionPage, true
}

// HasHideDetectionPage returns a boolean if a field has been set.
func (o *Model) HasHideDetectionPage() bool {
	if o != nil && !IsNil(o.HideDetectionPage) {
		return true
	}

	return false
}

// SetHideDetectionPage gets a reference to the given bool and assigns it to the HideDetectionPage field.
func (o *Model) SetHideDetectionPage(v bool) {
	o.HideDetectionPage = &v
}

// GetHideSpectrumPage returns the HideSpectrumPage field value if set, zero value otherwise.
func (o *Model) GetHideSpectrumPage() bool {
	if o == nil || IsNil(o.HideSpectrumPage) {
		var ret bool
		return ret
	}
	return *o.HideSpectrumPage
}

// GetHideSpectrumPageOk returns a tuple with the HideSpectrumPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetHideSpectrumPageOk() (*bool, bool) {
	if o == nil || IsNil(o.HideSpectrumPage) {
		return nil, false
	}
	return o.HideSpectrumPage, true
}

// HasHideSpectrumPage returns a boolean if a field has been set.
func (o *Model) HasHideSpectrumPage() bool {
	if o != nil && !IsNil(o.HideSpectrumPage) {
		return true
	}

	return false
}

// SetHideSpectrumPage gets a reference to the given bool and assigns it to the HideSpectrumPage field.
func (o *Model) SetHideSpectrumPage(v bool) {
	o.HideSpectrumPage = &v
}

// GetIsAllExpired returns the IsAllExpired field value if set, zero value otherwise.
func (o *Model) GetIsAllExpired() bool {
	if o == nil || IsNil(o.IsAllExpired) {
		var ret bool
		return ret
	}
	return *o.IsAllExpired
}

// GetIsAllExpiredOk returns a tuple with the IsAllExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetIsAllExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllExpired) {
		return nil, false
	}
	return o.IsAllExpired, true
}

// HasIsAllExpired returns a boolean if a field has been set.
func (o *Model) HasIsAllExpired() bool {
	if o != nil && !IsNil(o.IsAllExpired) {
		return true
	}

	return false
}

// SetIsAllExpired gets a reference to the given bool and assigns it to the IsAllExpired field.
func (o *Model) SetIsAllExpired(v bool) {
	o.IsAllExpired = &v
}

// GetIsAnchorServer returns the IsAnchorServer field value if set, zero value otherwise.
func (o *Model) GetIsAnchorServer() bool {
	if o == nil || IsNil(o.IsAnchorServer) {
		var ret bool
		return ret
	}
	return *o.IsAnchorServer
}

// GetIsAnchorServerOk returns a tuple with the IsAnchorServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetIsAnchorServerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAnchorServer) {
		return nil, false
	}
	return o.IsAnchorServer, true
}

// HasIsAnchorServer returns a boolean if a field has been set.
func (o *Model) HasIsAnchorServer() bool {
	if o != nil && !IsNil(o.IsAnchorServer) {
		return true
	}

	return false
}

// SetIsAnchorServer gets a reference to the given bool and assigns it to the IsAnchorServer field.
func (o *Model) SetIsAnchorServer(v bool) {
	o.IsAnchorServer = &v
}

// GetIsLocalMode returns the IsLocalMode field value if set, zero value otherwise.
func (o *Model) GetIsLocalMode() bool {
	if o == nil || IsNil(o.IsLocalMode) {
		var ret bool
		return ret
	}
	return *o.IsLocalMode
}

// GetIsLocalModeOk returns a tuple with the IsLocalMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetIsLocalModeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocalMode) {
		return nil, false
	}
	return o.IsLocalMode, true
}

// HasIsLocalMode returns a boolean if a field has been set.
func (o *Model) HasIsLocalMode() bool {
	if o != nil && !IsNil(o.IsLocalMode) {
		return true
	}

	return false
}

// SetIsLocalMode gets a reference to the given bool and assigns it to the IsLocalMode field.
func (o *Model) SetIsLocalMode(v bool) {
	o.IsLocalMode = &v
}

// GetIsRemoteIdEnabled returns the IsRemoteIdEnabled field value if set, zero value otherwise.
func (o *Model) GetIsRemoteIdEnabled() bool {
	if o == nil || IsNil(o.IsRemoteIdEnabled) {
		var ret bool
		return ret
	}
	return *o.IsRemoteIdEnabled
}

// GetIsRemoteIdEnabledOk returns a tuple with the IsRemoteIdEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetIsRemoteIdEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemoteIdEnabled) {
		return nil, false
	}
	return o.IsRemoteIdEnabled, true
}

// HasIsRemoteIdEnabled returns a boolean if a field has been set.
func (o *Model) HasIsRemoteIdEnabled() bool {
	if o != nil && !IsNil(o.IsRemoteIdEnabled) {
		return true
	}

	return false
}

// SetIsRemoteIdEnabled gets a reference to the given bool and assigns it to the IsRemoteIdEnabled field.
func (o *Model) SetIsRemoteIdEnabled(v bool) {
	o.IsRemoteIdEnabled = &v
}

// GetIsUnknownWifiEnabled returns the IsUnknownWifiEnabled field value if set, zero value otherwise.
func (o *Model) GetIsUnknownWifiEnabled() bool {
	if o == nil || IsNil(o.IsUnknownWifiEnabled) {
		var ret bool
		return ret
	}
	return *o.IsUnknownWifiEnabled
}

// GetIsUnknownWifiEnabledOk returns a tuple with the IsUnknownWifiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetIsUnknownWifiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUnknownWifiEnabled) {
		return nil, false
	}
	return o.IsUnknownWifiEnabled, true
}

// HasIsUnknownWifiEnabled returns a boolean if a field has been set.
func (o *Model) HasIsUnknownWifiEnabled() bool {
	if o != nil && !IsNil(o.IsUnknownWifiEnabled) {
		return true
	}

	return false
}

// SetIsUnknownWifiEnabled gets a reference to the given bool and assigns it to the IsUnknownWifiEnabled field.
func (o *Model) SetIsUnknownWifiEnabled(v bool) {
	o.IsUnknownWifiEnabled = &v
}

// GetLfRadius returns the LfRadius field value if set, zero value otherwise.
func (o *Model) GetLfRadius() int32 {
	if o == nil || IsNil(o.LfRadius) {
		var ret int32
		return ret
	}
	return *o.LfRadius
}

// GetLfRadiusOk returns a tuple with the LfRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetLfRadiusOk() (*int32, bool) {
	if o == nil || IsNil(o.LfRadius) {
		return nil, false
	}
	return o.LfRadius, true
}

// HasLfRadius returns a boolean if a field has been set.
func (o *Model) HasLfRadius() bool {
	if o != nil && !IsNil(o.LfRadius) {
		return true
	}

	return false
}

// SetLfRadius gets a reference to the given int32 and assigns it to the LfRadius field.
func (o *Model) SetLfRadius(v int32) {
	o.LfRadius = &v
}

// GetNonAiIgnorable returns the NonAiIgnorable field value if set, zero value otherwise.
func (o *Model) GetNonAiIgnorable() bool {
	if o == nil || IsNil(o.NonAiIgnorable) {
		var ret bool
		return ret
	}
	return *o.NonAiIgnorable
}

// GetNonAiIgnorableOk returns a tuple with the NonAiIgnorable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetNonAiIgnorableOk() (*bool, bool) {
	if o == nil || IsNil(o.NonAiIgnorable) {
		return nil, false
	}
	return o.NonAiIgnorable, true
}

// HasNonAiIgnorable returns a boolean if a field has been set.
func (o *Model) HasNonAiIgnorable() bool {
	if o != nil && !IsNil(o.NonAiIgnorable) {
		return true
	}

	return false
}

// SetNonAiIgnorable gets a reference to the given bool and assigns it to the NonAiIgnorable field.
func (o *Model) SetNonAiIgnorable(v bool) {
	o.NonAiIgnorable = &v
}

// GetNondfResult returns the NondfResult field value if set, zero value otherwise.
func (o *Model) GetNondfResult() map[string]interface{} {
	if o == nil || IsNil(o.NondfResult) {
		var ret map[string]interface{}
		return ret
	}
	return o.NondfResult
}

// GetNondfResultOk returns a tuple with the NondfResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetNondfResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NondfResult) {
		return map[string]interface{}{}, false
	}
	return o.NondfResult, true
}

// HasNondfResult returns a boolean if a field has been set.
func (o *Model) HasNondfResult() bool {
	if o != nil && !IsNil(o.NondfResult) {
		return true
	}

	return false
}

// SetNondfResult gets a reference to the given map[string]interface{} and assigns it to the NondfResult field.
func (o *Model) SetNondfResult(v map[string]interface{}) {
	o.NondfResult = v
}

// GetOfflineMapLoaded returns the OfflineMapLoaded field value if set, zero value otherwise.
func (o *Model) GetOfflineMapLoaded() bool {
	if o == nil || IsNil(o.OfflineMapLoaded) {
		var ret bool
		return ret
	}
	return *o.OfflineMapLoaded
}

// GetOfflineMapLoadedOk returns a tuple with the OfflineMapLoaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetOfflineMapLoadedOk() (*bool, bool) {
	if o == nil || IsNil(o.OfflineMapLoaded) {
		return nil, false
	}
	return o.OfflineMapLoaded, true
}

// HasOfflineMapLoaded returns a boolean if a field has been set.
func (o *Model) HasOfflineMapLoaded() bool {
	if o != nil && !IsNil(o.OfflineMapLoaded) {
		return true
	}

	return false
}

// SetOfflineMapLoaded gets a reference to the given bool and assigns it to the OfflineMapLoaded field.
func (o *Model) SetOfflineMapLoaded(v bool) {
	o.OfflineMapLoaded = &v
}

// GetOnlineMapEnabled returns the OnlineMapEnabled field value if set, zero value otherwise.
func (o *Model) GetOnlineMapEnabled() bool {
	if o == nil || IsNil(o.OnlineMapEnabled) {
		var ret bool
		return ret
	}
	return *o.OnlineMapEnabled
}

// GetOnlineMapEnabledOk returns a tuple with the OnlineMapEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetOnlineMapEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.OnlineMapEnabled) {
		return nil, false
	}
	return o.OnlineMapEnabled, true
}

// HasOnlineMapEnabled returns a boolean if a field has been set.
func (o *Model) HasOnlineMapEnabled() bool {
	if o != nil && !IsNil(o.OnlineMapEnabled) {
		return true
	}

	return false
}

// SetOnlineMapEnabled gets a reference to the given bool and assigns it to the OnlineMapEnabled field.
func (o *Model) SetOnlineMapEnabled(v bool) {
	o.OnlineMapEnabled = &v
}

// GetSensorsInfo returns the SensorsInfo field value
func (o *Model) GetSensorsInfo() map[string]Sensor {
	if o == nil {
		var ret map[string]Sensor
		return ret
	}

	return o.SensorsInfo
}

// GetSensorsInfoOk returns a tuple with the SensorsInfo field value
// and a boolean to check if the value has been set.
func (o *Model) GetSensorsInfoOk() (map[string]Sensor, bool) {
	if o == nil {
		return map[string]Sensor{}, false
	}
	return o.SensorsInfo, true
}

// SetSensorsInfo sets field value
func (o *Model) SetSensorsInfo(v map[string]Sensor) {
	o.SensorsInfo = v
}

// GetSettingMode returns the SettingMode field value if set, zero value otherwise.
func (o *Model) GetSettingMode() bool {
	if o == nil || IsNil(o.SettingMode) {
		var ret bool
		return ret
	}
	return *o.SettingMode
}

// GetSettingModeOk returns a tuple with the SettingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetSettingModeOk() (*bool, bool) {
	if o == nil || IsNil(o.SettingMode) {
		return nil, false
	}
	return o.SettingMode, true
}

// HasSettingMode returns a boolean if a field has been set.
func (o *Model) HasSettingMode() bool {
	if o != nil && !IsNil(o.SettingMode) {
		return true
	}

	return false
}

// SetSettingMode gets a reference to the given bool and assigns it to the SettingMode field.
func (o *Model) SetSettingMode(v bool) {
	o.SettingMode = &v
}

// GetShowEnhancedFeatures returns the ShowEnhancedFeatures field value if set, zero value otherwise.
func (o *Model) GetShowEnhancedFeatures() bool {
	if o == nil || IsNil(o.ShowEnhancedFeatures) {
		var ret bool
		return ret
	}
	return *o.ShowEnhancedFeatures
}

// GetShowEnhancedFeaturesOk returns a tuple with the ShowEnhancedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetShowEnhancedFeaturesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowEnhancedFeatures) {
		return nil, false
	}
	return o.ShowEnhancedFeatures, true
}

// HasShowEnhancedFeatures returns a boolean if a field has been set.
func (o *Model) HasShowEnhancedFeatures() bool {
	if o != nil && !IsNil(o.ShowEnhancedFeatures) {
		return true
	}

	return false
}

// SetShowEnhancedFeatures gets a reference to the given bool and assigns it to the ShowEnhancedFeatures field.
func (o *Model) SetShowEnhancedFeatures(v bool) {
	o.ShowEnhancedFeatures = &v
}

// GetTotalDevices returns the TotalDevices field value if set, zero value otherwise.
func (o *Model) GetTotalDevices() int32 {
	if o == nil || IsNil(o.TotalDevices) {
		var ret int32
		return ret
	}
	return *o.TotalDevices
}

// GetTotalDevicesOk returns a tuple with the TotalDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetTotalDevicesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDevices) {
		return nil, false
	}
	return o.TotalDevices, true
}

// HasTotalDevices returns a boolean if a field has been set.
func (o *Model) HasTotalDevices() bool {
	if o != nil && !IsNil(o.TotalDevices) {
		return true
	}

	return false
}

// SetTotalDevices gets a reference to the given int32 and assigns it to the TotalDevices field.
func (o *Model) SetTotalDevices(v int32) {
	o.TotalDevices = &v
}

// GetTotalRemoteIds returns the TotalRemoteIds field value if set, zero value otherwise.
func (o *Model) GetTotalRemoteIds() int32 {
	if o == nil || IsNil(o.TotalRemoteIds) {
		var ret int32
		return ret
	}
	return *o.TotalRemoteIds
}

// GetTotalRemoteIdsOk returns a tuple with the TotalRemoteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetTotalRemoteIdsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRemoteIds) {
		return nil, false
	}
	return o.TotalRemoteIds, true
}

// HasTotalRemoteIds returns a boolean if a field has been set.
func (o *Model) HasTotalRemoteIds() bool {
	if o != nil && !IsNil(o.TotalRemoteIds) {
		return true
	}

	return false
}

// SetTotalRemoteIds gets a reference to the given int32 and assigns it to the TotalRemoteIds field.
func (o *Model) SetTotalRemoteIds(v int32) {
	o.TotalRemoteIds = &v
}

// GetTotalWifiDevices returns the TotalWifiDevices field value if set, zero value otherwise.
func (o *Model) GetTotalWifiDevices() int32 {
	if o == nil || IsNil(o.TotalWifiDevices) {
		var ret int32
		return ret
	}
	return *o.TotalWifiDevices
}

// GetTotalWifiDevicesOk returns a tuple with the TotalWifiDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetTotalWifiDevicesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalWifiDevices) {
		return nil, false
	}
	return o.TotalWifiDevices, true
}

// HasTotalWifiDevices returns a boolean if a field has been set.
func (o *Model) HasTotalWifiDevices() bool {
	if o != nil && !IsNil(o.TotalWifiDevices) {
		return true
	}

	return false
}

// SetTotalWifiDevices gets a reference to the given int32 and assigns it to the TotalWifiDevices field.
func (o *Model) SetTotalWifiDevices(v int32) {
	o.TotalWifiDevices = &v
}

// GetUnknownWifiDevicesInfo returns the UnknownWifiDevicesInfo field value
func (o *Model) GetUnknownWifiDevicesInfo() map[string]DroneWifiDevice {
	if o == nil {
		var ret map[string]DroneWifiDevice
		return ret
	}

	return o.UnknownWifiDevicesInfo
}

// GetUnknownWifiDevicesInfoOk returns a tuple with the UnknownWifiDevicesInfo field value
// and a boolean to check if the value has been set.
func (o *Model) GetUnknownWifiDevicesInfoOk() (map[string]DroneWifiDevice, bool) {
	if o == nil {
		return map[string]DroneWifiDevice{}, false
	}
	return o.UnknownWifiDevicesInfo, true
}

// SetUnknownWifiDevicesInfo sets field value
func (o *Model) SetUnknownWifiDevicesInfo(v map[string]DroneWifiDevice) {
	o.UnknownWifiDevicesInfo = v
}

// GetUpgradeStatus returns the UpgradeStatus field value if set, zero value otherwise.
func (o *Model) GetUpgradeStatus() map[string]interface{} {
	if o == nil || IsNil(o.UpgradeStatus) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpgradeStatus
}

// GetUpgradeStatusOk returns a tuple with the UpgradeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetUpgradeStatusOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpgradeStatus) {
		return map[string]interface{}{}, false
	}
	return o.UpgradeStatus, true
}

// HasUpgradeStatus returns a boolean if a field has been set.
func (o *Model) HasUpgradeStatus() bool {
	if o != nil && !IsNil(o.UpgradeStatus) {
		return true
	}

	return false
}

// SetUpgradeStatus gets a reference to the given map[string]interface{} and assigns it to the UpgradeStatus field.
func (o *Model) SetUpgradeStatus(v map[string]interface{}) {
	o.UpgradeStatus = v
}

// GetUserLocations returns the UserLocations field value if set, zero value otherwise.
func (o *Model) GetUserLocations() map[string]interface{} {
	if o == nil || IsNil(o.UserLocations) {
		var ret map[string]interface{}
		return ret
	}
	return o.UserLocations
}

// GetUserLocationsOk returns a tuple with the UserLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetUserLocationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UserLocations) {
		return map[string]interface{}{}, false
	}
	return o.UserLocations, true
}

// HasUserLocations returns a boolean if a field has been set.
func (o *Model) HasUserLocations() bool {
	if o != nil && !IsNil(o.UserLocations) {
		return true
	}

	return false
}

// SetUserLocations gets a reference to the given map[string]interface{} and assigns it to the UserLocations field.
func (o *Model) SetUserLocations(v map[string]interface{}) {
	o.UserLocations = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Model) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Model) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Model) SetVersion(v string) {
	o.Version = &v
}

func (o Model) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Model) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CenterLocation) {
		toSerialize["center_location"] = o.CenterLocation
	}
	if !IsNil(o.DbMigrationError) {
		toSerialize["db_migration_error"] = o.DbMigrationError
	}
	if !IsNil(o.DefenseStatus) {
		toSerialize["defense_status"] = o.DefenseStatus
	}
	toSerialize["devices_info"] = o.DevicesInfo
	if !IsNil(o.DroneListEnabled) {
		toSerialize["drone_list_enabled"] = o.DroneListEnabled
	}
	if !IsNil(o.GpsLimit) {
		toSerialize["gps_limit"] = o.GpsLimit
	}
	if !IsNil(o.HasDanger) {
		toSerialize["has_danger"] = o.HasDanger
	}
	if !IsNil(o.HideDefenseFeatures) {
		toSerialize["hide_defense_features"] = o.HideDefenseFeatures
	}
	if !IsNil(o.HideDetectionPage) {
		toSerialize["hide_detection_page"] = o.HideDetectionPage
	}
	if !IsNil(o.HideSpectrumPage) {
		toSerialize["hide_spectrum_page"] = o.HideSpectrumPage
	}
	if !IsNil(o.IsAllExpired) {
		toSerialize["is_all_expired"] = o.IsAllExpired
	}
	if !IsNil(o.IsAnchorServer) {
		toSerialize["is_anchor_server"] = o.IsAnchorServer
	}
	if !IsNil(o.IsLocalMode) {
		toSerialize["is_local_mode"] = o.IsLocalMode
	}
	if !IsNil(o.IsRemoteIdEnabled) {
		toSerialize["is_remote_id_enabled"] = o.IsRemoteIdEnabled
	}
	if !IsNil(o.IsUnknownWifiEnabled) {
		toSerialize["is_unknown_wifi_enabled"] = o.IsUnknownWifiEnabled
	}
	if !IsNil(o.LfRadius) {
		toSerialize["lf_radius"] = o.LfRadius
	}
	if !IsNil(o.NonAiIgnorable) {
		toSerialize["non_ai_ignorable"] = o.NonAiIgnorable
	}
	if !IsNil(o.NondfResult) {
		toSerialize["nondf_result"] = o.NondfResult
	}
	if !IsNil(o.OfflineMapLoaded) {
		toSerialize["offline_map_loaded"] = o.OfflineMapLoaded
	}
	if !IsNil(o.OnlineMapEnabled) {
		toSerialize["online_map_enabled"] = o.OnlineMapEnabled
	}
	toSerialize["sensors_info"] = o.SensorsInfo
	if !IsNil(o.SettingMode) {
		toSerialize["setting_mode"] = o.SettingMode
	}
	if !IsNil(o.ShowEnhancedFeatures) {
		toSerialize["show_enhanced_features"] = o.ShowEnhancedFeatures
	}
	if !IsNil(o.TotalDevices) {
		toSerialize["total_devices"] = o.TotalDevices
	}
	if !IsNil(o.TotalRemoteIds) {
		toSerialize["total_remote_ids"] = o.TotalRemoteIds
	}
	if !IsNil(o.TotalWifiDevices) {
		toSerialize["total_wifi_devices"] = o.TotalWifiDevices
	}
	toSerialize["unknown_wifi_devices_info"] = o.UnknownWifiDevicesInfo
	if !IsNil(o.UpgradeStatus) {
		toSerialize["upgrade_status"] = o.UpgradeStatus
	}
	if !IsNil(o.UserLocations) {
		toSerialize["user_locations"] = o.UserLocations
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

func (o *Model) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"devices_info",
		"sensors_info",
		"unknown_wifi_devices_info",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModel := _Model{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModel)

	if err != nil {
		return err
	}

	*o = Model(varModel)

	return err
}

type NullableModel struct {
	value *Model
	isSet bool
}

func (v NullableModel) Get() *Model {
	return v.value
}

func (v *NullableModel) Set(val *Model) {
	v.value = val
	v.isSet = true
}

func (v NullableModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel(val *Model) *NullableModel {
	return &NullableModel{value: val, isSet: true}
}

func (v NullableModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


