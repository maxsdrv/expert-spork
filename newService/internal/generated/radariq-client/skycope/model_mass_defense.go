/*


Description text

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skycope

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MassDefense type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassDefense{}

// MassDefense struct for MassDefense
type MassDefense struct {
	Azimuth int32 `json:"azimuth"`
	Current *int32 `json:"current,omitempty"`
	DirectionalDefense bool `json:"directional_defense"`
	Duration int32 `json:"duration"`
	Frequency []string `json:"frequency"`
	FrequencyOptions []FrequencyOption `json:"frequencyOptions"`
	InProgress bool `json:"in_progress"`
	SensorName string `json:"sensor_name"`
	Strategy string `json:"strategy"`
	TimingOptions []int32 `json:"timingOptions"`
}

type _MassDefense MassDefense

// NewMassDefense instantiates a new MassDefense object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassDefense(azimuth int32, directionalDefense bool, duration int32, frequency []string, frequencyOptions []FrequencyOption, inProgress bool, sensorName string, strategy string, timingOptions []int32) *MassDefense {
	this := MassDefense{}
	this.Azimuth = azimuth
	this.DirectionalDefense = directionalDefense
	this.Duration = duration
	this.Frequency = frequency
	this.FrequencyOptions = frequencyOptions
	this.InProgress = inProgress
	this.SensorName = sensorName
	this.Strategy = strategy
	this.TimingOptions = timingOptions
	return &this
}

// NewMassDefenseWithDefaults instantiates a new MassDefense object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassDefenseWithDefaults() *MassDefense {
	this := MassDefense{}
	return &this
}

// GetAzimuth returns the Azimuth field value
func (o *MassDefense) GetAzimuth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Azimuth
}

// GetAzimuthOk returns a tuple with the Azimuth field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetAzimuthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Azimuth, true
}

// SetAzimuth sets field value
func (o *MassDefense) SetAzimuth(v int32) {
	o.Azimuth = v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *MassDefense) GetCurrent() int32 {
	if o == nil || IsNil(o.Current) {
		var ret int32
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassDefense) GetCurrentOk() (*int32, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *MassDefense) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given int32 and assigns it to the Current field.
func (o *MassDefense) SetCurrent(v int32) {
	o.Current = &v
}

// GetDirectionalDefense returns the DirectionalDefense field value
func (o *MassDefense) GetDirectionalDefense() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DirectionalDefense
}

// GetDirectionalDefenseOk returns a tuple with the DirectionalDefense field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetDirectionalDefenseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DirectionalDefense, true
}

// SetDirectionalDefense sets field value
func (o *MassDefense) SetDirectionalDefense(v bool) {
	o.DirectionalDefense = v
}

// GetDuration returns the Duration field value
func (o *MassDefense) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *MassDefense) SetDuration(v int32) {
	o.Duration = v
}

// GetFrequency returns the Frequency field value
func (o *MassDefense) GetFrequency() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetFrequencyOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Frequency, true
}

// SetFrequency sets field value
func (o *MassDefense) SetFrequency(v []string) {
	o.Frequency = v
}

// GetFrequencyOptions returns the FrequencyOptions field value
func (o *MassDefense) GetFrequencyOptions() []FrequencyOption {
	if o == nil {
		var ret []FrequencyOption
		return ret
	}

	return o.FrequencyOptions
}

// GetFrequencyOptionsOk returns a tuple with the FrequencyOptions field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetFrequencyOptionsOk() ([]FrequencyOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.FrequencyOptions, true
}

// SetFrequencyOptions sets field value
func (o *MassDefense) SetFrequencyOptions(v []FrequencyOption) {
	o.FrequencyOptions = v
}

// GetInProgress returns the InProgress field value
func (o *MassDefense) GetInProgress() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetInProgressOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InProgress, true
}

// SetInProgress sets field value
func (o *MassDefense) SetInProgress(v bool) {
	o.InProgress = v
}

// GetSensorName returns the SensorName field value
func (o *MassDefense) GetSensorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SensorName
}

// GetSensorNameOk returns a tuple with the SensorName field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetSensorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SensorName, true
}

// SetSensorName sets field value
func (o *MassDefense) SetSensorName(v string) {
	o.SensorName = v
}

// GetStrategy returns the Strategy field value
func (o *MassDefense) GetStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *MassDefense) SetStrategy(v string) {
	o.Strategy = v
}

// GetTimingOptions returns the TimingOptions field value
func (o *MassDefense) GetTimingOptions() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.TimingOptions
}

// GetTimingOptionsOk returns a tuple with the TimingOptions field value
// and a boolean to check if the value has been set.
func (o *MassDefense) GetTimingOptionsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimingOptions, true
}

// SetTimingOptions sets field value
func (o *MassDefense) SetTimingOptions(v []int32) {
	o.TimingOptions = v
}

func (o MassDefense) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassDefense) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["azimuth"] = o.Azimuth
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	toSerialize["directional_defense"] = o.DirectionalDefense
	toSerialize["duration"] = o.Duration
	toSerialize["frequency"] = o.Frequency
	toSerialize["frequencyOptions"] = o.FrequencyOptions
	toSerialize["in_progress"] = o.InProgress
	toSerialize["sensor_name"] = o.SensorName
	toSerialize["strategy"] = o.Strategy
	toSerialize["timingOptions"] = o.TimingOptions
	return toSerialize, nil
}

func (o *MassDefense) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"azimuth",
		"directional_defense",
		"duration",
		"frequency",
		"frequencyOptions",
		"in_progress",
		"sensor_name",
		"strategy",
		"timingOptions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMassDefense := _MassDefense{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMassDefense)

	if err != nil {
		return err
	}

	*o = MassDefense(varMassDefense)

	return err
}

type NullableMassDefense struct {
	value *MassDefense
	isSet bool
}

func (v NullableMassDefense) Get() *MassDefense {
	return v.value
}

func (v *NullableMassDefense) Set(val *MassDefense) {
	v.value = val
	v.isSet = true
}

func (v NullableMassDefense) IsSet() bool {
	return v.isSet
}

func (v *NullableMassDefense) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassDefense(val *MassDefense) *NullableMassDefense {
	return &NullableMassDefense{value: val, isSet: true}
}

func (v NullableMassDefense) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassDefense) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


