/*


Description text

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skycope

import (
	"encoding/json"
)

// checks if the Actions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Actions{}

// Actions struct for Actions
type Actions struct {
	CanCancelDefense *bool `json:"can_cancel_defense,omitempty"`
	CanFriend *bool `json:"can_friend,omitempty"`
	CanIgnore *bool `json:"can_ignore,omitempty"`
	CanLdvalTest *bool `json:"can_ldval_test,omitempty"`
	CanManualDefend *bool `json:"can_manual_defend,omitempty"`
	CanSmartDefend *bool `json:"can_smart_defend,omitempty"`
	IsDecrypted *bool `json:"is_decrypted,omitempty"`
	IsSpoofable *int32 `json:"is_spoofable,omitempty"`
}

// NewActions instantiates a new Actions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActions() *Actions {
	this := Actions{}
	return &this
}

// NewActionsWithDefaults instantiates a new Actions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsWithDefaults() *Actions {
	this := Actions{}
	return &this
}

// GetCanCancelDefense returns the CanCancelDefense field value if set, zero value otherwise.
func (o *Actions) GetCanCancelDefense() bool {
	if o == nil || IsNil(o.CanCancelDefense) {
		var ret bool
		return ret
	}
	return *o.CanCancelDefense
}

// GetCanCancelDefenseOk returns a tuple with the CanCancelDefense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetCanCancelDefenseOk() (*bool, bool) {
	if o == nil || IsNil(o.CanCancelDefense) {
		return nil, false
	}
	return o.CanCancelDefense, true
}

// HasCanCancelDefense returns a boolean if a field has been set.
func (o *Actions) HasCanCancelDefense() bool {
	if o != nil && !IsNil(o.CanCancelDefense) {
		return true
	}

	return false
}

// SetCanCancelDefense gets a reference to the given bool and assigns it to the CanCancelDefense field.
func (o *Actions) SetCanCancelDefense(v bool) {
	o.CanCancelDefense = &v
}

// GetCanFriend returns the CanFriend field value if set, zero value otherwise.
func (o *Actions) GetCanFriend() bool {
	if o == nil || IsNil(o.CanFriend) {
		var ret bool
		return ret
	}
	return *o.CanFriend
}

// GetCanFriendOk returns a tuple with the CanFriend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetCanFriendOk() (*bool, bool) {
	if o == nil || IsNil(o.CanFriend) {
		return nil, false
	}
	return o.CanFriend, true
}

// HasCanFriend returns a boolean if a field has been set.
func (o *Actions) HasCanFriend() bool {
	if o != nil && !IsNil(o.CanFriend) {
		return true
	}

	return false
}

// SetCanFriend gets a reference to the given bool and assigns it to the CanFriend field.
func (o *Actions) SetCanFriend(v bool) {
	o.CanFriend = &v
}

// GetCanIgnore returns the CanIgnore field value if set, zero value otherwise.
func (o *Actions) GetCanIgnore() bool {
	if o == nil || IsNil(o.CanIgnore) {
		var ret bool
		return ret
	}
	return *o.CanIgnore
}

// GetCanIgnoreOk returns a tuple with the CanIgnore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetCanIgnoreOk() (*bool, bool) {
	if o == nil || IsNil(o.CanIgnore) {
		return nil, false
	}
	return o.CanIgnore, true
}

// HasCanIgnore returns a boolean if a field has been set.
func (o *Actions) HasCanIgnore() bool {
	if o != nil && !IsNil(o.CanIgnore) {
		return true
	}

	return false
}

// SetCanIgnore gets a reference to the given bool and assigns it to the CanIgnore field.
func (o *Actions) SetCanIgnore(v bool) {
	o.CanIgnore = &v
}

// GetCanLdvalTest returns the CanLdvalTest field value if set, zero value otherwise.
func (o *Actions) GetCanLdvalTest() bool {
	if o == nil || IsNil(o.CanLdvalTest) {
		var ret bool
		return ret
	}
	return *o.CanLdvalTest
}

// GetCanLdvalTestOk returns a tuple with the CanLdvalTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetCanLdvalTestOk() (*bool, bool) {
	if o == nil || IsNil(o.CanLdvalTest) {
		return nil, false
	}
	return o.CanLdvalTest, true
}

// HasCanLdvalTest returns a boolean if a field has been set.
func (o *Actions) HasCanLdvalTest() bool {
	if o != nil && !IsNil(o.CanLdvalTest) {
		return true
	}

	return false
}

// SetCanLdvalTest gets a reference to the given bool and assigns it to the CanLdvalTest field.
func (o *Actions) SetCanLdvalTest(v bool) {
	o.CanLdvalTest = &v
}

// GetCanManualDefend returns the CanManualDefend field value if set, zero value otherwise.
func (o *Actions) GetCanManualDefend() bool {
	if o == nil || IsNil(o.CanManualDefend) {
		var ret bool
		return ret
	}
	return *o.CanManualDefend
}

// GetCanManualDefendOk returns a tuple with the CanManualDefend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetCanManualDefendOk() (*bool, bool) {
	if o == nil || IsNil(o.CanManualDefend) {
		return nil, false
	}
	return o.CanManualDefend, true
}

// HasCanManualDefend returns a boolean if a field has been set.
func (o *Actions) HasCanManualDefend() bool {
	if o != nil && !IsNil(o.CanManualDefend) {
		return true
	}

	return false
}

// SetCanManualDefend gets a reference to the given bool and assigns it to the CanManualDefend field.
func (o *Actions) SetCanManualDefend(v bool) {
	o.CanManualDefend = &v
}

// GetCanSmartDefend returns the CanSmartDefend field value if set, zero value otherwise.
func (o *Actions) GetCanSmartDefend() bool {
	if o == nil || IsNil(o.CanSmartDefend) {
		var ret bool
		return ret
	}
	return *o.CanSmartDefend
}

// GetCanSmartDefendOk returns a tuple with the CanSmartDefend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetCanSmartDefendOk() (*bool, bool) {
	if o == nil || IsNil(o.CanSmartDefend) {
		return nil, false
	}
	return o.CanSmartDefend, true
}

// HasCanSmartDefend returns a boolean if a field has been set.
func (o *Actions) HasCanSmartDefend() bool {
	if o != nil && !IsNil(o.CanSmartDefend) {
		return true
	}

	return false
}

// SetCanSmartDefend gets a reference to the given bool and assigns it to the CanSmartDefend field.
func (o *Actions) SetCanSmartDefend(v bool) {
	o.CanSmartDefend = &v
}

// GetIsDecrypted returns the IsDecrypted field value if set, zero value otherwise.
func (o *Actions) GetIsDecrypted() bool {
	if o == nil || IsNil(o.IsDecrypted) {
		var ret bool
		return ret
	}
	return *o.IsDecrypted
}

// GetIsDecryptedOk returns a tuple with the IsDecrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetIsDecryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDecrypted) {
		return nil, false
	}
	return o.IsDecrypted, true
}

// HasIsDecrypted returns a boolean if a field has been set.
func (o *Actions) HasIsDecrypted() bool {
	if o != nil && !IsNil(o.IsDecrypted) {
		return true
	}

	return false
}

// SetIsDecrypted gets a reference to the given bool and assigns it to the IsDecrypted field.
func (o *Actions) SetIsDecrypted(v bool) {
	o.IsDecrypted = &v
}

// GetIsSpoofable returns the IsSpoofable field value if set, zero value otherwise.
func (o *Actions) GetIsSpoofable() int32 {
	if o == nil || IsNil(o.IsSpoofable) {
		var ret int32
		return ret
	}
	return *o.IsSpoofable
}

// GetIsSpoofableOk returns a tuple with the IsSpoofable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Actions) GetIsSpoofableOk() (*int32, bool) {
	if o == nil || IsNil(o.IsSpoofable) {
		return nil, false
	}
	return o.IsSpoofable, true
}

// HasIsSpoofable returns a boolean if a field has been set.
func (o *Actions) HasIsSpoofable() bool {
	if o != nil && !IsNil(o.IsSpoofable) {
		return true
	}

	return false
}

// SetIsSpoofable gets a reference to the given int32 and assigns it to the IsSpoofable field.
func (o *Actions) SetIsSpoofable(v int32) {
	o.IsSpoofable = &v
}

func (o Actions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Actions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanCancelDefense) {
		toSerialize["can_cancel_defense"] = o.CanCancelDefense
	}
	if !IsNil(o.CanFriend) {
		toSerialize["can_friend"] = o.CanFriend
	}
	if !IsNil(o.CanIgnore) {
		toSerialize["can_ignore"] = o.CanIgnore
	}
	if !IsNil(o.CanLdvalTest) {
		toSerialize["can_ldval_test"] = o.CanLdvalTest
	}
	if !IsNil(o.CanManualDefend) {
		toSerialize["can_manual_defend"] = o.CanManualDefend
	}
	if !IsNil(o.CanSmartDefend) {
		toSerialize["can_smart_defend"] = o.CanSmartDefend
	}
	if !IsNil(o.IsDecrypted) {
		toSerialize["is_decrypted"] = o.IsDecrypted
	}
	if !IsNil(o.IsSpoofable) {
		toSerialize["is_spoofable"] = o.IsSpoofable
	}
	return toSerialize, nil
}

type NullableActions struct {
	value *Actions
	isSet bool
}

func (v NullableActions) Get() *Actions {
	return v.value
}

func (v *NullableActions) Set(val *Actions) {
	v.value = val
	v.isSet = true
}

func (v NullableActions) IsSet() bool {
	return v.isSet
}

func (v *NullableActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActions(val *Actions) *NullableActions {
	return &NullableActions{value: val, isSet: true}
}

func (v NullableActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


