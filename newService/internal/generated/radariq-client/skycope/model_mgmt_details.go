/*


Description text

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package skycope

import (
	"encoding/json"
)

// checks if the MgmtDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MgmtDetails{}

// MgmtDetails struct for MgmtDetails
type MgmtDetails struct {
	Module1 *Module1 `json:"Module 1,omitempty"`
}

// NewMgmtDetails instantiates a new MgmtDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMgmtDetails() *MgmtDetails {
	this := MgmtDetails{}
	return &this
}

// NewMgmtDetailsWithDefaults instantiates a new MgmtDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMgmtDetailsWithDefaults() *MgmtDetails {
	this := MgmtDetails{}
	return &this
}

// GetModule1 returns the Module1 field value if set, zero value otherwise.
func (o *MgmtDetails) GetModule1() Module1 {
	if o == nil || IsNil(o.Module1) {
		var ret Module1
		return ret
	}
	return *o.Module1
}

// GetModule1Ok returns a tuple with the Module1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MgmtDetails) GetModule1Ok() (*Module1, bool) {
	if o == nil || IsNil(o.Module1) {
		return nil, false
	}
	return o.Module1, true
}

// HasModule1 returns a boolean if a field has been set.
func (o *MgmtDetails) HasModule1() bool {
	if o != nil && !IsNil(o.Module1) {
		return true
	}

	return false
}

// SetModule1 gets a reference to the given Module1 and assigns it to the Module1 field.
func (o *MgmtDetails) SetModule1(v Module1) {
	o.Module1 = &v
}

func (o MgmtDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MgmtDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Module1) {
		toSerialize["Module 1"] = o.Module1
	}
	return toSerialize, nil
}

type NullableMgmtDetails struct {
	value *MgmtDetails
	isSet bool
}

func (v NullableMgmtDetails) Get() *MgmtDetails {
	return v.value
}

func (v *NullableMgmtDetails) Set(val *MgmtDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMgmtDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMgmtDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMgmtDetails(val *MgmtDetails) *NullableMgmtDetails {
	return &NullableMgmtDetails{value: val, isSet: true}
}

func (v NullableMgmtDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMgmtDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


